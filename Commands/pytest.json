{
  "Comment": "This command info is generated from fig",
  "Name": "pytest",
  "Description": "",
  "Arguments": [
    {
      "Arguments": [
        {
          "Name": "--assert",
          "Description": "Control assertion debugging tools. \u0027plain\u0027 performs no assertion debugging. \u0027rewrite\u0027 (the default) rewrites assert statements in test modules on import to provide assert expression information",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "Mode",
                  "Description": "Mode",
                  "Type": "String"
                },
                {
                  "Name": "plain",
                  "Description": "Mode"
                },
                {
                  "Name": "rewrite",
                  "Description": "Mode"
                }
              ]
            }
          ]
        },
        {
          "Name": "--basetemp",
          "Description": "Base temporary directory for this test run.(warning: this directory is removed if it exists)",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "Directory",
                  "Description": "Directory",
                  "Type": "Directory"
                }
              ]
            }
          ]
        },
        {
          "Name": "c",
          "Description": "Load configuration from \u0060file\u0060 instead of trying to locate one of the implicit configuration files",
          "Type": "Flag",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "File",
                  "Description": "File",
                  "Type": "FileSystemEntry"
                }
              ]
            }
          ]
        },
        {
          "Name": "--cache-clear",
          "Description": "Remove all cache contents at start of test run",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--cache-show",
          "Description": "Show cache contents, don\u0027t perform collection or tests. Optional argument: glob (default: \u0027*\u0027)",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "Glob",
                  "Description": "Glob",
                  "Type": "String"
                }
              ],
              "Optional": true
            }
          ]
        },
        {
          "Name": "--capture",
          "Description": "Per-test capturing method",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "Method",
                  "Description": "Method",
                  "Type": "String"
                },
                {
                  "Name": "fd",
                  "Description": "Method"
                },
                {
                  "Name": "sys",
                  "Description": "Method"
                },
                {
                  "Name": "no",
                  "Description": "Method"
                },
                {
                  "Name": "tee-sys",
                  "Description": "Method"
                }
              ]
            }
          ]
        },
        {
          "Name": "--code-highlight",
          "Description": "Whether code should be highlighted (only if --color is also enabled)",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "Highlight",
                  "Description": "Highlight",
                  "Type": "String"
                },
                {
                  "Name": "yes",
                  "Description": "Highlight"
                },
                {
                  "Name": "no",
                  "Description": "Highlight"
                }
              ]
            }
          ]
        },
        {
          "Name": "--co",
          "Description": "Only collect tests, don\u0027t execute them",
          "Aliases": [
            "--collect-only"
          ],
          "Arguments": []
        },
        {
          "Name": "--collect-in-virtualenv",
          "Description": "Don\u0027t ignore tests in a local virtualenv directory",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--color",
          "Description": "Color terminal output",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "Color",
                  "Description": "Color",
                  "Type": "String"
                },
                {
                  "Name": "yes",
                  "Description": "Color"
                },
                {
                  "Name": "no",
                  "Description": "Color"
                },
                {
                  "Name": "auto",
                  "Description": "Color"
                }
              ]
            }
          ]
        },
        {
          "Name": "--confcutdir",
          "Description": "Only load conftest.py\u0027s relative to specified dir",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "Dir",
                  "Description": "Dir",
                  "Type": "Directory"
                }
              ]
            }
          ]
        },
        {
          "Name": "--continue-on-collection-errors",
          "Description": "Force test execution even if collection errors occur",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--debug",
          "Description": "Store internal tracing debug information in this log file. This file is opened with \u0027w\u0027 and truncated as a result, care advised. Defaults to \u0027pytestdebug.log\u0027",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "Debug File Name",
                  "Description": "Debug File Name",
                  "Type": "String"
                }
              ],
              "Optional": true
            }
          ]
        },
        {
          "Name": "--durations",
          "Description": "Show N slowest setup/test durations (N=0 for all)",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "N",
                  "Description": "N",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "--durations-min",
          "Description": "Minimal duration in seconds for inclusion in slowest list",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "N",
                  "Description": "N",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "--deselect",
          "Description": "Deselect item (via node id prefix) during collection (multi-allowed)",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "nodeid_prefix",
                  "Description": "nodeid_prefix",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "--disable-warnings",
          "Description": "Disable warnings summary",
          "Aliases": [
            "--disable-pytest-warnings"
          ],
          "Arguments": []
        },
        {
          "Name": "--doctest-continue-on-failure",
          "Description": "For a given doctest, continue to run after the first failure",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--doctest-ignore-import-errors",
          "Description": "Ignore doctest ImportErrors",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--doctest-modules",
          "Description": "Run doctests in all .py modules",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--doctest-report",
          "Description": "Choose another output format for diffs on doctest failure",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "Output format",
                  "Description": "Output format",
                  "Type": "String"
                },
                {
                  "Name": "none",
                  "Description": "Output format"
                },
                {
                  "Name": "cdiff",
                  "Description": "Output format"
                },
                {
                  "Name": "ndiff",
                  "Description": "Output format"
                },
                {
                  "Name": "udiff",
                  "Description": "Output format"
                },
                {
                  "Name": "only_first_failure",
                  "Description": "Output format"
                }
              ]
            }
          ]
        },
        {
          "Name": "--doctest-glob",
          "Description": "Doctests file matching pattern, default: test*.txt",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "Pattern",
                  "Description": "Pattern",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "--exitfirst",
          "Description": "Exit instantly on first error or failed test",
          "Aliases": [
            "-x"
          ],
          "Arguments": []
        },
        {
          "Name": "--failed-first",
          "Description": "Run all tests, but run the last failures first",
          "Aliases": [
            "--ff"
          ],
          "Arguments": []
        },
        {
          "Name": "--fixtures",
          "Description": "Shows builtin and custom fixtures. Note that this command omits fixtures with leading _ unless the -v option is added",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--fixtures-per-test",
          "Description": "Show fixtures per test",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--full-trace",
          "Description": "Don\u0027t cut any tracebacks (default is to cut)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--help",
          "Description": "This shows help on command line and config-line options",
          "Aliases": [
            "-h"
          ],
          "Arguments": []
        },
        {
          "Name": "--ignore",
          "Description": "Ignore path during collection (multi-allowed)",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "Path",
                  "Description": "Path",
                  "Type": "FileSystemEntry"
                }
              ]
            }
          ]
        },
        {
          "Name": "--ignore-glob",
          "Description": "Ignore path pattern during collection (multi-allowed)",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "Path",
                  "Description": "Path",
                  "Type": "FileSystemEntry"
                }
              ]
            }
          ]
        },
        {
          "Name": "--import-mode",
          "Description": "Prepend/append to sys.path when importing test modules and conftest files, default is to prepend",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "Mode",
                  "Description": "Mode",
                  "Type": "String"
                },
                {
                  "Name": "prepend",
                  "Description": "Mode"
                },
                {
                  "Name": "append",
                  "Description": "Mode"
                },
                {
                  "Name": "importlib",
                  "Description": "Mode"
                }
              ]
            }
          ]
        },
        {
          "Name": "--junit-xml",
          "Description": "Create junit-xml style report file at given path",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "Path",
                  "Description": "Path",
                  "Type": "FileSystemEntry"
                }
              ]
            }
          ]
        },
        {
          "Name": "--junit-prefix",
          "Description": "Prepend prefix to classnames in junit-xml output",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "Str",
                  "Description": "Str",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "k",
          "Description": "Only run tests which match the given substring expression. An expression is a python evaluatable expression where all names are substring-matched against test names and their parent classes. Example: -k \u0027test_method or test_other\u0027 matches all test functions and classes whose name contains \u0027test_method\u0027 or \u0027test_other\u0027, while -k \u0027not test_method\u0027 matches those that don\u0027t contain \u0027test_method\u0027 in their names. -k \u0027not test_method and not test_other\u0027 will eliminate the matches. Additionally keywords are matched to classes and functions containing extra names in their \u0027extra_keyword_matches\u0027 set, as well as functions which have names assigned directly to them. The matching is case- insensitive",
          "Type": "Flag",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "Expression",
                  "Description": "Expression",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "--keep-duplicates",
          "Description": "Keep duplicate tests",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--showlocals",
          "Description": "Show locals in tracebacks (disabled by default)",
          "Aliases": [
            "-l"
          ],
          "Arguments": []
        },
        {
          "Name": "--last-failed-no-failures",
          "Description": "Which tests to run with no previously (known) failures",
          "Aliases": [
            "--lfnf"
          ],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "Tests",
                  "Description": "Tests",
                  "Type": "String"
                },
                {
                  "Name": "all",
                  "Description": "Tests"
                },
                {
                  "Name": "none",
                  "Description": "Tests"
                }
              ]
            }
          ]
        },
        {
          "Name": "--last-failed",
          "Description": "Rerun only the tests that failed at the last run (or all if none failed)",
          "Aliases": [
            "--lf"
          ],
          "Arguments": []
        },
        {
          "Name": "--log-auto-indent",
          "Description": "Auto-indent multiline messages passed to the logging module. Accepts true|on, false|off or an integer",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "Log Auto Indent Setting",
                  "Description": "Log Auto Indent Setting",
                  "Type": "String"
                },
                {
                  "Name": "true",
                  "Description": "Log Auto Indent Setting"
                },
                {
                  "Name": "false",
                  "Description": "Log Auto Indent Setting"
                }
              ]
            }
          ]
        },
        {
          "Name": "--log-cli-level",
          "Description": "Cli logging level",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "Log CLI Level",
                  "Description": "Log CLI Level",
                  "Type": "String"
                },
                {
                  "Name": "CRITICAL",
                  "Description": "Log CLI Level"
                },
                {
                  "Name": "ERROR",
                  "Description": "Log CLI Level"
                },
                {
                  "Name": "WARNING",
                  "Description": "Log CLI Level"
                },
                {
                  "Name": "INFO",
                  "Description": "Log CLI Level"
                },
                {
                  "Name": "DEBUG",
                  "Description": "Log CLI Level"
                }
              ]
            }
          ]
        },
        {
          "Name": "--log-cli-format",
          "Description": "Log format as used by the logging module",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "Log CLI Format",
                  "Description": "Log CLI Format",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "--log-cli-date-format",
          "Description": "Log date format as used by the logging module",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "Log CLI Date Format",
                  "Description": "Log CLI Date Format",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "--log-date-format",
          "Description": "Log date format as used by the logging module",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "Log Date Format",
                  "Description": "Log Date Format",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "--log-format",
          "Description": "Log format as used by the logging module",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "Log Format",
                  "Description": "Log Format",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "--log-file",
          "Description": "Path to a file where logging will be written to",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "Log File Path",
                  "Description": "Log File Path",
                  "Type": "FileSystemEntry"
                }
              ]
            }
          ]
        },
        {
          "Name": "--log-file-level",
          "Description": "Log file logging level",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "Log File Level",
                  "Description": "Log File Level",
                  "Type": "String"
                },
                {
                  "Name": "CRITICAL",
                  "Description": "Log File Level"
                },
                {
                  "Name": "ERROR",
                  "Description": "Log File Level"
                },
                {
                  "Name": "WARNING",
                  "Description": "Log File Level"
                },
                {
                  "Name": "INFO",
                  "Description": "Log File Level"
                },
                {
                  "Name": "DEBUG",
                  "Description": "Log File Level"
                }
              ]
            }
          ]
        },
        {
          "Name": "--log-file-date-format",
          "Description": "Log date format as used by the logging module",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "Log File Date Format",
                  "Description": "Log File Date Format",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "--log-file-format",
          "Description": "Log format as used by the logging module",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "Log File Format",
                  "Description": "Log File Format",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "--log-level",
          "Description": "Level of messages to catch/display. Not set by default, so it depends on the root/parent log handler\u0027s effective level, where it is \u0060WARNING\u0060 by default",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "Level",
                  "Description": "Level",
                  "Type": "String"
                },
                {
                  "Name": "CRITICAL",
                  "Description": "Level"
                },
                {
                  "Name": "ERROR",
                  "Description": "Level"
                },
                {
                  "Name": "WARNING",
                  "Description": "Level"
                },
                {
                  "Name": "INFO",
                  "Description": "Level"
                },
                {
                  "Name": "DEBUG",
                  "Description": "Level"
                }
              ]
            }
          ]
        },
        {
          "Name": "m",
          "Description": "Only run tests matching given mark expression",
          "Type": "Flag",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "Mark Expression",
                  "Description": "Mark Expression",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "--markers",
          "Description": "Show markers (builtin, plugin and per-project ones)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--maxfail",
          "Description": "Exit after first num failures or errors",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "num",
                  "Description": "num",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "--new-first",
          "Description": "Run tests from new files first, then the rest of the tests sorted by file mtime",
          "Aliases": [
            "--nf"
          ],
          "Arguments": []
        },
        {
          "Name": "--noconftest",
          "Description": "Don\u0027t load any conftest.py files",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--no-header",
          "Description": "Disable header",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--no-summary",
          "Description": "Disable summary",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--override-ini",
          "Description": "Override ini option with \u0060option=value\u0060 style\u0060",
          "Aliases": [
            "-o"
          ],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "Override INI",
                  "Description": "Override INI",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "p",
          "Description": "Early-load given plugin module name or entry point (multi-allowed)",
          "Type": "Flag",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "Plugin name",
                  "Description": "Plugin name",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "--pastebin",
          "Description": "Send failed|all info to bpaste.net pastebin service",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "mode",
                  "Description": "mode",
                  "Type": "String"
                },
                {
                  "Name": "failed",
                  "Description": "mode"
                },
                {
                  "Name": "all",
                  "Description": "mode"
                }
              ]
            }
          ]
        },
        {
          "Name": "--pdb",
          "Description": "Start the interactive Python debugger on errors or KeyboardInterrupt",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--pdbcls",
          "Description": "Specify a custom interactive Python debugger for use with --pdb",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "modulename:classname",
                  "Description": "modulename:classname",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "--pyargs",
          "Description": "Try to interpret all arguments as python packages",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--quiet",
          "Description": "Decrease verbosity",
          "Aliases": [
            "-q"
          ],
          "Arguments": []
        },
        {
          "Name": "r",
          "Description": "Show extra test summary info as specified by chars: (f)ailed, (E)rror, (s)kipped, (x)failed, (X)passed, (p)assed, (P)assed with output, (a)ll except passed (p/P), or (A)ll. (w)arnings are enabled by default (see --disable-warnings), \u0027N\u0027 can be used to reset the list. (default: \u0027fE\u0027)",
          "Type": "Flag",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "chars",
                  "Description": "chars",
                  "Type": "String"
                },
                {
                  "Name": "a",
                  "Description": "chars"
                },
                {
                  "Name": "A",
                  "Description": "chars"
                },
                {
                  "Name": "E",
                  "Description": "chars"
                },
                {
                  "Name": "f",
                  "Description": "chars"
                },
                {
                  "Name": "N",
                  "Description": "chars"
                },
                {
                  "Name": "p",
                  "Description": "chars"
                },
                {
                  "Name": "P",
                  "Description": "chars"
                },
                {
                  "Name": "s",
                  "Description": "chars"
                },
                {
                  "Name": "w",
                  "Description": "chars"
                },
                {
                  "Name": "x",
                  "Description": "chars"
                },
                {
                  "Name": "X",
                  "Description": "chars"
                }
              ]
            }
          ]
        },
        {
          "Name": "--rootdir",
          "Description": "Define root directory for tests. Can be relative path: \u0027root_dir\u0027, \u0027./root_dir\u0027, \u0027root_dir/another_dir/\u0027; absolute path: \u0027/home/user/root_dir\u0027; path with variables:\u0027$HOME/root_dir\u0027",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "Root Dir",
                  "Description": "Root Dir",
                  "Type": "Directory"
                }
              ]
            }
          ]
        },
        {
          "Name": "--runxfail",
          "Description": "Report the results of xfail tests as if they were not marked",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "s",
          "Description": "Shortcut for --capture=no",
          "Type": "Flag",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--setup-only",
          "Description": "Only setup fixtures, do not execute tests",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--setup-show",
          "Description": "Show setup of fixtures while executing tests",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--setup-plan",
          "Description": "Show what fixtures and tests would be executed but don\u0027t execute anything",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--show-capture",
          "Description": "Controls how captured stdout/stderr/log is shown on failed tests",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "Capture method",
                  "Description": "Capture method",
                  "Type": "String"
                },
                {
                  "Name": "no",
                  "Description": "Capture method"
                },
                {
                  "Name": "stdout",
                  "Description": "Capture method"
                },
                {
                  "Name": "stderr",
                  "Description": "Capture method"
                },
                {
                  "Name": "log",
                  "Description": "Capture method"
                },
                {
                  "Name": "all",
                  "Description": "Capture method"
                }
              ]
            }
          ]
        },
        {
          "Name": "--stepwise",
          "Description": "Exit on test failure and continue from last failing test next time",
          "Aliases": [
            "--sw"
          ],
          "Arguments": []
        },
        {
          "Name": "--stepwise-skip",
          "Description": "Ignore the first failing test but stop on the next failing test",
          "Aliases": [
            "--sw-skip"
          ],
          "Arguments": []
        },
        {
          "Name": "--strict",
          "Description": "Alias to --strict-markers",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--strict-config",
          "Description": "Any warnings encountered while parsing the \u0060pytest\u0060 section of the configuration file raise errors",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--strict-markers",
          "Description": "Markers not registered in the \u0060markers\u0060 section of the configuration file raise errors",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--tb",
          "Description": "Traceback print mode",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "Traceback print mode",
                  "Description": "Traceback print mode",
                  "Type": "String"
                },
                {
                  "Name": "auto",
                  "Description": "Traceback print mode"
                },
                {
                  "Name": "long",
                  "Description": "Traceback print mode"
                },
                {
                  "Name": "short",
                  "Description": "Traceback print mode"
                },
                {
                  "Name": "line",
                  "Description": "Traceback print mode"
                },
                {
                  "Name": "native",
                  "Description": "Traceback print mode"
                },
                {
                  "Name": "no",
                  "Description": "Traceback print mode"
                }
              ]
            }
          ]
        },
        {
          "Name": "--trace",
          "Description": "Immediately break when running each test",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--trace-config",
          "Description": "Trace considerations of conftest.py files",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--verbose",
          "Description": "Increase verbosity",
          "Aliases": [
            "-v"
          ],
          "Arguments": []
        },
        {
          "Name": "--verbosity",
          "Description": "Set verbosity. Default is 0",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "Verbosity level",
                  "Description": "Verbosity level",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "--version",
          "Description": "Display pytest version and information about plugins. When given twice, also display information about plugins",
          "Aliases": [
            "-V"
          ],
          "Arguments": []
        },
        {
          "Name": "--pythonwarnings",
          "Description": "Set which warnings to report, see -W option of python itself",
          "Aliases": [
            "-W"
          ],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "Warnings to report",
                  "Description": "Warnings to report",
                  "Type": "String"
                }
              ]
            }
          ]
        }
      ],
      "Optional": true
    },
    {
      "Arguments": [
        {
          "Name": "File or Directory",
          "Description": "File or Directory",
          "Type": "FileSystemEntry"
        }
      ],
      "Optional": true
    }
  ]
}