{
  "Comment": "This command info is generated from fig",
  "Name": "bit",
  "Description": "Bit documentation: https://bit.dev/docs",
  "Arguments": [
    {
      "Arguments": [
        {
          "Name": "--version",
          "Description": "Show version",
          "Aliases": [
            "-v"
          ],
          "Arguments": []
        },
        {
          "Name": "--help",
          "Description": "Show help for bit",
          "Aliases": [
            "-h"
          ],
          "Arguments": []
        }
      ],
      "Optional": true
    },
    {
      "Arguments": [
        {
          "Name": "init",
          "Description": "Create or reinitialize an empty workspace",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "--bare",
                  "Description": "",
                  "Aliases": [
                    "-b"
                  ],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "String",
                          "Description": "",
                          "Type": "String"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Name": "--shared",
                  "Description": "",
                  "Aliases": [
                    "-s"
                  ],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "String",
                          "Description": "",
                          "Type": "String"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Name": "--standalone",
                  "Description": "Do not nest component store within .git",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--reset",
                  "Description": "Write missing or damaged Bit files",
                  "Aliases": [
                    "-r"
                  ],
                  "Arguments": []
                },
                {
                  "Name": "--reset-new",
                  "Description": "Reset .bitmap file as if components were newly added",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--reset-lane-new",
                  "Description": "Reset only components belonging to lanes",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--reset-hard",
                  "Description": "Delete all Bit files and directories",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--reset-scope",
                  "Description": "Removes local scope",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--default-directory",
                  "Description": "",
                  "Aliases": [
                    "-d"
                  ],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "String",
                          "Description": "",
                          "Type": "String"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Name": "--default-scope",
                  "Description": "",
                  "Aliases": [],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "String",
                          "Description": "",
                          "Type": "String"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Name": "--package-manager",
                  "Description": "",
                  "Aliases": [
                    "-p"
                  ],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "String",
                          "Description": "",
                          "Type": "String"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Name": "--force",
                  "Description": "Force workspace initialization without clearing local objects",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--harmony",
                  "Description": "DEPRECATED: Harmony is the default now",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--interactive",
                  "Description": "Start an interactive process",
                  "Aliases": [
                    "-I"
                  ],
                  "Arguments": []
                }
              ],
              "Optional": true
            },
            {
              "Arguments": [
                {
                  "Name": "String",
                  "Description": "",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "new",
          "Description": "Create a new workspace from a template",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "--aspect",
                  "Description": "ID of the aspect that registered the template",
                  "Aliases": [
                    "-a"
                  ],
                  "Arguments": []
                },
                {
                  "Name": "--template",
                  "Description": "Env-ID of the template\u0027s owner. Alias for --env",
                  "Aliases": [
                    "-t"
                  ],
                  "Arguments": []
                },
                {
                  "Name": "--env",
                  "Description": "Env-ID of the template. Alias for -t",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--default-scope",
                  "Description": "Set defaultScope in the new workspace\u0027s workspace.jsonc",
                  "Aliases": [
                    "-d"
                  ],
                  "Arguments": []
                },
                {
                  "Name": "--skip-git",
                  "Description": "Skip generation of Git repository in the new workspace",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--empty",
                  "Description": "Skip template\u0027s default component creation",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--load-from",
                  "Description": "Local path to the workspace containing the template",
                  "Aliases": [],
                  "Arguments": []
                }
              ],
              "Optional": true
            },
            {
              "Arguments": [
                {
                  "Name": "String",
                  "Description": "",
                  "Type": "String"
                }
              ]
            },
            {
              "Arguments": [
                {
                  "Name": "String",
                  "Description": "",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "config",
          "Description": "Global config management",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "set",
                  "Description": "Set a global configuration",
                  "Aliases": [],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "String",
                          "Description": "",
                          "Type": "String"
                        }
                      ]
                    },
                    {
                      "Arguments": [
                        {
                          "Name": "String",
                          "Description": "",
                          "Type": "String"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Name": "del",
                  "Description": "Delete given key from global configuration",
                  "Aliases": [],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "String",
                          "Description": "",
                          "Type": "String"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Name": "get",
                  "Description": "Get a value from global configuration",
                  "Aliases": [],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "String",
                          "Description": "",
                          "Type": "String"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Name": "list",
                  "Description": "List all configuration(s)",
                  "Aliases": [],
                  "Arguments": []
                }
              ],
              "DontAllowMultiple": true
            }
          ]
        },
        {
          "Name": "scope-config",
          "Description": "Scope config management\n\nbit scope-config",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "set",
                  "Description": "Set a scope configuration.\n\nUsage: scope-config set \u003Ckey\u003E \u003Cval\u003E",
                  "Aliases": [],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "String",
                          "Description": "",
                          "Type": "String"
                        }
                      ]
                    },
                    {
                      "Arguments": [
                        {
                          "Name": "String",
                          "Description": "",
                          "Type": "String"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Name": "del",
                  "Description": "Delete given key from global configuration.\n\nUsage: scope-config del \u003Ckey\u003E",
                  "Aliases": [],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "String",
                          "Description": "",
                          "Type": "String"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Name": "get",
                  "Description": "Get a scope configuration.\n\nUsage: scope-config get \u003Ckey\u003E",
                  "Aliases": [],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "String",
                          "Description": "",
                          "Type": "String"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Name": "list",
                  "Description": "List all scope configuration(s).\n\nUsage: scope-config list",
                  "Aliases": [],
                  "Arguments": []
                }
              ],
              "DontAllowMultiple": true
            }
          ]
        },
        {
          "Name": "login",
          "Description": "Log in to Bit cloud",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "--cloud-domain",
                  "Description": "Login cloud domain (default bit.cloud)",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--port",
                  "Description": "Port number to open for localhost server",
                  "Aliases": [
                    "-p"
                  ],
                  "Arguments": []
                },
                {
                  "Name": "--suppress-browser-launch",
                  "Description": "Do not open a browser for authentication",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--npmrc-path",
                  "Description": "Path to npmrc file to configure bit.cloud registry",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--skip-registry-config",
                  "Description": "Don\u0027t configure bit.cloud registry",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--machine-name",
                  "Description": "Specify machine-name to pair with the token",
                  "Aliases": [],
                  "Arguments": []
                }
              ],
              "Optional": true
            }
          ]
        },
        {
          "Name": "logout",
          "Description": "Log the CLI out of Bit",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "doctor",
          "Description": "Diagnose a bit workspace",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "--json",
                  "Description": "Return diagnoses in json format",
                  "Aliases": [
                    "-j"
                  ],
                  "Arguments": []
                },
                {
                  "Name": "--list",
                  "Description": "List all available diagnoses",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--save",
                  "Description": "",
                  "Aliases": [
                    "-s"
                  ],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "filePath",
                          "Description": "filePath",
                          "Type": "String"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Name": "--archive",
                  "Description": "",
                  "Aliases": [
                    "-a"
                  ],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "filePath",
                          "Description": "filePath",
                          "Type": "String"
                        }
                      ]
                    }
                  ]
                }
              ],
              "Optional": true
            },
            {
              "Arguments": [
                {
                  "Name": "String",
                  "Description": "",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "completion",
          "Description": "Enable bash/zsh-completion shortcuts for commands and options",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "cli",
          "Description": "EXPERIMENTAL: Enters bit cli program and generates commands list",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "generate",
                  "Description": "Generate an .md file with all commands details",
                  "Aliases": [],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "--metadata",
                          "Description": "Metadata/front-matter to place at the top of the .md file",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--docs",
                          "Description": "Generate the cli-reference.docs.mdx file",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--json",
                          "Description": "Output the commands info as JSON",
                          "Aliases": [
                            "-j"
                          ],
                          "Arguments": []
                        }
                      ],
                      "Optional": true
                    }
                  ]
                }
              ],
              "DontAllowMultiple": true
            }
          ]
        },
        {
          "Name": "help",
          "Description": "Shows help",
          "Aliases": [
            "$0"
          ],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "--internal",
                  "Description": "Show internal commands",
                  "Aliases": [],
                  "Arguments": []
                }
              ],
              "Optional": true
            }
          ]
        },
        {
          "Name": "clear-cache",
          "Description": "Clears Bit\u0027s cache from current working machine",
          "Aliases": [
            "cc"
          ],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "--remote",
                  "Description": "Clear memory cache from a remote scope",
                  "Aliases": [
                    "-r"
                  ],
                  "Arguments": []
                }
              ],
              "Optional": true
            }
          ]
        },
        {
          "Name": "remote",
          "Description": "Manage set of tracked bit scope(s)",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "add",
                  "Description": "Add a bare-scope as a remote, usage: remote add \u003Curl\u003E",
                  "Aliases": [],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "--global",
                          "Description": "Configure a remote bit scope",
                          "Aliases": [
                            "-g"
                          ],
                          "Arguments": []
                        }
                      ],
                      "Optional": true
                    },
                    {
                      "Arguments": [
                        {
                          "Name": "String",
                          "Description": "",
                          "Type": "String"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Name": "del",
                  "Description": "Remove a tracked bit remote: usage: remote del \u003Cname\u003E",
                  "Aliases": [],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "--global",
                          "Description": "Remove a globally configured remote scope",
                          "Aliases": [
                            "-g"
                          ],
                          "Arguments": []
                        }
                      ],
                      "Optional": true
                    },
                    {
                      "Arguments": [
                        {
                          "Name": "String",
                          "Description": "",
                          "Type": "String"
                        }
                      ]
                    }
                  ]
                }
              ],
              "DontAllowMultiple": true
            }
          ]
        },
        {
          "Name": "remove",
          "Description": "Remove component(s) from the local workspace",
          "Aliases": [
            "rm"
          ],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "--track",
                  "Description": "Keep tracking component in .bitmap",
                  "Aliases": [
                    "-t"
                  ],
                  "Arguments": []
                },
                {
                  "Name": "--keep-files",
                  "Description": "Keep component files",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--force",
                  "Description": "Removes the component even if used as a dependency",
                  "Aliases": [
                    "-f"
                  ],
                  "Arguments": []
                },
                {
                  "Name": "--silent",
                  "Description": "Skip confirmation",
                  "Aliases": [
                    "-s"
                  ],
                  "Arguments": []
                }
              ],
              "Optional": true
            },
            {
              "Arguments": [
                {
                  "Name": "String",
                  "Description": "",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "import",
          "Description": "Import components from their remote scopes to the local workspace",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "--path",
                  "Description": "",
                  "Aliases": [
                    "-p"
                  ],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "String",
                          "Description": "",
                          "Type": "String"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Name": "--objects",
                  "Description": "Import components objects without checkout",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--override",
                  "Description": "Override local changes",
                  "Aliases": [
                    "-O"
                  ],
                  "Arguments": []
                },
                {
                  "Name": "--verbose",
                  "Description": "Show verbose output for inspection",
                  "Aliases": [
                    "-v"
                  ],
                  "Arguments": []
                },
                {
                  "Name": "--json",
                  "Description": "Return the output as JSON",
                  "Aliases": [
                    "-j"
                  ],
                  "Arguments": []
                },
                {
                  "Name": "--skip-dependency-installation",
                  "Description": "Do not auto-install dependencies",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--merge",
                  "Description": "",
                  "Aliases": [],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "String",
                          "Description": "",
                          "Type": "String"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Name": "--dependencies",
                  "Description": "Import all dependencies of imported components",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--dependents",
                  "Description": "Import components found while traversing from imported components",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--save-in-lane",
                  "Description": "Save in the lane when checked out to a lane",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--all-history",
                  "Description": "Fetch all history versions, always",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--fetch-deps",
                  "Description": "Fetch dependencies objects without adding to the workspace",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--track-only",
                  "Description": "Create bitmap entries without writing component files",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--include-deprecated",
                  "Description": "Include deprecated components when importing with patterns",
                  "Aliases": [],
                  "Arguments": []
                }
              ],
              "Optional": true
            },
            {
              "Arguments": [
                {
                  "Name": "String",
                  "Description": "",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "pack",
          "Description": "Create tar for npm publish",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "deprecate",
          "Description": "Deprecate a component",
          "Aliases": [
            "d"
          ],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "--new-id",
                  "Description": "If replaced by another component, enter the new component id",
                  "Aliases": [],
                  "Arguments": []
                }
              ],
              "Optional": true
            },
            {
              "Arguments": [
                {
                  "Name": "String",
                  "Description": "",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "undeprecate",
          "Description": "Undeprecate a deprecated component (local/remote).\n\nbit undeprecate \u003Cid\u003E",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "rename",
          "Description": "Rename a component",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "--scope",
                  "Description": "Define the scope for the newly created component",
                  "Aliases": [
                    "-s"
                  ],
                  "Arguments": []
                },
                {
                  "Name": "--path",
                  "Description": "Relative path in the workspace to place new component in",
                  "Aliases": [
                    "-p"
                  ],
                  "Arguments": []
                },
                {
                  "Name": "--refactor",
                  "Description": "Update the import/require statements in all dependent components",
                  "Aliases": [
                    "-r"
                  ],
                  "Arguments": []
                },
                {
                  "Name": "--preserve",
                  "Description": "Avoid renaming files and variables according to the new component name",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--ast",
                  "Description": "EXPERIMENTAL. Use AST to transform files instead of regex",
                  "Aliases": [],
                  "Arguments": []
                }
              ],
              "Optional": true
            },
            {
              "Arguments": [
                {
                  "Name": "String",
                  "Description": "",
                  "Type": "String"
                }
              ]
            },
            {
              "Arguments": [
                {
                  "Name": "String",
                  "Description": "",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "fork",
          "Description": "Create a new component forked from an existing one (copies source files and configs)",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "--scope",
                  "Description": "",
                  "Aliases": [
                    "-s"
                  ],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "String",
                          "Description": "",
                          "Type": "String"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Name": "--path",
                  "Description": "",
                  "Aliases": [
                    "-p"
                  ],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "String",
                          "Description": "",
                          "Type": "String"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Name": "--refactor",
                  "Description": "Update the import/require statements in all dependent components",
                  "Aliases": [
                    "-r"
                  ],
                  "Arguments": []
                },
                {
                  "Name": "--skip-dependency-installation",
                  "Description": "Do not install packages of the imported components",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--env",
                  "Description": "",
                  "Aliases": [],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "String",
                          "Description": "",
                          "Type": "String"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Name": "--skip-config",
                  "Description": "Do not copy the config to the new component",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--preserve",
                  "Description": "Avoid refactoring file and variable/class names according to the new component name",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--no-link",
                  "Description": "Avoid saving a reference to the original component",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--ast",
                  "Description": "Use ast to transform files instead of regex",
                  "Aliases": [],
                  "Arguments": []
                }
              ],
              "Optional": true
            },
            {
              "Arguments": [
                {
                  "Name": "String",
                  "Description": "",
                  "Type": "String"
                }
              ]
            },
            {
              "Arguments": [
                {
                  "Name": "String",
                  "Description": "",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "export",
          "Description": "Export components from the workspace to remote scopes",
          "Aliases": [
            "e"
          ],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "--eject",
                  "Description": "Remove component from the workspace and install it as a regular npm package",
                  "Aliases": [
                    "-e"
                  ],
                  "Arguments": []
                },
                {
                  "Name": "--all",
                  "Description": "Export all components, including non-staged",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--all-versions",
                  "Description": "Export not only staged versions but all of them",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--origin-directly",
                  "Description": "Avoid export to the central hub, export directly to the original scopes",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--resume",
                  "Description": "",
                  "Aliases": [],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "string",
                          "Description": "string",
                          "Type": "String"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Name": "--ignore-missing-artifacts",
                  "Description": "Don\u0027t throw an error when artifact files are missing",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--fork-lane-new-scope",
                  "Description": "Allow exporting a forked lane into a different scope than the original scope",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--json",
                  "Description": "Show output in json format",
                  "Aliases": [
                    "-j"
                  ],
                  "Arguments": []
                }
              ],
              "Optional": true
            },
            {
              "Arguments": [
                {
                  "Name": "String",
                  "Description": "",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "dependents",
          "Description": "Show dependents of the given component",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "String",
                  "Description": "",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "show",
          "Description": "Display the component\u0027s essential information\n\nbit show \u003Ccomponent-name\u003E",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "--json",
                  "Description": "Return the component data in JSON format",
                  "Aliases": [
                    "-j"
                  ],
                  "Arguments": []
                },
                {
                  "Name": "--legacy",
                  "Description": "Use the legacy bit show",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--remote",
                  "Description": "Show data for a remote component",
                  "Aliases": [
                    "-r"
                  ],
                  "Arguments": []
                },
                {
                  "Name": "--compare",
                  "Description": "Legacy-only. Compare current file system component to its latest tagged version",
                  "Aliases": [
                    "-c"
                  ],
                  "Arguments": []
                }
              ],
              "Optional": true
            },
            {
              "Arguments": [
                {
                  "Name": "String",
                  "Description": "",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "deps",
          "Description": "Manage dependencies",
          "Aliases": [
            "dependencies"
          ],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "get",
                  "Description": "Show direct and indirect dependencies of the given component",
                  "Aliases": [],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "--tree",
                          "Description": "EXPERIMENTAL: Render dependencies as a tree, similar to \u0027npm ls\u0027",
                          "Aliases": [
                            "-t"
                          ],
                          "Arguments": []
                        }
                      ],
                      "Optional": true
                    },
                    {
                      "Arguments": [
                        {
                          "Name": "String",
                          "Description": "",
                          "Type": "String"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Name": "remove",
                  "Description": "Remove a dependency to component(s)",
                  "Aliases": [],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "--dev",
                          "Description": "Remove from devDependencies",
                          "Aliases": [
                            "-d"
                          ],
                          "Arguments": []
                        },
                        {
                          "Name": "--peer",
                          "Description": "Remove from peerDependencies",
                          "Aliases": [
                            "-p"
                          ],
                          "Arguments": []
                        }
                      ],
                      "Optional": true
                    },
                    {
                      "Arguments": [
                        {
                          "Name": "String",
                          "Description": "",
                          "Type": "String"
                        }
                      ]
                    },
                    {
                      "Arguments": [
                        {
                          "Name": "String",
                          "Description": "",
                          "Type": "String"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Name": "unset",
                  "Description": "Unset a dependency to component(s) that was previously set by \u0027bit deps set\u0027",
                  "Aliases": [],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "--dev",
                          "Description": "Unset from devDependencies",
                          "Aliases": [
                            "-d"
                          ],
                          "Arguments": []
                        },
                        {
                          "Name": "--peer",
                          "Description": "Unset from peerDependencies",
                          "Aliases": [
                            "-p"
                          ],
                          "Arguments": []
                        }
                      ],
                      "Optional": true
                    },
                    {
                      "Arguments": [
                        {
                          "Name": "String",
                          "Description": "",
                          "Type": "String"
                        }
                      ]
                    },
                    {
                      "Arguments": [
                        {
                          "Name": "String",
                          "Description": "",
                          "Type": "String"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Name": "debug",
                  "Description": "Show the immediate dependencies and how their versions were determined",
                  "Aliases": [],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "String",
                          "Description": "",
                          "Type": "String"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Name": "set",
                  "Description": "Set a dependency to component(s)",
                  "Aliases": [],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "--dev",
                          "Description": "Add to the devDependencies",
                          "Aliases": [
                            "-d"
                          ],
                          "Arguments": []
                        },
                        {
                          "Name": "--peer",
                          "Description": "Add to the peerDependencies",
                          "Aliases": [
                            "-p"
                          ],
                          "Arguments": []
                        }
                      ],
                      "Optional": true
                    },
                    {
                      "Arguments": [
                        {
                          "Name": "String",
                          "Description": "",
                          "Type": "String"
                        }
                      ]
                    },
                    {
                      "Arguments": [
                        {
                          "Name": "String",
                          "Description": "",
                          "Type": "String"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Name": "reset",
                  "Description": "Reset dependencies to the default values (revert any previously \u0027bit deps set\u0027)",
                  "Aliases": [],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "String",
                          "Description": "",
                          "Type": "String"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Name": "eject",
                  "Description": "Write dependencies that were previously set via \u0027bit deps set\u0027 into .bitmap",
                  "Aliases": [],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "String",
                          "Description": "",
                          "Type": "String"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Name": "blame",
                  "Description": "EXPERIMENTAL: Find out which snap/tag changed a dependency version",
                  "Aliases": [],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "String",
                          "Description": "",
                          "Type": "String"
                        }
                      ]
                    },
                    {
                      "Arguments": [
                        {
                          "Name": "String",
                          "Description": "",
                          "Type": "String"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Name": "usage",
                  "Description": "EXPERIMENTAL: Find components that use the specified dependency",
                  "Aliases": [],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "String",
                          "Description": "",
                          "Type": "String"
                        }
                      ]
                    }
                  ]
                }
              ],
              "DontAllowMultiple": true
            }
          ]
        },
        {
          "Name": "log",
          "Description": "Show components(s) version history",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "--remote",
                  "Description": "Show log of a remote component",
                  "Aliases": [
                    "-r"
                  ],
                  "Arguments": []
                },
                {
                  "Name": "--parents",
                  "Description": "Show parents and lanes data",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--one-line",
                  "Description": "Show each log entry in one line",
                  "Aliases": [
                    "-o"
                  ],
                  "Arguments": []
                },
                {
                  "Name": "--json",
                  "Description": "JSON format",
                  "Aliases": [
                    "-j"
                  ],
                  "Arguments": []
                }
              ],
              "Optional": true
            },
            {
              "Arguments": [
                {
                  "Name": "String",
                  "Description": "",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "add",
          "Description": "Add any subset of files to be tracked as a component(s)",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "--id",
                  "Description": "Manually set component id",
                  "Aliases": [
                    "-i"
                  ],
                  "Arguments": []
                },
                {
                  "Name": "--main",
                  "Description": "Define component entry point",
                  "Aliases": [
                    "-m"
                  ],
                  "Arguments": []
                },
                {
                  "Name": "--namespace",
                  "Description": "Organize component in a namespace",
                  "Aliases": [
                    "-n"
                  ],
                  "Arguments": []
                },
                {
                  "Name": "--override",
                  "Description": "Override existing component if exists (default = false)",
                  "Aliases": [
                    "-o"
                  ],
                  "Arguments": []
                },
                {
                  "Name": "--scope",
                  "Description": "Sets the component\u0027s scope. If not entered, the default-scope from workspace.jsonc will be used",
                  "Aliases": [
                    "-s"
                  ],
                  "Arguments": []
                },
                {
                  "Name": "--env",
                  "Description": "Set the component\u0027s environment. (overrides the env from variants if exists)",
                  "Aliases": [
                    "-e"
                  ],
                  "Arguments": []
                },
                {
                  "Name": "--json",
                  "Description": "Output as json format",
                  "Aliases": [
                    "-j"
                  ],
                  "Arguments": []
                }
              ],
              "Optional": true
            }
          ]
        },
        {
          "Name": "move",
          "Description": "Move a component to a different filesystem path",
          "Aliases": [
            "mv"
          ],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "String",
                  "Description": "",
                  "Type": "String"
                }
              ]
            },
            {
              "Arguments": [
                {
                  "Name": "String",
                  "Description": "",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "diff",
          "Description": "Show the diff between the components\u0027 current source files and config, and their latest snapshot or tag",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "--verbose",
                  "Description": "Show a more verbose output where possible",
                  "Aliases": [
                    "-v"
                  ],
                  "Arguments": []
                },
                {
                  "Name": "--table",
                  "Description": "Show tables instead of plain text for dependencies diff",
                  "Aliases": [
                    "-t"
                  ],
                  "Arguments": []
                }
              ],
              "Optional": true
            },
            {
              "Arguments": [
                {
                  "Name": "String",
                  "Description": "",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "envs",
          "Description": "List all components maintained by the workspace and their corresponding envs",
          "Aliases": [
            "env"
          ],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "list",
                  "Description": "List all envs currently used in the workspace",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "get",
                  "Description": "Show config information from a component\u0027s env",
                  "Aliases": [],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "--services",
                          "Description": "",
                          "Aliases": [],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "string",
                                  "Description": "string",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "Optional": true
                    },
                    {
                      "Arguments": [
                        {
                          "Name": "String",
                          "Description": "",
                          "Type": "String"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Name": "set",
                  "Description": "Assigns one or more components a development environment (env)",
                  "Aliases": [],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "String",
                          "Description": "",
                          "Type": "String"
                        }
                      ]
                    },
                    {
                      "Arguments": [
                        {
                          "Name": "String",
                          "Description": "",
                          "Type": "String"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Name": "unset",
                  "Description": "Un-sets an env from components",
                  "Aliases": [],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "String",
                          "Description": "",
                          "Type": "String"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Name": "replace",
                  "Description": "Replace an existing env with another env for all components using the old env",
                  "Aliases": [],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "String",
                          "Description": "",
                          "Type": "String"
                        }
                      ]
                    },
                    {
                      "Arguments": [
                        {
                          "Name": "String",
                          "Description": "",
                          "Type": "String"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Name": "update",
                  "Description": "Update a version of an env for all components using that env",
                  "Aliases": [],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "String",
                          "Description": "",
                          "Type": "String"
                        }
                      ]
                    },
                    {
                      "Arguments": [
                        {
                          "Name": "String",
                          "Description": "",
                          "Type": "String"
                        }
                      ]
                    }
                  ]
                }
              ],
              "DontAllowMultiple": true
            }
          ]
        },
        {
          "Name": "start",
          "Description": "Run the UI/development server\n\nbit start [component-pattern]",
          "Aliases": [
            "c"
          ],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "--dev",
                  "Description": "Start UI server in dev mode",
                  "Aliases": [
                    "-d"
                  ],
                  "Arguments": []
                },
                {
                  "Name": "--port",
                  "Description": "Port of the UI server",
                  "Aliases": [
                    "-p"
                  ],
                  "Arguments": []
                },
                {
                  "Name": "--rebuild",
                  "Description": "Rebuild the UI (useful e.g. when updating the workspace UI - can use the dev flag for HMR in this case)",
                  "Aliases": [
                    "-r"
                  ],
                  "Arguments": []
                },
                {
                  "Name": "--skip-ui-build",
                  "Description": "Skip building UI",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--verbose",
                  "Description": "Show verbose output for inspection and prints stack trace",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--no-browser",
                  "Description": "Do not automatically open browser when ready",
                  "Aliases": [
                    "-n"
                  ],
                  "Arguments": []
                },
                {
                  "Name": "--skip-compilation",
                  "Description": "Skip the auto-compilation before starting the web-server",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--ui-root-name",
                  "Description": "Name of the UI root to use, e.g. \u0022teambit.scope/scope\u0022 or \u0022teambit.workspace/workspace\u0022",
                  "Aliases": [],
                  "Arguments": []
                }
              ],
              "Optional": true
            },
            {
              "Arguments": [
                {
                  "Name": "String",
                  "Description": "",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "ui-build",
          "Description": "Build production assets for deployment",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "checkout",
          "Description": "Switch between component versions or remove local changes",
          "Aliases": [
            "U"
          ],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "--interactive-merge",
                  "Description": "Display options to resolve conflicts when found during merge",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--ours",
                  "Description": "DEPRECATED",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--theirs",
                  "Description": "DEPRECATED",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--manual",
                  "Description": "DEPRECATED",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--auto-merge-resolve",
                  "Description": "Resolve merge conflicts according to the provided strategy: [ours, theirs, manual]",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--reset",
                  "Description": "Revert changes that were not snapped/tagged",
                  "Aliases": [
                    "-r"
                  ],
                  "Arguments": []
                },
                {
                  "Name": "--all",
                  "Description": "All components",
                  "Aliases": [
                    "-a"
                  ],
                  "Arguments": []
                },
                {
                  "Name": "--workspace-only",
                  "Description": "Only relevant for \u0027bit checkout head\u0027 when on a lane",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--verbose",
                  "Description": "Verbose output for inspection",
                  "Aliases": [
                    "-v"
                  ],
                  "Arguments": []
                },
                {
                  "Name": "--skip-dependency-installation",
                  "Description": "Do not auto-install dependencies of the imported components",
                  "Aliases": [],
                  "Arguments": []
                }
              ],
              "Optional": true
            },
            {
              "Arguments": [
                {
                  "Name": "String",
                  "Description": "",
                  "Type": "String"
                }
              ]
            },
            {
              "Arguments": [
                {
                  "Name": "String",
                  "Description": "",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "install",
          "Description": "Installs workspace dependencies",
          "Aliases": [
            "in"
          ],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "--type",
                  "Description": "",
                  "Aliases": [],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "String",
                          "Description": "",
                          "Type": "String"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Name": "--update",
                  "Description": "Update all dependencies to the latest version",
                  "Aliases": [
                    "-u"
                  ],
                  "Arguments": []
                },
                {
                  "Name": "--update-existing",
                  "Description": "DEPRECATED: Update existing dependencies version and types",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--save-prefix",
                  "Description": "",
                  "Aliases": [],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "String",
                          "Description": "",
                          "Type": "String"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Name": "--skip-dedupe",
                  "Description": "Do not dedupe dependencies on installation",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--skip-import",
                  "Description": "Do not import bit objects post installation",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--skip-compile",
                  "Description": "Do not compile components",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--add-missing-deps",
                  "Description": "Install all missing dependencies",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--add-missing-peers",
                  "Description": "Install all missing peer dependencies",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--recurring-install",
                  "Description": "Automatically run install again if there are old envs",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--no-optional",
                  "Description": "Do not install optional dependencies (pnpm only)",
                  "Aliases": [],
                  "Arguments": []
                }
              ],
              "Optional": true
            },
            {
              "Arguments": [
                {
                  "Name": "String",
                  "Description": "",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "uninstall",
          "Description": "Uninstall dependencies.\n\nbit uninstall [packages...]",
          "Aliases": [
            "un"
          ],
          "Arguments": []
        },
        {
          "Name": "update",
          "Description": "Update dependencies.\n\nbit update [package-patterns...]",
          "Aliases": [
            "up"
          ],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "--yes",
                  "Description": "Automatically update all outdated versions for packages specified in pattern (all if no pattern supplied) - use carefully as could result in breaking updates for dependencies",
                  "Aliases": [
                    "-y"
                  ],
                  "Arguments": []
                },
                {
                  "Name": "--patch",
                  "Description": "Update to the latest patch version. Semver rules are ignored",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--minor",
                  "Description": "Update to the latest minor version. Semver rules are ignored",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--major",
                  "Description": "Update to the latest major version. Semver rules are ignored",
                  "Aliases": [],
                  "Arguments": []
                }
              ],
              "Optional": true
            },
            {
              "Arguments": [
                {
                  "Name": "String",
                  "Description": "",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "link",
          "Description": "Create links in the node_modules directory, to core aspects and to components in the workspace",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "--json",
                  "Description": "Return the output as JSON",
                  "Aliases": [
                    "-j"
                  ],
                  "Arguments": []
                },
                {
                  "Name": "--verbose",
                  "Description": "Verbose output",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--rewire",
                  "Description": "Replace relative paths with module paths in code (e.g. \u0022../foo\u0022 =\u003E \u0022@bit/foo\u0022)",
                  "Aliases": [
                    "-r"
                  ],
                  "Arguments": []
                },
                {
                  "Name": "--target",
                  "Description": "Link to an external directory (similar to npm-link) so other projects could use these components",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--skip-fetching-objects",
                  "Description": "Skip fetch missing objects from remotes before linking",
                  "Aliases": [],
                  "Arguments": []
                }
              ],
              "Optional": true
            },
            {
              "Arguments": [
                {
                  "Name": "component-names",
                  "Description": "component-names",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "component-issues",
          "Description": "List available component-issues",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "tag",
          "Description": "Create an immutable and exportable component snapshot, tagged with a release version.\nIf no patterns are provided, it will tag all new and modified components.\nIf patterns are entered, you can specify a version per pattern using \u0022@\u0022 sign, e.g. bit tag foo@1.0.0 bar@minor baz@major\n\nbit tag [component-patterns...]",
          "Aliases": [
            "t"
          ],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "--message",
                  "Description": "A log message describing the latest changes",
                  "Aliases": [
                    "-m"
                  ],
                  "Arguments": []
                },
                {
                  "Name": "--unmodified",
                  "Description": "Include unmodified components (by default, only new and modified components are tagged)",
                  "Aliases": [
                    "-u"
                  ],
                  "Arguments": []
                },
                {
                  "Name": "--editor",
                  "Description": "Open an editor to write a tag message for each component. Optionally, specify the editor-name (defaults to vim)",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--ver",
                  "Description": "Tag with the given version",
                  "Aliases": [
                    "-v"
                  ],
                  "Arguments": []
                },
                {
                  "Name": "--increment",
                  "Description": "Options are: [major, premajor, minor, preminor, patch, prepatch, prerelease], default to patch",
                  "Aliases": [
                    "-l"
                  ],
                  "Arguments": []
                },
                {
                  "Name": "--prerelease-id",
                  "Description": "Prerelease identifier (e.g. \u0022dev\u0022 to get \u00221.0.0-dev.1\u0022)",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--patch",
                  "Description": "Syntactic sugar for \u0022--increment patch\u0022",
                  "Aliases": [
                    "-p"
                  ],
                  "Arguments": []
                },
                {
                  "Name": "--minor",
                  "Description": "Syntactic sugar for \u0022--increment minor\u0022",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--major",
                  "Description": "Syntactic sugar for \u0022--increment major\u0022",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--pre-release",
                  "Description": "Syntactic sugar for \u0022--increment prerelease\u0022 and --prerelease-id \u003Cidentifier\u003E",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--snapped",
                  "Description": "Tag only components whose head is a snap (not a tag)",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--unmerged",
                  "Description": "Complete a merge process by tagging the unmerged components",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--skip-tests",
                  "Description": "Skip running component tests during tag process",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--skip-auto-tag",
                  "Description": "Skip auto tagging dependents",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--soft",
                  "Description": "Do not persist. Only keep note of the changes to be made",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--persist",
                  "Description": "Persist the changes generated by --soft tag",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--disable-tag-pipeline",
                  "Description": "Skip the tag pipeline to avoid publishing the components",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--ignore-build-errors",
                  "Description": "Proceed to tag pipeline even when build pipeline fails",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--increment-by",
                  "Description": "(default to 1) increment semver flag (patch/minor/major) by. e.g. incrementing patch by 2: 0.0.1 -\u003E 0.0.3",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--ignore-issues",
                  "Description": "Ignore component issues (shown in \u0022bit status\u0022 as \u0022issues found\u0022), issues to ignore: [MissingPackagesDependenciesOnFs, MissingManuallyConfiguredPackages, MissingComponents, UntrackedDependencies, ResolveErrors, RelativeComponents, RelativeComponentsAuthored, ParseErrors, MissingDists, LegacyInsideHarmony, MissingDependenciesOnFs, ImportNonMainFiles, MultipleEnvs, MissingLinksFromNodeModulesToSrc, CircularDependencies, DuplicateComponentAndPackage, MergeConfigHasConflict, NonLoadedEnv, ExternalEnvWithoutVersion, RemovedDependencies] to ignore multiple issues, separate them by a comma and wrap with quotes. To ignore all issues, specify \u0027*\u0027",
                  "Aliases": [
                    "-i"
                  ],
                  "Arguments": []
                },
                {
                  "Name": "--ignore-newest-version",
                  "Description": "Allow tagging even when the component has newer versions e.g. for hotfixes (default = false)",
                  "Aliases": [
                    "-I"
                  ],
                  "Arguments": []
                },
                {
                  "Name": "--fail-fast",
                  "Description": "Stop pipeline execution on the first failed task (by default a task is skipped only when its dependency failed)",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--build",
                  "Description": "Not needed for now. Run the pipeline build and complete the tag",
                  "Aliases": [
                    "-b"
                  ],
                  "Arguments": []
                },
                {
                  "Name": "--all",
                  "Description": "DEPRECATED (not needed anymore, it is the default now). Tag all new and modified components",
                  "Aliases": [
                    "-a"
                  ],
                  "Arguments": []
                },
                {
                  "Name": "--scope",
                  "Description": "DEPRECATED (use \u0022--unmodified\u0022 instead). Tag all components of the local scope",
                  "Aliases": [
                    "-s"
                  ],
                  "Arguments": []
                },
                {
                  "Name": "--force",
                  "Description": "DEPRECATED (use \u0022--skip-tests\u0022, \u0022--ignore-build-errors\u0022 or \u0022--unmodified\u0022 instead). Force-tag even if tests are failing and even when component has not changed",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--disable-deploy-pipeline",
                  "Description": "DEPRECATED. Use --disable-tag-pipeline instead",
                  "Aliases": [],
                  "Arguments": []
                }
              ],
              "Optional": true
            },
            {
              "Arguments": [
                {
                  "Name": "String",
                  "Description": "",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "reset",
          "Description": "Revert tagged or snapped versions for component(s)",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "--all",
                  "Description": "Revert all unexported tags/snaps for all components",
                  "Aliases": [
                    "-a"
                  ],
                  "Arguments": []
                },
                {
                  "Name": "--head",
                  "Description": "Revert the head tag/snap only",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--soft",
                  "Description": "Revert only soft-tags",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--force",
                  "Description": "Revert the tag even if it\u0027s used as a dependency",
                  "Aliases": [
                    "-f"
                  ],
                  "Arguments": []
                }
              ],
              "Optional": true
            },
            {
              "Arguments": [
                {
                  "Name": "String",
                  "Description": "",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "merge",
          "Description": "Merge changes of the remote head into local and creates snaps for merged components",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "--ours",
                  "Description": "DEPRECATED. In case of a conflict, keep the local modification",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--theirs",
                  "Description": "DEPRECATED. In case of a conflict, override the local modification with the specified version",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--manual",
                  "Description": "DEPRECATED. Use --auto-merge-resolve",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--auto-merge-resolve",
                  "Description": "In case of a conflict, resolve according to the strategy: [ours, theirs, manual]",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--abort",
                  "Description": "In case of an unresolved merge, revert to pre-merge state",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--resolve",
                  "Description": "Mark an unresolved merge as resolved and create a new snap with the changes",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--no-snap",
                  "Description": "Do not auto snap even if the merge completed without conflicts",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--build",
                  "Description": "In case of snap during the merge, run the build-pipeline",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--verbose",
                  "Description": "Show details of components that were not merged successfully",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--skip-dependency-installation",
                  "Description": "Do not install new dependencies resulting from the merge",
                  "Aliases": [
                    "-x"
                  ],
                  "Arguments": []
                },
                {
                  "Name": "--message",
                  "Description": "Override the default message for the auto snap",
                  "Aliases": [
                    "-m"
                  ],
                  "Arguments": []
                }
              ],
              "Optional": true
            },
            {
              "Arguments": [
                {
                  "Name": "String",
                  "Description": "",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "create",
          "Description": "Create a new component using a template",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "--namespace",
                  "Description": "Sets the component\u0027s namespace and nested dirs inside the scope",
                  "Aliases": [
                    "-n"
                  ],
                  "Arguments": []
                },
                {
                  "Name": "--scope",
                  "Description": "Sets the component\u0027s scope-name",
                  "Aliases": [
                    "-s"
                  ],
                  "Arguments": []
                },
                {
                  "Name": "--aspect",
                  "Description": "Aspect-id of the template",
                  "Aliases": [
                    "-a"
                  ],
                  "Arguments": []
                },
                {
                  "Name": "--template",
                  "Description": "Env-id of the template, alias for --aspect",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--path",
                  "Description": "Relative path in the workspace",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--env",
                  "Description": "Set the component\u0027s environment",
                  "Aliases": [],
                  "Arguments": []
                }
              ],
              "Optional": true
            },
            {
              "Arguments": [
                {
                  "Name": "String",
                  "Description": "",
                  "Type": "String"
                }
              ]
            },
            {
              "Arguments": [
                {
                  "Name": "String",
                  "Description": "",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "templates",
          "Description": "List available templates for \u0022bit create\u0022 and \u0022bit new\u0022\n\nList components templates when inside bit-workspace (for bit-create), otherwise, list workspace templates (for bit-new).\n\nbit templates",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "--show-all",
                  "Description": "Show hidden templates",
                  "Aliases": [
                    "-s"
                  ],
                  "Arguments": []
                },
                {
                  "Name": "--aspect",
                  "Description": "Show templates provided by the aspect-id",
                  "Aliases": [
                    "-a"
                  ],
                  "Arguments": []
                }
              ],
              "Optional": true
            }
          ]
        },
        {
          "Name": "build",
          "Description": "Run set of tasks for build. By default, only new and modified components are built",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "--all",
                  "Description": "DEPRECATED. Use --unmodified",
                  "Aliases": [
                    "-a"
                  ],
                  "Arguments": []
                },
                {
                  "Name": "--unmodified",
                  "Description": "Include unmodified components",
                  "Aliases": [
                    "-u"
                  ],
                  "Arguments": []
                },
                {
                  "Name": "--dev",
                  "Description": "Run the pipeline in dev mode",
                  "Aliases": [
                    "-d"
                  ],
                  "Arguments": []
                },
                {
                  "Name": "--install",
                  "Description": "Install core aspects in capsules",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--reuse-capsules",
                  "Description": "Avoid deleting the capsules root-dir before starting the build",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--tasks",
                  "Description": "Build the specified task(s) only",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--cache-packages-on-capsule-root",
                  "Description": "Set the package-manager cache on the capsule root",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--list-tasks",
                  "Description": "List tasks of an env or a component-id for each one of the pipelines",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--skip-tests",
                  "Description": "Skip running component tests during build process",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--fail-fast",
                  "Description": "Stop pipeline execution on the first failed task",
                  "Aliases": [],
                  "Arguments": []
                }
              ],
              "Optional": true
            },
            {
              "Arguments": [
                {
                  "Name": "String",
                  "Description": "",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "artifacts",
          "Description": "List and download component artifacts",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "--aspect",
                  "Description": "Show/download only artifacts generated by this aspect-id",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--task",
                  "Description": "Show/download only artifacts generated by this task-id",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--files",
                  "Description": "Show/download only artifacts matching the given files or the glob pattern (wrap glob patterns in quotes)",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--out-dir",
                  "Description": "Download the files to the specified dir",
                  "Aliases": [],
                  "Arguments": []
                }
              ],
              "Optional": true
            },
            {
              "Arguments": [
                {
                  "Name": "String",
                  "Description": "",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "refactor",
          "Description": "Source code refactoring / codemod",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "dependency-name",
                  "Description": "Replace the dependency\u0027s old package-name with a new one in the code, usage: refactor dependency-name \u003Cold-id\u003E \u003Cnew-id\u003E",
                  "Aliases": [],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "String",
                          "Description": "",
                          "Type": "String"
                        }
                      ]
                    },
                    {
                      "Arguments": [
                        {
                          "Name": "String",
                          "Description": "",
                          "Type": "String"
                        }
                      ]
                    }
                  ]
                }
              ],
              "DontAllowMultiple": true
            }
          ]
        },
        {
          "Name": "status",
          "Description": "Present the current status of components in the workspace, including indication of detected issues\n\nbit status",
          "Aliases": [
            "s"
          ],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "--json",
                  "Description": "Return a JSON version of the component",
                  "Aliases": [
                    "-j"
                  ],
                  "Arguments": []
                },
                {
                  "Name": "--verbose",
                  "Description": "Show extra data: full snap hashes for staged components, and divergence point for lanes",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--lanes",
                  "Description": "When on a lane, show updates from main and updates from forked lanes",
                  "Aliases": [
                    "-l"
                  ],
                  "Arguments": []
                },
                {
                  "Name": "--strict",
                  "Description": "In case issues found, exit with code 1",
                  "Aliases": [],
                  "Arguments": []
                }
              ],
              "Optional": true
            }
          ]
        },
        {
          "Name": "compile",
          "Description": "Compile components in the workspace",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "--changed",
                  "Description": "Compile only new and modified components",
                  "Aliases": [
                    "-c"
                  ],
                  "Arguments": []
                },
                {
                  "Name": "--verbose",
                  "Description": "Show more data, such as, dist paths",
                  "Aliases": [
                    "-v"
                  ],
                  "Arguments": []
                },
                {
                  "Name": "--json",
                  "Description": "Return the compile results in json format",
                  "Aliases": [
                    "-j"
                  ],
                  "Arguments": []
                },
                {
                  "Name": "--delete-dist-dir",
                  "Description": "Delete existing dist folder before writing new compiled files",
                  "Aliases": [],
                  "Arguments": []
                }
              ],
              "Optional": true
            },
            {
              "Arguments": [
                {
                  "Name": "String",
                  "Description": "",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "test",
          "Description": "Test components in the workspace. By default only runs tests for new and modified components.\n\nbit test [component-pattern]",
          "Aliases": [
            "at"
          ],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "--watch",
                  "Description": "Start the tester in watch mode",
                  "Aliases": [
                    "-w"
                  ],
                  "Arguments": []
                },
                {
                  "Name": "--debug",
                  "Description": "Start the tester in debug mode",
                  "Aliases": [
                    "-d"
                  ],
                  "Arguments": []
                },
                {
                  "Name": "--all",
                  "Description": "Test all components, not only new and modified",
                  "Aliases": [
                    "-a"
                  ],
                  "Arguments": []
                },
                {
                  "Name": "--junit",
                  "Description": "Write tests results as JUnit XML format into the specified file path",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--coverage",
                  "Description": "Show code coverage data",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--env",
                  "Description": "Test only components assigned the given env",
                  "Aliases": [
                    "-e"
                  ],
                  "Arguments": []
                },
                {
                  "Name": "--scope",
                  "Description": "DEPRECATED. (use the pattern instead, e.g. \u0022scopeName/**\u0022). Name of the scope to test",
                  "Aliases": [
                    "-s"
                  ],
                  "Arguments": []
                }
              ],
              "Optional": true
            },
            {
              "Arguments": [
                {
                  "Name": "String",
                  "Description": "",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "schema",
          "Description": "Shows the API schema of the specified component/s",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "--json",
                  "Description": "Return the component schema in json format",
                  "Aliases": [
                    "-j"
                  ],
                  "Arguments": []
                }
              ],
              "Optional": true
            },
            {
              "Arguments": [
                {
                  "Name": "String",
                  "Description": "",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "check-types",
          "Description": "Check typescript types",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "--all",
                  "Description": "Check-types for all components, not only modified and new",
                  "Aliases": [
                    "-a"
                  ],
                  "Arguments": []
                },
                {
                  "Name": "--strict",
                  "Description": "In case issues found, exit with code 1",
                  "Aliases": [],
                  "Arguments": []
                }
              ],
              "Optional": true
            },
            {
              "Arguments": [
                {
                  "Name": "String",
                  "Description": "",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "aspect",
          "Description": "EXPERIMENTAL. Manage aspects",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "eject",
          "Description": "Remove component from the workspace and install it instead as a regular npm package. By default the component files will be removed from the workspace",
          "Aliases": [
            "E"
          ],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "--force",
                  "Description": "Ignore local changes/versions, eject component/s even when they are staged or modified. Note: unexported tags/snaps will be lost",
                  "Aliases": [
                    "-f"
                  ],
                  "Arguments": []
                },
                {
                  "Name": "--json",
                  "Description": "Print the results in JSON format",
                  "Aliases": [
                    "-j"
                  ],
                  "Arguments": []
                },
                {
                  "Name": "--keep-files",
                  "Description": "Keep the component files in the workspace intact",
                  "Aliases": [],
                  "Arguments": []
                }
              ],
              "Optional": true
            },
            {
              "Arguments": [
                {
                  "Name": "String",
                  "Description": "",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "format",
          "Description": "Format components in the development workspace",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "--changed",
                  "Description": "Format only new and modified components",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--check",
                  "Description": "Will output a message and a list of unformatted files, if any",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--json",
                  "Description": "Return the format results in json format",
                  "Aliases": [
                    "-j"
                  ],
                  "Arguments": []
                }
              ],
              "Optional": true
            }
          ]
        },
        {
          "Name": "lint",
          "Description": "Lint components in the development workspace",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "--changed",
                  "Description": "Lint only new and modified components",
                  "Aliases": [
                    "-c"
                  ],
                  "Arguments": []
                },
                {
                  "Name": "--fix",
                  "Description": "Automatically fix problems",
                  "Aliases": [
                    "-f"
                  ],
                  "Arguments": []
                },
                {
                  "Name": "--fix-type",
                  "Description": "Specify the types of fixes to apply (problem, suggestion, layout)",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--json",
                  "Description": "Return the lint results in json format",
                  "Aliases": [
                    "-j"
                  ],
                  "Arguments": []
                }
              ],
              "Optional": true
            },
            {
              "Arguments": [
                {
                  "Name": "String",
                  "Description": "",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "graph",
          "Description": "Generate an image file with the workspace components\u0027 dependencies graph",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "--image",
                  "Description": "",
                  "Aliases": [
                    "-i"
                  ],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "String",
                          "Description": "",
                          "Type": "String"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Name": "--remote",
                  "Description": "",
                  "Aliases": [],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "String",
                          "Description": "",
                          "Type": "String"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Name": "--all-versions",
                  "Description": "Enter all components versions into the graph, not only latest",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--layout",
                  "Description": "",
                  "Aliases": [],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "String",
                          "Description": "",
                          "Type": "String"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Name": "--json",
                  "Description": "Json format",
                  "Aliases": [
                    "-j"
                  ],
                  "Arguments": []
                }
              ],
              "Optional": true
            },
            {
              "Arguments": [
                {
                  "Name": "String",
                  "Description": "",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "list",
          "Description": "List components on a workspace or a remote scope",
          "Aliases": [
            "ls"
          ],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "--ids",
                  "Description": "Show only component ids, unformatted",
                  "Aliases": [
                    "-i"
                  ],
                  "Arguments": []
                },
                {
                  "Name": "--scope",
                  "Description": "Show only components stored in the local scope",
                  "Aliases": [
                    "-s"
                  ],
                  "Arguments": []
                },
                {
                  "Name": "--outdated",
                  "Description": "Highlight outdated components",
                  "Aliases": [
                    "-o"
                  ],
                  "Arguments": []
                },
                {
                  "Name": "--json",
                  "Description": "Show the output in JSON format",
                  "Aliases": [
                    "-j"
                  ],
                  "Arguments": []
                },
                {
                  "Name": "--namespace",
                  "Description": "Show only components in the specified namespace",
                  "Aliases": [],
                  "Arguments": []
                }
              ],
              "Optional": true
            },
            {
              "Arguments": [
                {
                  "Name": "String",
                  "Description": "",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "globals",
          "Description": "List all globals",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "--json",
                  "Description": "Json format",
                  "Aliases": [
                    "-j"
                  ],
                  "Arguments": []
                }
              ],
              "Optional": true
            }
          ]
        },
        {
          "Name": "run",
          "Description": "Locally run an app component (independent of bit\u0027s dev server)",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "--dev",
                  "Description": "Start the application in dev mode",
                  "Aliases": [
                    "-d"
                  ],
                  "Arguments": []
                },
                {
                  "Name": "--port",
                  "Description": "Port to run the app on",
                  "Aliases": [
                    "-p"
                  ],
                  "Arguments": []
                },
                {
                  "Name": "--verbose",
                  "Description": "Show verbose output for inspection and print stack trace",
                  "Aliases": [
                    "-v"
                  ],
                  "Arguments": []
                },
                {
                  "Name": "--skip-watch",
                  "Description": "Avoid running the watch process that compiles components in the background",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--ssr",
                  "Description": "Run app in server side rendering mode",
                  "Aliases": [],
                  "Arguments": []
                }
              ],
              "Optional": true
            },
            {
              "Arguments": [
                {
                  "Name": "String",
                  "Description": "",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "app",
          "Description": "Manages apps",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "list",
                  "Description": "List all registered apps",
                  "Aliases": [],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "--json",
                          "Description": "Return the component data in json format",
                          "Aliases": [
                            "-j"
                          ],
                          "Arguments": []
                        }
                      ],
                      "Optional": true
                    }
                  ]
                },
                {
                  "Name": "run",
                  "Description": "Locally run an app component (independent of bit\u0027s dev server)",
                  "Aliases": [],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "--dev",
                          "Description": "Start the application in dev mode",
                          "Aliases": [
                            "-d"
                          ],
                          "Arguments": []
                        },
                        {
                          "Name": "--port",
                          "Description": "Port to run the app on",
                          "Aliases": [
                            "-p"
                          ],
                          "Arguments": []
                        },
                        {
                          "Name": "--verbose",
                          "Description": "Show verbose output for inspection and print stack trace",
                          "Aliases": [
                            "-v"
                          ],
                          "Arguments": []
                        },
                        {
                          "Name": "--skip-watch",
                          "Description": "Avoid running the watch process that compiles components in the background",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--ssr",
                          "Description": "Run app in server side rendering mode",
                          "Aliases": [],
                          "Arguments": []
                        }
                      ],
                      "Optional": true
                    },
                    {
                      "Arguments": [
                        {
                          "Name": "String",
                          "Description": "",
                          "Type": "String"
                        }
                      ]
                    }
                  ]
                }
              ],
              "DontAllowMultiple": true
            }
          ]
        },
        {
          "Name": "capsule",
          "Description": "Manage capsules",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "list",
                  "Description": "List the capsules generated for this workspace",
                  "Aliases": [],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "--json",
                          "Description": "JSON format",
                          "Aliases": [
                            "-j"
                          ],
                          "Arguments": []
                        }
                      ],
                      "Optional": true
                    }
                  ]
                },
                {
                  "Name": "create",
                  "Description": "Create capsules for components",
                  "Aliases": [],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "--base-dir",
                          "Description": "Set base dir of all capsules",
                          "Aliases": [
                            "-b"
                          ],
                          "Arguments": []
                        },
                        {
                          "Name": "--root-base-dir",
                          "Description": "Set root base dir of all capsules",
                          "Aliases": [
                            "-r"
                          ],
                          "Arguments": []
                        },
                        {
                          "Name": "--always-new",
                          "Description": "Create new environment for capsule",
                          "Aliases": [
                            "-a"
                          ],
                          "Arguments": []
                        },
                        {
                          "Name": "--seeders-only",
                          "Description": "Create capsules for the seeders only",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--id",
                          "Description": "Reuse capsule of certain name",
                          "Aliases": [
                            "-i"
                          ],
                          "Arguments": []
                        },
                        {
                          "Name": "--use-hash",
                          "Description": "Whether to use hash function as capsules root dir name",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--json",
                          "Description": "JSON format",
                          "Aliases": [
                            "-j"
                          ],
                          "Arguments": []
                        },
                        {
                          "Name": "--install-packages",
                          "Description": "Install packages by the package-manager",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--package-manager",
                          "Description": "Npm, yarn or pnpm, default to npm",
                          "Aliases": [
                            "-p"
                          ],
                          "Arguments": []
                        }
                      ],
                      "Optional": true
                    }
                  ]
                },
                {
                  "Name": "delete",
                  "Description": "Delete capsules",
                  "Aliases": [],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "--scope-aspects",
                          "Description": "Delete scope-aspects capsules",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--all",
                          "Description": "Delete all capsules for all workspaces and scopes",
                          "Aliases": [
                            "-a"
                          ],
                          "Arguments": []
                        },
                        {
                          "Name": "--json",
                          "Description": "JSON format",
                          "Aliases": [
                            "-j"
                          ],
                          "Arguments": []
                        }
                      ],
                      "Optional": true
                    }
                  ]
                }
              ],
              "DontAllowMultiple": true
            }
          ]
        },
        {
          "Name": "delete",
          "Description": "Mark components as deleted on the remote",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "--lane",
                  "Description": "When on a lane, delete the component from this lane only",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--update-main",
                  "Description": "EXPERIMENTAL: Delete component/s on the main lane after merging this lane into main",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--force",
                  "Description": "Removes the component from the scope, even if used as a dependency",
                  "Aliases": [
                    "-f"
                  ],
                  "Arguments": []
                },
                {
                  "Name": "--silent",
                  "Description": "Skip confirmation",
                  "Aliases": [
                    "-s"
                  ],
                  "Arguments": []
                },
                {
                  "Name": "--hard",
                  "Description": "NOT-RECOMMENDED: Delete a component completely from a remote scope",
                  "Aliases": [],
                  "Arguments": []
                }
              ],
              "Optional": true
            },
            {
              "Arguments": [
                {
                  "Name": "String",
                  "Description": "",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "eject-conf",
          "Description": "Eject components configuration (create a component.json file). Note this can be reversed at any time by snapping/tagging changes and deleting the component.json file",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "--propagate",
                  "Description": "Mark propagate true in the config file, so that component.json configs will be merge with workspace configs",
                  "Aliases": [
                    "-p"
                  ],
                  "Arguments": []
                },
                {
                  "Name": "--override",
                  "Description": "Override file if exist",
                  "Aliases": [
                    "-o"
                  ],
                  "Arguments": []
                }
              ],
              "Optional": true
            },
            {
              "Arguments": [
                {
                  "Name": "String",
                  "Description": "",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "git",
          "Description": "Perform git operations",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "set-merge-driver",
                  "Description": "Setup bit\u0027s git merge driver for bitmap files",
                  "Aliases": [],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "--global",
                          "Description": "Set the git merge driver globally",
                          "Aliases": [
                            "-g"
                          ],
                          "Arguments": []
                        }
                      ],
                      "Optional": true
                    }
                  ]
                },
                {
                  "Name": "merge-bitmaps",
                  "Description": "Merge conflicting bitmap files during git merge",
                  "Aliases": [],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "String",
                          "Description": "",
                          "Type": "String"
                        }
                      ]
                    },
                    {
                      "Arguments": [
                        {
                          "Name": "String",
                          "Description": "",
                          "Type": "String"
                        }
                      ]
                    },
                    {
                      "Arguments": [
                        {
                          "Name": "String",
                          "Description": "",
                          "Type": "String"
                        }
                      ]
                    }
                  ]
                }
              ],
              "DontAllowMultiple": true
            }
          ]
        },
        {
          "Name": "lane",
          "Description": "Manage lanes - if no sub-command is used, runs \u0027bit lane list\u0027",
          "Aliases": [
            "l"
          ],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "list",
                  "Description": "List local lanes",
                  "Aliases": [],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "--details",
                          "Description": "Show more details on the state of each component in each lane",
                          "Aliases": [
                            "-d"
                          ],
                          "Arguments": []
                        },
                        {
                          "Name": "--json",
                          "Description": "Show lanes\u0027 details in a json format",
                          "Aliases": [
                            "-j"
                          ],
                          "Arguments": []
                        },
                        {
                          "Name": "--remote",
                          "Description": "Show all remote lanes from the specified scope",
                          "Aliases": [
                            "-r"
                          ],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "String",
                                  "Description": "",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--merged",
                          "Description": "List only merged lanes",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--not-merged",
                          "Description": "List only lanes that haven\u0027t been merged",
                          "Aliases": [],
                          "Arguments": []
                        }
                      ],
                      "Optional": true
                    }
                  ]
                },
                {
                  "Name": "switch",
                  "Description": "Switch to the specified lane",
                  "Aliases": [],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "--alias",
                          "Description": "Relevant when the specified lane is a remote lane. Create a local alias for the lane",
                          "Aliases": [
                            "-n"
                          ],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "String",
                                  "Description": "",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--merge",
                          "Description": "Merge local changes with the checked out version. Strategy should be \u0027theirs\u0027, \u0027ours\u0027, or \u0027manual\u0027",
                          "Aliases": [
                            "-m"
                          ],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "String",
                                  "Description": "",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--get-all",
                          "Description": "Checkout all components in a lane, including those not currently in the workspace",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--skip-dependency-installation",
                          "Description": "Do not install packages of the imported components",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--pattern",
                          "Description": "Switch only the lane components matching the specified component-pattern",
                          "Aliases": [
                            "-p"
                          ],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "String",
                                  "Description": "",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--json",
                          "Description": "Return the output as JSON",
                          "Aliases": [
                            "-j"
                          ],
                          "Arguments": []
                        }
                      ],
                      "Optional": true
                    },
                    {
                      "Arguments": [
                        {
                          "Name": "String",
                          "Description": "",
                          "Type": "String"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Name": "show",
                  "Description": "Show lane details. If no lane specified, show the current lane",
                  "Aliases": [],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "--json",
                          "Description": "Show the lane details in json format",
                          "Aliases": [
                            "-j"
                          ],
                          "Arguments": []
                        },
                        {
                          "Name": "--remote",
                          "Description": "Show details of the remote head of the provided lane",
                          "Aliases": [],
                          "Arguments": []
                        }
                      ],
                      "Optional": true
                    }
                  ]
                },
                {
                  "Name": "create",
                  "Description": "Creates a new lane and switches to it",
                  "Aliases": [],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "--scope",
                          "Description": "Remote scope to which this lane will be exported, default to the workspace.json\u0027s defaultScope",
                          "Aliases": [
                            "-s"
                          ],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "String",
                                  "Description": "",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--remote-scope",
                          "Description": "DEPRECATED. Use --scope",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--alias",
                          "Description": "A local alias to refer to this lane, defaults to the \u003Clane-name\u003E",
                          "Aliases": [],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "String",
                                  "Description": "",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--fork-lane-new-scope",
                          "Description": "Create the new lane in a different scope than its parent lane (if created from another lane)",
                          "Aliases": [],
                          "Arguments": []
                        }
                      ],
                      "Optional": true
                    },
                    {
                      "Arguments": [
                        {
                          "Name": "String",
                          "Description": "",
                          "Type": "String"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Name": "remove",
                  "Description": "Remove or delete lanes",
                  "Aliases": [],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "--remote",
                          "Description": "Delete a remote lane. Use remote/lane-id syntax e.g. bit lane remove owner.org/my-lane --remote. Delete is immediate, no export required",
                          "Aliases": [
                            "-r"
                          ],
                          "Arguments": []
                        },
                        {
                          "Name": "--force",
                          "Description": "Removes/deletes the lane even when the lane is not yet merged to main",
                          "Aliases": [
                            "-f"
                          ],
                          "Arguments": []
                        },
                        {
                          "Name": "--silent",
                          "Description": "Skip confirmation",
                          "Aliases": [
                            "-s"
                          ],
                          "Arguments": []
                        }
                      ],
                      "Optional": true
                    },
                    {
                      "Arguments": [
                        {
                          "Name": "String",
                          "Description": "",
                          "Type": "String"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Name": "change-scope",
                  "Description": "Changes the remote scope of a lane",
                  "Aliases": [],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "--lane-name",
                          "Description": "The name of the lane to change its remote scope. If not specified, the current lane is used",
                          "Aliases": [
                            "-l"
                          ],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "String",
                                  "Description": "",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "Optional": true
                    },
                    {
                      "Arguments": [
                        {
                          "Name": "String",
                          "Description": "",
                          "Type": "String"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Name": "alias",
                  "Description": "Adds an alias to a lane",
                  "Aliases": [],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "String",
                          "Description": "",
                          "Type": "String"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Name": "rename",
                  "Description": "EXPERIMENTAL. Change the lane-name locally and on the remote (if exported)",
                  "Aliases": [],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "--lane-name",
                          "Description": "The name of the lane to rename. If not specified, the current lane is used",
                          "Aliases": [
                            "-l"
                          ],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "String",
                                  "Description": "",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "Optional": true
                    },
                    {
                      "Arguments": [
                        {
                          "Name": "String",
                          "Description": "",
                          "Type": "String"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Name": "diff",
                  "Description": "Show diff between lanes",
                  "Aliases": [],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "--pattern",
                          "Description": "Show lane-diff for components conforming to the specified component-pattern only",
                          "Aliases": [
                            "-p"
                          ],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "String",
                                  "Description": "",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--workspace-only",
                          "Description": "Do not mark the components as removed from the lane. Instead, remove them from the workspace only",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--update-main",
                          "Description": "EXPERIMENTAL. Remove, i.e. delete, component/s on the main lane after merging this lane into main",
                          "Aliases": [],
                          "Arguments": []
                        }
                      ],
                      "Optional": true
                    },
                    {
                      "Arguments": [
                        {
                          "Name": "String",
                          "Description": "",
                          "Type": "String"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Name": "merge-abort",
                  "Description": "Abort the recent lane-merge. Revert the lane object and checkout accordingly",
                  "Aliases": [],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "--verbose",
                          "Description": "Show details of components that didn\u0027t need to be merged",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--silent",
                          "Description": "Skip confirmation",
                          "Aliases": [
                            "-s"
                          ],
                          "Arguments": []
                        },
                        {
                          "Name": "--skip-dependency-installation",
                          "Description": "Do not install packages of the imported components",
                          "Aliases": [],
                          "Arguments": []
                        }
                      ],
                      "Optional": true
                    }
                  ]
                },
                {
                  "Name": "merge",
                  "Description": "Merge a local or a remote lane to the current lane. By default, the provided lane will be fetched from the remote before merging. To merge the lane from the local scope without updating it first, use \u0027--skip-fetch\u0027 flag",
                  "Aliases": [],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "--ours",
                          "Description": "DEPRECATED. Use --auto-merge-resolve. In case of a conflict, keep local modifications",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--theirs",
                          "Description": "DEPRECATED. Use --auto-merge-resolve. In case of a conflict, override local with incoming changes",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--manual",
                          "Description": "DEPRECATED. Use --auto-merge-resolve. Requires manual resolution of conflicts",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--auto-merge-resolve",
                          "Description": "In case of a merge conflict, resolve according to the provided strategy. Options include: [ours, theirs, manual]",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--workspace",
                          "Description": "Merge only lane components that are in the current workspace",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--no-snap",
                          "Description": "Do not auto snap after merge completed without conflicts",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--tag",
                          "Description": "Auto-tag all lane components after merging into main (or tag-merge in case of snap-merge)",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--build",
                          "Description": "In case of snap during the merge, run the build-pipeline (similar to bit snap --build)",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--message",
                          "Description": "Override the default message for the auto snap",
                          "Aliases": [
                            "-m"
                          ],
                          "Arguments": []
                        },
                        {
                          "Name": "--keep-readme",
                          "Description": "Skip deleting the lane readme component after merging",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--no-squash",
                          "Description": "Relevant for merging lanes into main, which by default squashes all lane snaps",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--squash",
                          "Description": "EXPERIMENTAL. Relevant for merging a lane into another non-main lane, which by default does not squash",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--ignore-config-changes",
                          "Description": "Allow merging when components are modified due to config changes (such as dependencies) only and not files",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--verbose",
                          "Description": "Show details of components that were not merged successfully",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--skip-dependency-installation",
                          "Description": "Do not install dependencies of the imported components",
                          "Aliases": [
                            "-x"
                          ],
                          "Arguments": []
                        },
                        {
                          "Name": "--skip-fetch",
                          "Description": "Use the local state of target-lane if exits locally, without updating it from the remote",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--include-deps",
                          "Description": "Relevant for \u0022--pattern\u0022 and \u0022--workspace\u0022. Merge also dependencies of the specified components",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--resolve-unrelated",
                          "Description": "Relevant when a component on a lane and the component on main have nothing in common. merge-strategy can be \u0022ours\u0022 (default) or \u0022theirs\u0022",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--include-non-lane-comps",
                          "Description": "When merging main, include workspace components that are not on the lane (by default only lane components are merged)",
                          "Aliases": [],
                          "Arguments": []
                        }
                      ],
                      "Optional": true
                    },
                    {
                      "Arguments": [
                        {
                          "Name": "lane",
                          "Description": "lane",
                          "Type": "String"
                        }
                      ]
                    },
                    {
                      "Arguments": [
                        {
                          "Name": "pattern",
                          "Description": "pattern",
                          "Type": "String"
                        }
                      ],
                      "Optional": true
                    }
                  ]
                },
                {
                  "Name": "add-readme",
                  "Description": "EXPERIMENTAL. Sets an existing component as the readme of a lane",
                  "Aliases": [],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "component-id",
                          "Description": "component-id",
                          "Type": "String"
                        }
                      ]
                    },
                    {
                      "Arguments": [
                        {
                          "Name": "lane-name",
                          "Description": "lane-name",
                          "Type": "String"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Name": "remove-readme",
                  "Description": "EXPERIMENTAL. Remove lane readme component",
                  "Aliases": [],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "laneName",
                          "Description": "laneName",
                          "Type": "String"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Name": "import",
                  "Description": "Import a remote lane to your workspace and switch to that lane",
                  "Aliases": [],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "--skip-dependency-installation",
                          "Description": "Do not install dependencies of the imported components",
                          "Aliases": [
                            "-x"
                          ],
                          "Arguments": []
                        },
                        {
                          "Name": "--pattern",
                          "Description": "Import only components from the lane that fit the specified component-pattern to the workspace. Works only when the workspace is empty",
                          "Aliases": [
                            "-p"
                          ],
                          "Arguments": []
                        }
                      ],
                      "Optional": true
                    },
                    {
                      "Arguments": [
                        {
                          "Name": "lane",
                          "Description": "lane",
                          "Type": "String"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Name": "remove-comp",
                  "Description": "DEPRECATED. Remove components when on a lane",
                  "Aliases": [],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "--workspace-only",
                          "Description": "Do not mark the components as removed from the lane. Instead, remove them from the workspace only",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--update-main",
                          "Description": "EXPERIMENTAL. Remove, i.e., delete, component/s on the main lane after merging this lane into the main",
                          "Aliases": [],
                          "Arguments": []
                        }
                      ],
                      "Optional": true
                    },
                    {
                      "Arguments": [
                        {
                          "Name": "component-pattern",
                          "Description": "component-pattern",
                          "Type": "String"
                        }
                      ]
                    }
                  ]
                }
              ],
              "DontAllowMultiple": true
            }
          ]
        },
        {
          "Name": "log-file",
          "Description": "EXPERIMENTAL: Show file history",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "--one-line",
                  "Description": "Show each log entry in one line",
                  "Aliases": [
                    "-o"
                  ],
                  "Arguments": []
                }
              ],
              "Optional": true
            },
            {
              "Arguments": [
                {
                  "Name": "String",
                  "Description": "",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "mini-status",
          "Description": "EXPERIMENTAL. Basic status for fast execution",
          "Aliases": [
            "ms"
          ],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "--show-issues",
                  "Description": "Show component issues",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--json",
                  "Description": "Output in JSON format",
                  "Aliases": [
                    "-j"
                  ],
                  "Arguments": []
                }
              ],
              "Optional": true
            },
            {
              "Arguments": [
                {
                  "Name": "String",
                  "Description": "",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "pattern",
          "Description": "List the component ids matching the given pattern",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "--json",
                  "Description": "Return the output as JSON",
                  "Aliases": [
                    "-j"
                  ],
                  "Arguments": []
                }
              ],
              "Optional": true
            },
            {
              "Arguments": [
                {
                  "Name": "String",
                  "Description": "",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "recover",
          "Description": "EXPERIMENTAL. Recover component(s) soft-deleted from the workspace, or a remote scope",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "--skip-dependency-installation",
                  "Description": "Do not install packages in case of importing components",
                  "Aliases": [
                    "-x"
                  ],
                  "Arguments": []
                }
              ],
              "Optional": true
            },
            {
              "Arguments": [
                {
                  "Name": "String",
                  "Description": "",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "revert",
          "Description": "Replace the current component files by the specified version, leave the version intact",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "--verbose",
                  "Description": "Showing verbose output for inspection",
                  "Aliases": [
                    "-v"
                  ],
                  "Arguments": []
                },
                {
                  "Name": "--skip-dependency-installation",
                  "Description": "Do not install packages of the imported components",
                  "Aliases": [
                    "-x"
                  ],
                  "Arguments": []
                }
              ],
              "Optional": true
            },
            {
              "Arguments": [
                {
                  "Name": "String",
                  "Description": "",
                  "Type": "String"
                }
              ]
            },
            {
              "Arguments": [
                {
                  "Name": "String",
                  "Description": "",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "scope",
          "Description": "Manage the scope-name for components\n\nbit scope \u003Csub-command\u003E",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "set",
                  "Description": "Sets the scope for specified component/s. If no component is specified, sets the default scope of the workspace. Default scopes for components are set in the bitmap file. The default scope for a workspace is set in the workspace.jsonc. A component is set with a scope (as opposed to default scope) only once it is versioned. You can use a pattern for multiple component ids, such as bit scope set scope-name \u0022org.scope/utils/**\u0022. Use comma to separate patterns and \u0027!\u0027 to exclude. Always wrap the pattern with single quotes to avoid collision with shell commands.\n\nUsage: scope set \u003Cscope-name\u003E [component-pattern]",
                  "Aliases": [],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "String",
                          "Description": "",
                          "Type": "String"
                        }
                      ]
                    },
                    {
                      "Arguments": [
                        {
                          "Name": "String",
                          "Description": "",
                          "Type": "String"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Name": "rename",
                  "Description": "Renames the scope name for all components with the specified \u0027current scope name\u0027 - only available for new components that have not yet been snapped/tagged. If \u003Ccurrent-scope-name\u003E is also the defaultScope for the workspace, this command will set \u003Cnew-scope-name\u003E as the defaultScope instead.\n\nUsage: scope rename \u003Ccurrent-scope-name\u003E \u003Cnew-scope-name\u003E",
                  "Aliases": [],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "--refactor",
                          "Description": "Update the import statements in all dependent components",
                          "Aliases": [
                            "-r"
                          ],
                          "Arguments": []
                        }
                      ],
                      "Optional": true
                    },
                    {
                      "Arguments": [
                        {
                          "Name": "String",
                          "Description": "",
                          "Type": "String"
                        }
                      ]
                    },
                    {
                      "Arguments": [
                        {
                          "Name": "String",
                          "Description": "",
                          "Type": "String"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Name": "rename-owner",
                  "Description": "Renames the owner part of the scope-name for all components with the specified \u0027current owner name\u0027.\n\nUsage: scope rename-owner \u003Ccurrent-owner-name\u003E \u003Cnew-owner-name\u003E",
                  "Aliases": [],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "--refactor",
                          "Description": "Update the import statements in all dependent components",
                          "Aliases": [
                            "-r"
                          ],
                          "Arguments": []
                        },
                        {
                          "Name": "--ast",
                          "Description": "EXPERIMENTAL. Use AST to transform files instead of regex",
                          "Aliases": [],
                          "Arguments": []
                        }
                      ],
                      "Optional": true
                    },
                    {
                      "Arguments": [
                        {
                          "Name": "String",
                          "Description": "",
                          "Type": "String"
                        }
                      ]
                    },
                    {
                      "Arguments": [
                        {
                          "Name": "String",
                          "Description": "",
                          "Type": "String"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Name": "fork",
                  "Description": "Fork all components of the original-scope and refactor the source-code to use the new scope name.\n\nUsage: scope fork \u003Coriginal-scope\u003E \u003Cnew-scope\u003E",
                  "Aliases": [],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "--ast",
                          "Description": "EXPERIMENTAL. Use AST to transform files instead of regex",
                          "Aliases": [],
                          "Arguments": []
                        }
                      ],
                      "Optional": true
                    }
                  ]
                }
              ],
              "DontAllowMultiple": true
            }
          ]
        },
        {
          "Name": "server",
          "Description": "EXPERIMENTAL. Communicate with bit CLI program via HTTP requests\n\nbit server",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "--port",
                  "Description": "Port to run the server on",
                  "Aliases": [
                    "-p"
                  ],
                  "Arguments": []
                }
              ],
              "Optional": true
            }
          ]
        },
        {
          "Name": "system",
          "Description": "System operations\n\nbit system \u003Csub-command\u003E",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "log",
                  "Description": "Print debug.log to the screen\n\nUsage: system log",
                  "Aliases": [],
                  "Arguments": []
                }
              ],
              "DontAllowMultiple": true
            }
          ]
        },
        {
          "Name": "snap",
          "Description": "Create an immutable and exportable component snapshot (non-release version)\n\nbit snap [component-pattern]",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "--message",
                  "Description": "Snap message describing the latest changes - will appear in component history log",
                  "Aliases": [
                    "-m"
                  ],
                  "Arguments": []
                },
                {
                  "Name": "--unmodified",
                  "Description": "Include unmodified components (by default, only new and modified components are snapped)",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--unmerged",
                  "Description": "Complete a merge process by snapping the unmerged components",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--build",
                  "Description": "Not needed for now. Run the build pipeline locally in case the feature-flag build-on-ci is enabled",
                  "Aliases": [
                    "-b"
                  ],
                  "Arguments": []
                },
                {
                  "Name": "--editor",
                  "Description": "Open an editor to write a snap message per component. Optionally specify the editor-name (defaults to vim)",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--skip-tests",
                  "Description": "Skip running component tests during snap process",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--skip-auto-snap",
                  "Description": "Skip auto snapping dependents",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--disable-snap-pipeline",
                  "Description": "Skip the snap pipeline. This will for instance skip packing and publishing component version for install, and app deployment",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--ignore-build-errors",
                  "Description": "Proceed to snap pipeline even when build pipeline fails",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--ignore-issues",
                  "Description": "Ignore component issues (shown in \u0022bit status\u0022 as \u0022issues found\u0022), issues to ignore: [MissingPackagesDependenciesOnFs, MissingManuallyConfiguredPackages, MissingComponents, UntrackedDependencies, ResolveErrors, RelativeComponents, RelativeComponentsAuthored, ParseErrors, MissingDists, LegacyInsideHarmony, MissingDependenciesOnFs, ImportNonMainFiles, MultipleEnvs, MissingLinksFromNodeModulesToSrc, CircularDependencies, DuplicateComponentAndPackage, MergeConfigHasConflict, NonLoadedEnv, ExternalEnvWithoutVersion, RemovedDependencies] to ignore multiple issues, separate them by a comma and wrap with quotes. To ignore all issues, specify \u0022*\u0022",
                  "Aliases": [
                    "-i"
                  ],
                  "Arguments": []
                },
                {
                  "Name": "--all",
                  "Description": "DEPRECATED (not needed anymore, now the default). Snap all new and modified components",
                  "Aliases": [
                    "-a"
                  ],
                  "Arguments": []
                },
                {
                  "Name": "--fail-fast",
                  "Description": "Stop pipeline execution on the first failed task (by default a task is skipped only when its dependency failed)",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--force",
                  "Description": "DEPRECATED (use \u0022--skip-tests\u0022 or \u0022--unmodified\u0022 instead). Force-snap even if tests are failing and even when component has not changed",
                  "Aliases": [
                    "-f"
                  ],
                  "Arguments": []
                }
              ],
              "Optional": true
            },
            {
              "Arguments": [
                {
                  "Name": "String",
                  "Description": "",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "watch",
          "Description": "Automatically recompile modified components (on save). By default, the watcher doesn\u0027t use polling, to keep the CPU idle. In some rare cases, this could result in missing file events (files are not watched). To fix it, try to stop other watchers on the same machine. Alternatively, to use polling, run \u0022bit config set watch_use_polling true\u0022.\n\nbit watch",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "--verbose",
                  "Description": "Show all watch events and compiler verbose output",
                  "Aliases": [
                    "-v"
                  ],
                  "Arguments": []
                },
                {
                  "Name": "--skip-pre-compilation",
                  "Description": "Skip compilation step before starting to watch",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--check-types",
                  "Description": "EXPERIMENTAL. Show errors/warnings for types. Options are [file, project] to investigate only changed file or entire project. Defaults to project",
                  "Aliases": [
                    "-t"
                  ],
                  "Arguments": []
                }
              ],
              "Optional": true
            }
          ]
        },
        {
          "Name": "use",
          "Description": "Set aspects in the workspace/scope config to make them loadable by the workspace/scope.\n\nbit use \u003Ccomponent-id\u003E",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "String",
                  "Description": "",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "ws-config",
          "Description": "Manage workspace config files.\n\nbit ws-config \u003Csub-command\u003E",
          "Aliases": [
            "workspace-config"
          ],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "ws-config write",
                  "Description": "EXPERIMENTAL. Write config files in the workspace. Useful for IDEs.\n\nws-config write",
                  "Aliases": [],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "--clean",
                          "Description": "Delete existing config files from the workspace. Highly recommended to run it with \u0022--dry-run\u0022 first",
                          "Aliases": [
                            "-c"
                          ],
                          "Arguments": []
                        },
                        {
                          "Name": "--writers",
                          "Description": "Only write config files for the given writers. Use comma to separate multiple writers. Use ws-config list to see all writers",
                          "Aliases": [
                            "-w"
                          ],
                          "Arguments": []
                        },
                        {
                          "Name": "--silent",
                          "Description": "Do not prompt for confirmation",
                          "Aliases": [
                            "-s"
                          ],
                          "Arguments": []
                        },
                        {
                          "Name": "--no-dedupe",
                          "Description": "Write configs inside each one of the component\u0027s dir, avoid deduping",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--dry-run",
                          "Description": "Show the paths that configs will be written per env",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--dry-run-with-content",
                          "Description": "Use with --json flag. Show the config content and the paths that will be written per env",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--verbose",
                          "Description": "Showing verbose output for writing",
                          "Aliases": [
                            "-v"
                          ],
                          "Arguments": []
                        },
                        {
                          "Name": "--json",
                          "Description": "JSON format",
                          "Aliases": [
                            "-j"
                          ],
                          "Arguments": []
                        }
                      ],
                      "Optional": true
                    }
                  ]
                },
                {
                  "Name": "ws-config clean",
                  "Description": "EXPERIMENTAL. Clean (delete) written config files in the workspace. Useful for IDEs.\n\nws-config clean",
                  "Aliases": [],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "--silent",
                          "Description": "Do not prompt for confirmation",
                          "Aliases": [
                            "-s"
                          ],
                          "Arguments": []
                        },
                        {
                          "Name": "--writers",
                          "Description": "Only clean config files for the given writers. Use comma to separate multiple writers. Use ws-config list to see all writers",
                          "Aliases": [
                            "-w"
                          ],
                          "Arguments": []
                        },
                        {
                          "Name": "--dry-run",
                          "Description": "Show the paths of configs that will be cleaned",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--json",
                          "Description": "JSON format",
                          "Aliases": [
                            "-j"
                          ],
                          "Arguments": []
                        }
                      ],
                      "Optional": true
                    }
                  ]
                },
                {
                  "Name": "ws-config list",
                  "Description": "EXPERIMENTAL. List config writers.\n\nws-config list",
                  "Aliases": [],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "--json",
                          "Description": "JSON format",
                          "Aliases": [
                            "-j"
                          ],
                          "Arguments": []
                        }
                      ],
                      "Optional": true
                    }
                  ]
                }
              ],
              "DontAllowMultiple": true
            }
          ]
        }
      ],
      "DontAllowMultiple": true
    }
  ]
}