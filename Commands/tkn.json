{
  "Comment": "This command info is generated from fig",
  "Name": "tkn",
  "Description": "CLI for tekton pipelines",
  "Arguments": [
    {
      "Arguments": [
        {
          "Name": "--help",
          "Description": "Display help",
          "Aliases": [
            "-h"
          ],
          "Arguments": []
        }
      ],
      "Optional": true
    },
    {
      "Arguments": [
        {
          "Name": "tkb",
          "Description": "Manage Tekton Bundles",
          "Aliases": [
            "bundles",
            "bundle"
          ],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "--context",
                  "Description": "Name of the kubeconfig context to use (default: kubectl config current-context)",
                  "Aliases": [
                    "-c"
                  ],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "context",
                          "Description": "context",
                          "Type": "String"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Name": "--kubeconfig",
                  "Description": "Kubectl config file (default: $HOME/.kube/config)",
                  "Aliases": [
                    "-k"
                  ],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "kubeconfig",
                          "Description": "kubeconfig",
                          "Type": "String"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Name": "--namespace",
                  "Description": "Namespace to use (default: from $KUBECONFIG)",
                  "Aliases": [
                    "-n"
                  ],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "namespace",
                          "Description": "namespace",
                          "Type": "String"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Name": "--no-color",
                  "Description": "Disable coloring (default: false)",
                  "Aliases": [
                    "-C"
                  ],
                  "Arguments": []
                },
                {
                  "Name": "--nocolour",
                  "Description": "Disable colouring (default: false)",
                  "Aliases": [],
                  "Arguments": []
                }
              ],
              "Optional": true
            },
            {
              "Arguments": [
                {
                  "Name": "list",
                  "Description": "List and print a Tekton bundle\u0027s contents",
                  "Aliases": [],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "--allow-missing-template-keys",
                          "Description": "If true, ignore any errors in templates when a field or map key is missing in the template. Only applies to golang and jsonpath output formats",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--cache-dir",
                          "Description": "A directory to cache Tekton bundles in",
                          "Aliases": [],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "cache-dir",
                                  "Description": "cache-dir",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--no-cache",
                          "Description": "If set to true, pulls a Tekton bundle from the remote even its exact digest is available in the cache",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--output",
                          "Description": "Output format. One of: (json, yaml, name, go-template, go-template-file, template, templatefile, jsonpath, jsonpath-as-json, jsonpath-file)",
                          "Aliases": [
                            "-o"
                          ],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "output",
                                  "Description": "output",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--remote-bearer",
                          "Description": "A Bearer token to authenticate against the repository",
                          "Aliases": [],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "remote-bearer",
                                  "Description": "remote-bearer",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--remote-password",
                          "Description": "A password to pass to the registry for basic auth. Must be used with --remote-username",
                          "Aliases": [],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "remote-password",
                                  "Description": "remote-password",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--remote-skip-tls",
                          "Description": "If set to true, skips TLS check when connecting to the registry",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--remote-username",
                          "Description": "A username to pass to the registry for basic auth. Must be used with --remote-password",
                          "Aliases": [],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "remote-username",
                                  "Description": "remote-username",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--show-managed-fields",
                          "Description": "If true, keep the managedFields when printing objects in JSON or YAML format",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--template",
                          "Description": "Template string or path to template file to use when -o=go-template, -o=go-template-file. The template format is golang templates [http://golang.org/pkg/text/template/#pkg-overview]",
                          "Aliases": [],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "template",
                                  "Description": "template",
                                  "Type": "FileSystemEntry"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "Optional": true
                    }
                  ]
                },
                {
                  "Name": "push",
                  "Description": "Create or replace a Tekton bundle",
                  "Aliases": [],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "--filenames",
                          "Description": "List of fully-qualified file paths containing YAML or JSON defined Tekton objects to include in this bundle",
                          "Aliases": [
                            "-f"
                          ],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "filenames",
                                  "Description": "filenames",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--remote-bearer",
                          "Description": "A Bearer token to authenticate against the repository",
                          "Aliases": [],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "remote-bearer",
                                  "Description": "remote-bearer",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--remote-password",
                          "Description": "A password to pass to the registry for basic auth. Must be used with --remote-username",
                          "Aliases": [],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "remote-password",
                                  "Description": "remote-password",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--remote-skip-tls",
                          "Description": "If set to true, skips TLS check when connecting to the registry",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--remote-username",
                          "Description": "A username to pass to the registry for basic auth. Must be used with --remote-password",
                          "Aliases": [],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "remote-username",
                                  "Description": "remote-username",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "Optional": true
                    }
                  ]
                }
              ],
              "DontAllowMultiple": true
            }
          ]
        },
        {
          "Name": "chains",
          "Description": "Manage Chains",
          "Aliases": [
            "chain"
          ],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "--chains-namespace",
                  "Description": "Namespace in which chains is installed",
                  "Aliases": [],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "chains-namespace",
                          "Description": "chains-namespace",
                          "Type": "String"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Name": "--context",
                  "Description": "Name of the kubeconfig context to use (default: kubectl config current-context)",
                  "Aliases": [
                    "-c"
                  ],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "context",
                          "Description": "context",
                          "Type": "String"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Name": "--kubeconfig",
                  "Description": "Kubectl config file (default: $HOME/.kube/config)",
                  "Aliases": [
                    "-k"
                  ],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "kubeconfig",
                          "Description": "kubeconfig",
                          "Type": "String"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Name": "--namespace",
                  "Description": "Namespace to use (default: from $KUBECONFIG)",
                  "Aliases": [
                    "-n"
                  ],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "namespace",
                          "Description": "namespace",
                          "Type": "String"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Name": "--no-color",
                  "Description": "Disable coloring (default: false)",
                  "Aliases": [
                    "-C"
                  ],
                  "Arguments": []
                },
                {
                  "Name": "--nocolour",
                  "Description": "Disable colouring (default: false)",
                  "Aliases": [],
                  "Arguments": []
                }
              ],
              "Optional": true
            },
            {
              "Arguments": [
                {
                  "Name": "payload",
                  "Description": "Print Tekton Chains\u0027 payload for a specific taskrun",
                  "Aliases": [],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "--allow-missing-template-keys",
                          "Description": "If true, ignore any errors in templates when a field or map key is missing in the template. Only applies to golang and jsonpath output formats",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--output",
                          "Description": "Output format. One of: (json, yaml, name, go-template, go-template-file, template, templatefile, jsonpath, jsonpath-as-json, jsonpath-file)",
                          "Aliases": [
                            "-o"
                          ],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "output",
                                  "Description": "output",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--show-managed-fields",
                          "Description": "If true, keep the managedFields when printing objects in JSON or YAML format",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--skip-verify",
                          "Description": "Skip verifying the payload\u0027signature",
                          "Aliases": [
                            "-S"
                          ],
                          "Arguments": []
                        },
                        {
                          "Name": "--template",
                          "Description": "Template string or path to template file to use when -o=go-template, -o=go-template-file. The template format is golang templates [http://golang.org/pkg/text/template/#pkg-overview]",
                          "Aliases": [],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "template",
                                  "Description": "template",
                                  "Type": "FileSystemEntry"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "Optional": true
                    }
                  ]
                },
                {
                  "Name": "signature",
                  "Description": "Print Tekton Chains\u0027 signature for a specific taskrun",
                  "Aliases": [],
                  "Arguments": []
                }
              ],
              "DontAllowMultiple": true
            }
          ]
        },
        {
          "Name": "ct",
          "Description": "Manage ClusterTasks",
          "Aliases": [
            "clustertasks",
            "clustertask"
          ],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "--context",
                  "Description": "Name of the kubeconfig context to use (default: kubectl config current-context)",
                  "Aliases": [
                    "-c"
                  ],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "context",
                          "Description": "context",
                          "Type": "String"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Name": "--kubeconfig",
                  "Description": "Kubectl config file (default: $HOME/.kube/config)",
                  "Aliases": [
                    "-k"
                  ],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "kubeconfig",
                          "Description": "kubeconfig",
                          "Type": "String"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Name": "--namespace",
                  "Description": "Namespace to use (default: from $KUBECONFIG)",
                  "Aliases": [
                    "-n"
                  ],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "namespace",
                          "Description": "namespace",
                          "Type": "String"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Name": "--no-color",
                  "Description": "Disable coloring (default: false)",
                  "Aliases": [
                    "-C"
                  ],
                  "Arguments": []
                },
                {
                  "Name": "--nocolour",
                  "Description": "Disable colouring (default: false)",
                  "Aliases": [],
                  "Arguments": []
                }
              ],
              "Optional": true
            },
            {
              "Arguments": [
                {
                  "Name": "create",
                  "Description": "Create a ClusterTask from Task",
                  "Aliases": [],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "--from",
                          "Description": "Create a ClusterTask from Task in a particular namespace",
                          "Aliases": [],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "from",
                                  "Description": "from",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "Optional": true
                    }
                  ]
                },
                {
                  "Name": "rm",
                  "Description": "Delete ClusterTasks in a cluster",
                  "Aliases": [
                    "delete"
                  ],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "--all",
                          "Description": "Delete all ClusterTasks (default: false)",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--allow-missing-template-keys",
                          "Description": "If true, ignore any errors in templates when a field or map key is missing in the template. Only applies to golang and jsonpath output formats",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--force",
                          "Description": "Whether to force deletion (default: false)",
                          "Aliases": [
                            "-f"
                          ],
                          "Arguments": []
                        },
                        {
                          "Name": "--output",
                          "Description": "Output format. One of: (json, yaml, name, go-template, go-template-file, template, templatefile, jsonpath, jsonpath-as-json, jsonpath-file)",
                          "Aliases": [
                            "-o"
                          ],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "output",
                                  "Description": "output",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--show-managed-fields",
                          "Description": "If true, keep the managedFields when printing objects in JSON or YAML format",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--template",
                          "Description": "Template string or path to template file to use when -o=go-template, -o=go-template-file. The template format is golang templates [http://golang.org/pkg/text/template/#pkg-overview]",
                          "Aliases": [],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "template",
                                  "Description": "template",
                                  "Type": "FileSystemEntry"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--trs",
                          "Description": "Whether to delete ClusterTask(s) and related resources (TaskRuns) (default: false)",
                          "Aliases": [],
                          "Arguments": []
                        }
                      ],
                      "Optional": true
                    }
                  ]
                },
                {
                  "Name": "desc",
                  "Description": "Describe a ClusterTask",
                  "Aliases": [
                    "describe"
                  ],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "--allow-missing-template-keys",
                          "Description": "If true, ignore any errors in templates when a field or map key is missing in the template. Only applies to golang and jsonpath output formats",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--output",
                          "Description": "Output format. One of: (json, yaml, name, go-template, go-template-file, template, templatefile, jsonpath, jsonpath-as-json, jsonpath-file)",
                          "Aliases": [
                            "-o"
                          ],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "output",
                                  "Description": "output",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--show-managed-fields",
                          "Description": "If true, keep the managedFields when printing objects in JSON or YAML format",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--template",
                          "Description": "Template string or path to template file to use when -o=go-template, -o=go-template-file. The template format is golang templates [http://golang.org/pkg/text/template/#pkg-overview]",
                          "Aliases": [],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "template",
                                  "Description": "template",
                                  "Type": "FileSystemEntry"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "Optional": true
                    }
                  ]
                },
                {
                  "Name": "ls",
                  "Description": "Lists ClusterTasks",
                  "Aliases": [
                    "list"
                  ],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "--allow-missing-template-keys",
                          "Description": "If true, ignore any errors in templates when a field or map key is missing in the template. Only applies to golang and jsonpath output formats",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--no-headers",
                          "Description": "Do not print column headers with output (default print column headers with output)",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--output",
                          "Description": "Output format. One of: (json, yaml, name, go-template, go-template-file, template, templatefile, jsonpath, jsonpath-as-json, jsonpath-file)",
                          "Aliases": [
                            "-o"
                          ],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "output",
                                  "Description": "output",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--show-managed-fields",
                          "Description": "If true, keep the managedFields when printing objects in JSON or YAML format",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--template",
                          "Description": "Template string or path to template file to use when -o=go-template, -o=go-template-file. The template format is golang templates [http://golang.org/pkg/text/template/#pkg-overview]",
                          "Aliases": [],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "template",
                                  "Description": "template",
                                  "Type": "FileSystemEntry"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "Optional": true
                    }
                  ]
                },
                {
                  "Name": "logs",
                  "Description": "Show ClusterTask logs",
                  "Aliases": [],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "--all",
                          "Description": "Show all logs including init steps injected by tekton",
                          "Aliases": [
                            "-a"
                          ],
                          "Arguments": []
                        },
                        {
                          "Name": "--follow",
                          "Description": "Stream live logs",
                          "Aliases": [
                            "-f"
                          ],
                          "Arguments": []
                        },
                        {
                          "Name": "--last",
                          "Description": "Show logs for last TaskRun",
                          "Aliases": [
                            "-L"
                          ],
                          "Arguments": []
                        },
                        {
                          "Name": "--limit",
                          "Description": "Lists number of TaskRuns",
                          "Aliases": [],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "limit",
                                  "Description": "limit",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--timestamps",
                          "Description": "Show logs with timestamp",
                          "Aliases": [
                            "-t"
                          ],
                          "Arguments": []
                        }
                      ],
                      "Optional": true
                    }
                  ]
                },
                {
                  "Name": "start",
                  "Description": "Start ClusterTasks",
                  "Aliases": [],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "--dry-run",
                          "Description": "Preview TaskRun without running it",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--inputresource",
                          "Description": "Pass the input resource name and ref as name=ref",
                          "Aliases": [
                            "-i"
                          ],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "inputresource",
                                  "Description": "inputresource",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--labels",
                          "Description": "Pass labels as label=value",
                          "Aliases": [
                            "-l"
                          ],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "labels",
                                  "Description": "labels",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--last",
                          "Description": "Re-run the ClusterTask using last TaskRun values",
                          "Aliases": [
                            "-L"
                          ],
                          "Arguments": []
                        },
                        {
                          "Name": "--output",
                          "Description": "Format of TaskRun (yaml or json)",
                          "Aliases": [],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "output",
                                  "Description": "output",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--outputresource",
                          "Description": "Pass the output resource name and ref as name=ref",
                          "Aliases": [
                            "-o"
                          ],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "outputresource",
                                  "Description": "outputresource",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--param",
                          "Description": "Pass the param as key=value for string type, or key=value1,value2,... for array type",
                          "Aliases": [
                            "-p"
                          ],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "param",
                                  "Description": "param",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--pod-template",
                          "Description": "Local or remote file containing a PodTemplate definition",
                          "Aliases": [],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "pod-template",
                                  "Description": "pod-template",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--prefix-name",
                          "Description": "Specify a prefix for the TaskRun name (must be lowercase alphanumeric characters)",
                          "Aliases": [],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "prefix-name",
                                  "Description": "prefix-name",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--serviceaccount",
                          "Description": "Pass the serviceaccount name",
                          "Aliases": [
                            "-s"
                          ],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "serviceaccount",
                                  "Description": "serviceaccount",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--showlog",
                          "Description": "Show logs right after starting the ClusterTask",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--skip-optional-workspace",
                          "Description": "Skips the prompt for optional workspaces",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--timeout",
                          "Description": "Timeout for TaskRun",
                          "Aliases": [],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "timeout",
                                  "Description": "timeout",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--use-param-defaults",
                          "Description": "Use default parameter values without prompting for input",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--use-taskrun",
                          "Description": "Specify a TaskRun name to use its values to re-run the TaskRun",
                          "Aliases": [],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "use-taskrun",
                                  "Description": "use-taskrun",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--workspace",
                          "Description": "Pass one or more workspaces to map to the corresponding physical volumes",
                          "Aliases": [
                            "-w"
                          ],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "workspace",
                                  "Description": "workspace",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "Optional": true
                    }
                  ]
                }
              ],
              "DontAllowMultiple": true
            }
          ]
        },
        {
          "Name": "ctb",
          "Description": "Manage ClusterTriggerBindings",
          "Aliases": [
            "clustertriggerbindings",
            "clustertriggerbinding"
          ],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "--context",
                  "Description": "Name of the kubeconfig context to use (default: kubectl config current-context)",
                  "Aliases": [
                    "-c"
                  ],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "context",
                          "Description": "context",
                          "Type": "String"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Name": "--kubeconfig",
                  "Description": "Kubectl config file (default: $HOME/.kube/config)",
                  "Aliases": [
                    "-k"
                  ],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "kubeconfig",
                          "Description": "kubeconfig",
                          "Type": "String"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Name": "--namespace",
                  "Description": "Namespace to use (default: from $KUBECONFIG)",
                  "Aliases": [
                    "-n"
                  ],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "namespace",
                          "Description": "namespace",
                          "Type": "String"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Name": "--no-color",
                  "Description": "Disable coloring (default: false)",
                  "Aliases": [
                    "-C"
                  ],
                  "Arguments": []
                },
                {
                  "Name": "--nocolour",
                  "Description": "Disable colouring (default: false)",
                  "Aliases": [],
                  "Arguments": []
                }
              ],
              "Optional": true
            },
            {
              "Arguments": [
                {
                  "Name": "rm",
                  "Description": "Delete ClusterTriggerBindings",
                  "Aliases": [
                    "delete"
                  ],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "--all",
                          "Description": "Delete all ClusterTriggerBindings (default: false)",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--allow-missing-template-keys",
                          "Description": "If true, ignore any errors in templates when a field or map key is missing in the template. Only applies to golang and jsonpath output formats",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--force",
                          "Description": "Whether to force deletion (default: false)",
                          "Aliases": [
                            "-f"
                          ],
                          "Arguments": []
                        },
                        {
                          "Name": "--output",
                          "Description": "Output format. One of: (json, yaml, name, go-template, go-template-file, template, templatefile, jsonpath, jsonpath-as-json, jsonpath-file)",
                          "Aliases": [
                            "-o"
                          ],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "output",
                                  "Description": "output",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--show-managed-fields",
                          "Description": "If true, keep the managedFields when printing objects in JSON or YAML format",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--template",
                          "Description": "Template string or path to template file to use when -o=go-template, -o=go-template-file. The template format is golang templates [http://golang.org/pkg/text/template/#pkg-overview]",
                          "Aliases": [],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "template",
                                  "Description": "template",
                                  "Type": "FileSystemEntry"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "Optional": true
                    }
                  ]
                },
                {
                  "Name": "desc",
                  "Description": "Describes a ClusterTriggerBinding",
                  "Aliases": [
                    "describe"
                  ],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "--allow-missing-template-keys",
                          "Description": "If true, ignore any errors in templates when a field or map key is missing in the template. Only applies to golang and jsonpath output formats",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--output",
                          "Description": "Output format. One of: (json, yaml, name, go-template, go-template-file, template, templatefile, jsonpath, jsonpath-as-json, jsonpath-file)",
                          "Aliases": [
                            "-o"
                          ],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "output",
                                  "Description": "output",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--show-managed-fields",
                          "Description": "If true, keep the managedFields when printing objects in JSON or YAML format",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--template",
                          "Description": "Template string or path to template file to use when -o=go-template, -o=go-template-file. The template format is golang templates [http://golang.org/pkg/text/template/#pkg-overview]",
                          "Aliases": [],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "template",
                                  "Description": "template",
                                  "Type": "FileSystemEntry"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "Optional": true
                    }
                  ]
                },
                {
                  "Name": "ls",
                  "Description": "Lists ClusterTriggerBindings in a namespace",
                  "Aliases": [
                    "list"
                  ],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "--allow-missing-template-keys",
                          "Description": "If true, ignore any errors in templates when a field or map key is missing in the template. Only applies to golang and jsonpath output formats",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--no-headers",
                          "Description": "Do not print column headers with output (default print column headers with output)",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--output",
                          "Description": "Output format. One of: (json, yaml, name, go-template, go-template-file, template, templatefile, jsonpath, jsonpath-as-json, jsonpath-file)",
                          "Aliases": [
                            "-o"
                          ],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "output",
                                  "Description": "output",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--show-managed-fields",
                          "Description": "If true, keep the managedFields when printing objects in JSON or YAML format",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--template",
                          "Description": "Template string or path to template file to use when -o=go-template, -o=go-template-file. The template format is golang templates [http://golang.org/pkg/text/template/#pkg-overview]",
                          "Aliases": [],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "template",
                                  "Description": "template",
                                  "Type": "FileSystemEntry"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "Optional": true
                    }
                  ]
                }
              ],
              "DontAllowMultiple": true
            }
          ]
        },
        {
          "Name": "completion",
          "Description": "Prints shell completion scripts",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "el",
          "Description": "Manage EventListeners",
          "Aliases": [
            "eventlisteners",
            "eventlistener"
          ],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "--context",
                  "Description": "Name of the kubeconfig context to use (default: kubectl config current-context)",
                  "Aliases": [
                    "-c"
                  ],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "context",
                          "Description": "context",
                          "Type": "String"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Name": "--kubeconfig",
                  "Description": "Kubectl config file (default: $HOME/.kube/config)",
                  "Aliases": [
                    "-k"
                  ],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "kubeconfig",
                          "Description": "kubeconfig",
                          "Type": "String"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Name": "--namespace",
                  "Description": "Namespace to use (default: from $KUBECONFIG)",
                  "Aliases": [
                    "-n"
                  ],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "namespace",
                          "Description": "namespace",
                          "Type": "String"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Name": "--no-color",
                  "Description": "Disable coloring (default: false)",
                  "Aliases": [
                    "-C"
                  ],
                  "Arguments": []
                },
                {
                  "Name": "--nocolour",
                  "Description": "Disable colouring (default: false)",
                  "Aliases": [],
                  "Arguments": []
                }
              ],
              "Optional": true
            },
            {
              "Arguments": [
                {
                  "Name": "rm",
                  "Description": "Delete EventListeners in a namespace",
                  "Aliases": [
                    "delete"
                  ],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "--all",
                          "Description": "Delete all EventListeners in a namespace (default: false)",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--allow-missing-template-keys",
                          "Description": "If true, ignore any errors in templates when a field or map key is missing in the template. Only applies to golang and jsonpath output formats",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--force",
                          "Description": "Whether to force deletion (default: false)",
                          "Aliases": [
                            "-f"
                          ],
                          "Arguments": []
                        },
                        {
                          "Name": "--output",
                          "Description": "Output format. One of: (json, yaml, name, go-template, go-template-file, template, templatefile, jsonpath, jsonpath-as-json, jsonpath-file)",
                          "Aliases": [
                            "-o"
                          ],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "output",
                                  "Description": "output",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--show-managed-fields",
                          "Description": "If true, keep the managedFields when printing objects in JSON or YAML format",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--template",
                          "Description": "Template string or path to template file to use when -o=go-template, -o=go-template-file. The template format is golang templates [http://golang.org/pkg/text/template/#pkg-overview]",
                          "Aliases": [],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "template",
                                  "Description": "template",
                                  "Type": "FileSystemEntry"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "Optional": true
                    }
                  ]
                },
                {
                  "Name": "desc",
                  "Description": "Describe EventListener in a namespace",
                  "Aliases": [
                    "describe"
                  ],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "--allow-missing-template-keys",
                          "Description": "If true, ignore any errors in templates when a field or map key is missing in the template. Only applies to golang and jsonpath output formats",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--output",
                          "Description": "Output format. One of: (json, yaml, name, go-template, go-template-file, template, templatefile, jsonpath, jsonpath-as-json, jsonpath-file)",
                          "Aliases": [
                            "-o"
                          ],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "output",
                                  "Description": "output",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--show-managed-fields",
                          "Description": "If true, keep the managedFields when printing objects in JSON or YAML format",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--template",
                          "Description": "Template string or path to template file to use when -o=go-template, -o=go-template-file. The template format is golang templates [http://golang.org/pkg/text/template/#pkg-overview]",
                          "Aliases": [],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "template",
                                  "Description": "template",
                                  "Type": "FileSystemEntry"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "Optional": true
                    }
                  ]
                },
                {
                  "Name": "ls",
                  "Description": "Lists EventListeners in a namespace",
                  "Aliases": [
                    "list"
                  ],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "--all-namespaces",
                          "Description": "List EventListeners from all namespaces",
                          "Aliases": [
                            "-A"
                          ],
                          "Arguments": []
                        },
                        {
                          "Name": "--allow-missing-template-keys",
                          "Description": "If true, ignore any errors in templates when a field or map key is missing in the template. Only applies to golang and jsonpath output formats",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--no-headers",
                          "Description": "Do not print column headers with output (default print column headers with output)",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--output",
                          "Description": "Output format. One of: (json, yaml, name, go-template, go-template-file, template, templatefile, jsonpath, jsonpath-as-json, jsonpath-file)",
                          "Aliases": [
                            "-o"
                          ],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "output",
                                  "Description": "output",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--show-managed-fields",
                          "Description": "If true, keep the managedFields when printing objects in JSON or YAML format",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--template",
                          "Description": "Template string or path to template file to use when -o=go-template, -o=go-template-file. The template format is golang templates [http://golang.org/pkg/text/template/#pkg-overview]",
                          "Aliases": [],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "template",
                                  "Description": "template",
                                  "Type": "FileSystemEntry"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "Optional": true
                    }
                  ]
                },
                {
                  "Name": "logs",
                  "Description": "Show EventListener logs",
                  "Aliases": [],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "--tail",
                          "Description": "Number of most recent log lines to show. Specify -1 for all logs from each pod",
                          "Aliases": [
                            "-t"
                          ],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "tail",
                                  "Description": "tail",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "Optional": true
                    }
                  ]
                }
              ],
              "DontAllowMultiple": true
            }
          ]
        },
        {
          "Name": "hub",
          "Description": "Interact with tekton hub",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "--api-server",
                  "Description": "Hub API Server URL (default \u0027https://api.hub.tekton.dev\u0027 for \u0027tekton\u0027 type; default \u0027https://artifacthub.io\u0027 for \u0027artifact\u0027 type). URL can also be defined in a file \u0027$HOME/.tekton/hub-config\u0027 with a variable \u0027TEKTON_HUB_API_SERVER\u0027/\u0027ARTIFACT_HUB_API_SERVER\u0027",
                  "Aliases": [],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "api-server",
                          "Description": "api-server",
                          "Type": "String"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Name": "--type",
                  "Description": "The type of Hub from where to pull the resource. Either \u0027artifact\u0027 or \u0027tekton\u0027 (default \u0027tekton\u0027)",
                  "Aliases": [],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "type",
                          "Description": "type",
                          "Type": "String"
                        }
                      ]
                    }
                  ]
                }
              ],
              "Optional": true
            },
            {
              "Arguments": [
                {
                  "Name": "check-upgrade",
                  "Description": "Check for upgrades of resources if present",
                  "Aliases": [],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "--context",
                          "Description": "Name of the kubeconfig context to use (default: kubectl config current-context)",
                          "Aliases": [
                            "-c"
                          ],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "context",
                                  "Description": "context",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--kubeconfig",
                          "Description": "Kubectl config file (default: $HOME/.kube/config)",
                          "Aliases": [
                            "-k"
                          ],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "kubeconfig",
                                  "Description": "kubeconfig",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--namespace",
                          "Description": "Namespace to use (default: from $KUBECONFIG)",
                          "Aliases": [
                            "-n"
                          ],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "namespace",
                                  "Description": "namespace",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "Optional": true
                    },
                    {
                      "Arguments": [
                        {
                          "Name": "task",
                          "Description": "Check updates for Task installed via Hub CLI",
                          "Aliases": [],
                          "Arguments": []
                        }
                      ],
                      "DontAllowMultiple": true
                    }
                  ]
                },
                {
                  "Name": "downgrade",
                  "Description": "Downgrade an installed resource",
                  "Aliases": [],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "--context",
                          "Description": "Name of the kubeconfig context to use (default: kubectl config current-context)",
                          "Aliases": [
                            "-c"
                          ],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "context",
                                  "Description": "context",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--kubeconfig",
                          "Description": "Kubectl config file (default: $HOME/.kube/config)",
                          "Aliases": [
                            "-k"
                          ],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "kubeconfig",
                                  "Description": "kubeconfig",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--namespace",
                          "Description": "Namespace to use (default: from $KUBECONFIG)",
                          "Aliases": [
                            "-n"
                          ],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "namespace",
                                  "Description": "namespace",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--to",
                          "Description": "Version of Resource",
                          "Aliases": [],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "to",
                                  "Description": "to",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "Optional": true
                    },
                    {
                      "Arguments": [
                        {
                          "Name": "task",
                          "Description": "Downgrade an installed Task by its name to a lower version",
                          "Aliases": [],
                          "Arguments": []
                        }
                      ],
                      "DontAllowMultiple": true
                    }
                  ]
                },
                {
                  "Name": "get",
                  "Description": "Get resource manifest by its name, kind, catalog, and version",
                  "Aliases": [],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "--from",
                          "Description": "Name of Catalog to which resource belongs to",
                          "Aliases": [],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "from",
                                  "Description": "from",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--version",
                          "Description": "Version of Resource",
                          "Aliases": [],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "version",
                                  "Description": "version",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "Optional": true
                    },
                    {
                      "Arguments": [
                        {
                          "Name": "pipeline",
                          "Description": "Get Pipeline by name, catalog and version",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "task",
                          "Description": "Get Task by name, catalog and version",
                          "Aliases": [],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "--as-clustertask",
                                  "Description": "Get the Task as ClusterTask",
                                  "Aliases": [],
                                  "Arguments": []
                                }
                              ],
                              "Optional": true
                            }
                          ]
                        }
                      ],
                      "DontAllowMultiple": true
                    }
                  ]
                },
                {
                  "Name": "info",
                  "Description": "Display info of resource by its name, kind, catalog, and version",
                  "Aliases": [],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "--from",
                          "Description": "Name of Catalog to which resource belongs",
                          "Aliases": [],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "from",
                                  "Description": "from",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--version",
                          "Description": "Version of Resource",
                          "Aliases": [],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "version",
                                  "Description": "version",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "Optional": true
                    },
                    {
                      "Arguments": [
                        {
                          "Name": "task",
                          "Description": "Display info of Task by its name, catalog and version",
                          "Aliases": [],
                          "Arguments": []
                        }
                      ],
                      "DontAllowMultiple": true
                    }
                  ]
                },
                {
                  "Name": "install",
                  "Description": "Install a resource from a catalog by its kind, name and version",
                  "Aliases": [],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "--context",
                          "Description": "Name of the kubeconfig context to use (default: kubectl config current-context)",
                          "Aliases": [
                            "-c"
                          ],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "context",
                                  "Description": "context",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--from",
                          "Description": "Name of Catalog to which resource belongs",
                          "Aliases": [],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "from",
                                  "Description": "from",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--kubeconfig",
                          "Description": "Kubectl config file (default: $HOME/.kube/config)",
                          "Aliases": [
                            "-k"
                          ],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "kubeconfig",
                                  "Description": "kubeconfig",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--namespace",
                          "Description": "Namespace to use (default: from $KUBECONFIG)",
                          "Aliases": [
                            "-n"
                          ],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "namespace",
                                  "Description": "namespace",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--version",
                          "Description": "Version of Resource",
                          "Aliases": [],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "version",
                                  "Description": "version",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "Optional": true
                    },
                    {
                      "Arguments": [
                        {
                          "Name": "task",
                          "Description": "Install Task from a catalog by its name and version",
                          "Aliases": [],
                          "Arguments": []
                        }
                      ],
                      "DontAllowMultiple": true
                    }
                  ]
                },
                {
                  "Name": "reinstall",
                  "Description": "Reinstall a resource by its kind and name",
                  "Aliases": [],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "--context",
                          "Description": "Name of the kubeconfig context to use (default: kubectl config current-context)",
                          "Aliases": [
                            "-c"
                          ],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "context",
                                  "Description": "context",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--from",
                          "Description": "Name of Catalog to which resource belongs",
                          "Aliases": [],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "from",
                                  "Description": "from",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--kubeconfig",
                          "Description": "Kubectl config file (default: $HOME/.kube/config)",
                          "Aliases": [
                            "-k"
                          ],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "kubeconfig",
                                  "Description": "kubeconfig",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--namespace",
                          "Description": "Namespace to use (default: from $KUBECONFIG)",
                          "Aliases": [
                            "-n"
                          ],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "namespace",
                                  "Description": "namespace",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--version",
                          "Description": "Version of Resource",
                          "Aliases": [],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "version",
                                  "Description": "version",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "Optional": true
                    },
                    {
                      "Arguments": [
                        {
                          "Name": "task",
                          "Description": "Reinstall a Task by its name",
                          "Aliases": [],
                          "Arguments": []
                        }
                      ],
                      "DontAllowMultiple": true
                    }
                  ]
                },
                {
                  "Name": "search",
                  "Description": "Search resource by a combination of name, kind, categories, platforms, and tags",
                  "Aliases": [],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "--categories",
                          "Description": "Accepts a comma separated list of categories",
                          "Aliases": [],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "categories",
                                  "Description": "categories",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--kinds",
                          "Description": "Accepts a comma separated list of kinds",
                          "Aliases": [],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "kinds",
                                  "Description": "kinds",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--limit",
                          "Description": "Max number of resources to fetch",
                          "Aliases": [
                            "-l"
                          ],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "limit",
                                  "Description": "limit",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--match",
                          "Description": "Accept type of search. \u0027exact\u0027 or \u0027contains\u0027",
                          "Aliases": [],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "match",
                                  "Description": "match",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--output",
                          "Description": "Accepts output format: [table, json, wide]",
                          "Aliases": [
                            "-o"
                          ],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "output",
                                  "Description": "output",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--platforms",
                          "Description": "Accepts a comma separated list of platforms",
                          "Aliases": [],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "platforms",
                                  "Description": "platforms",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--tags",
                          "Description": "Accepts a comma separated list of tags",
                          "Aliases": [],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "tags",
                                  "Description": "tags",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "Optional": true
                    }
                  ]
                },
                {
                  "Name": "upgrade",
                  "Description": "Upgrade an installed resource",
                  "Aliases": [],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "--context",
                          "Description": "Name of the kubeconfig context to use (default: kubectl config current-context)",
                          "Aliases": [
                            "-c"
                          ],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "context",
                                  "Description": "context",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--kubeconfig",
                          "Description": "Kubectl config file (default: $HOME/.kube/config)",
                          "Aliases": [
                            "-k"
                          ],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "kubeconfig",
                                  "Description": "kubeconfig",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--namespace",
                          "Description": "Namespace to use (default: from $KUBECONFIG)",
                          "Aliases": [
                            "-n"
                          ],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "namespace",
                                  "Description": "namespace",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--to",
                          "Description": "Version of Resource",
                          "Aliases": [],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "to",
                                  "Description": "to",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "Optional": true
                    },
                    {
                      "Arguments": [
                        {
                          "Name": "task",
                          "Description": "Upgrade a Task by its name",
                          "Aliases": [],
                          "Arguments": []
                        }
                      ],
                      "DontAllowMultiple": true
                    }
                  ]
                }
              ],
              "DontAllowMultiple": true
            }
          ]
        },
        {
          "Name": "p",
          "Description": "Manage pipelines",
          "Aliases": [
            "pipelines",
            "pipeline"
          ],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "--context",
                  "Description": "Name of the kubeconfig context to use (default: kubectl config current-context)",
                  "Aliases": [
                    "-c"
                  ],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "context",
                          "Description": "context",
                          "Type": "String"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Name": "--kubeconfig",
                  "Description": "Kubectl config file (default: $HOME/.kube/config)",
                  "Aliases": [
                    "-k"
                  ],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "kubeconfig",
                          "Description": "kubeconfig",
                          "Type": "String"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Name": "--namespace",
                  "Description": "Namespace to use (default: from $KUBECONFIG)",
                  "Aliases": [
                    "-n"
                  ],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "namespace",
                          "Description": "namespace",
                          "Type": "String"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Name": "--no-color",
                  "Description": "Disable coloring (default: false)",
                  "Aliases": [
                    "-C"
                  ],
                  "Arguments": []
                },
                {
                  "Name": "--nocolour",
                  "Description": "Disable colouring (default: false)",
                  "Aliases": [],
                  "Arguments": []
                }
              ],
              "Optional": true
            },
            {
              "Arguments": [
                {
                  "Name": "rm",
                  "Description": "Delete Pipelines in a namespace",
                  "Aliases": [
                    "delete"
                  ],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "--all",
                          "Description": "Delete all Pipelines in a namespace (default: false)",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--allow-missing-template-keys",
                          "Description": "If true, ignore any errors in templates when a field or map key is missing in the template. Only applies to golang and jsonpath output formats",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--force",
                          "Description": "Whether to force deletion (default: false)",
                          "Aliases": [
                            "-f"
                          ],
                          "Arguments": []
                        },
                        {
                          "Name": "--output",
                          "Description": "Output format. One of: (json, yaml, name, go-template, go-template-file, template, templatefile, jsonpath, jsonpath-as-json, jsonpath-file)",
                          "Aliases": [
                            "-o"
                          ],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "output",
                                  "Description": "output",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--prs",
                          "Description": "Whether to delete Pipeline(s) and related resources (PipelineRuns) (default: false)",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--show-managed-fields",
                          "Description": "If true, keep the managedFields when printing objects in JSON or YAML format",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--template",
                          "Description": "Template string or path to template file to use when -o=go-template, -o=go-template-file. The template format is golang templates [http://golang.org/pkg/text/template/#pkg-overview]",
                          "Aliases": [],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "template",
                                  "Description": "template",
                                  "Type": "FileSystemEntry"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "Optional": true
                    }
                  ]
                },
                {
                  "Name": "desc",
                  "Description": "Describes a Pipeline in a namespace",
                  "Aliases": [
                    "describe"
                  ],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "--allow-missing-template-keys",
                          "Description": "If true, ignore any errors in templates when a field or map key is missing in the template. Only applies to golang and jsonpath output formats",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--output",
                          "Description": "Output format. One of: (json, yaml, name, go-template, go-template-file, template, templatefile, jsonpath, jsonpath-as-json, jsonpath-file)",
                          "Aliases": [
                            "-o"
                          ],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "output",
                                  "Description": "output",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--show-managed-fields",
                          "Description": "If true, keep the managedFields when printing objects in JSON or YAML format",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--template",
                          "Description": "Template string or path to template file to use when -o=go-template, -o=go-template-file. The template format is golang templates [http://golang.org/pkg/text/template/#pkg-overview]",
                          "Aliases": [],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "template",
                                  "Description": "template",
                                  "Type": "FileSystemEntry"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "Optional": true
                    }
                  ]
                },
                {
                  "Name": "export",
                  "Description": "Export Pipeline",
                  "Aliases": [],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "--allow-missing-template-keys",
                          "Description": "If true, ignore any errors in templates when a field or map key is missing in the template. Only applies to golang and jsonpath output formats",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--output",
                          "Description": "Output format. One of: (json, yaml, name, go-template, go-template-file, template, templatefile, jsonpath, jsonpath-as-json, jsonpath-file)",
                          "Aliases": [
                            "-o"
                          ],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "output",
                                  "Description": "output",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--show-managed-fields",
                          "Description": "If true, keep the managedFields when printing objects in JSON or YAML format",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--template",
                          "Description": "Template string or path to template file to use when -o=go-template, -o=go-template-file. The template format is golang templates [http://golang.org/pkg/text/template/#pkg-overview]",
                          "Aliases": [],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "template",
                                  "Description": "template",
                                  "Type": "FileSystemEntry"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "Optional": true
                    }
                  ]
                },
                {
                  "Name": "ls",
                  "Description": "Lists Pipelines in a namespace",
                  "Aliases": [
                    "list"
                  ],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "--all-namespaces",
                          "Description": "List Pipelines from all namespaces",
                          "Aliases": [
                            "-A"
                          ],
                          "Arguments": []
                        },
                        {
                          "Name": "--allow-missing-template-keys",
                          "Description": "If true, ignore any errors in templates when a field or map key is missing in the template. Only applies to golang and jsonpath output formats",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--no-headers",
                          "Description": "Do not print column headers with output (default print column headers with output)",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--output",
                          "Description": "Output format. One of: (json, yaml, name, go-template, go-template-file, template, templatefile, jsonpath, jsonpath-as-json, jsonpath-file)",
                          "Aliases": [
                            "-o"
                          ],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "output",
                                  "Description": "output",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--show-managed-fields",
                          "Description": "If true, keep the managedFields when printing objects in JSON or YAML format",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--template",
                          "Description": "Template string or path to template file to use when -o=go-template, -o=go-template-file. The template format is golang templates [http://golang.org/pkg/text/template/#pkg-overview]",
                          "Aliases": [],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "template",
                                  "Description": "template",
                                  "Type": "FileSystemEntry"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "Optional": true
                    }
                  ]
                },
                {
                  "Name": "logs",
                  "Description": "Show Pipeline logs",
                  "Aliases": [],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "--all",
                          "Description": "Show all logs including init steps injected by tekton",
                          "Aliases": [
                            "-a"
                          ],
                          "Arguments": []
                        },
                        {
                          "Name": "--follow",
                          "Description": "Stream live logs",
                          "Aliases": [
                            "-f"
                          ],
                          "Arguments": []
                        },
                        {
                          "Name": "--last",
                          "Description": "Show logs for last PipelineRun",
                          "Aliases": [
                            "-L"
                          ],
                          "Arguments": []
                        },
                        {
                          "Name": "--limit",
                          "Description": "Lists number of PipelineRuns",
                          "Aliases": [],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "limit",
                                  "Description": "limit",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--timestamps",
                          "Description": "Show logs with timestamp",
                          "Aliases": [
                            "-t"
                          ],
                          "Arguments": []
                        }
                      ],
                      "Optional": true
                    }
                  ]
                },
                {
                  "Name": "sign",
                  "Description": "Sign Tekton Pipeline",
                  "Aliases": [],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "--allow-missing-template-keys",
                          "Description": "If true, ignore any errors in templates when a field or map key is missing in the template. Only applies to golang and jsonpath output formats",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--file-name",
                          "Description": "Fle name of the signed pipeline, using the original file name will overwrite the file",
                          "Aliases": [
                            "-f"
                          ],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "file-name",
                                  "Description": "file-name",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--key-file",
                          "Description": "Key file",
                          "Aliases": [
                            "-K"
                          ],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "key-file",
                                  "Description": "key-file",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--kms-key",
                          "Description": "KMS key url",
                          "Aliases": [
                            "-m"
                          ],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "kms-key",
                                  "Description": "kms-key",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--output",
                          "Description": "Output format. One of: (json, yaml, name, go-template, go-template-file, template, templatefile, jsonpath, jsonpath-as-json, jsonpath-file)",
                          "Aliases": [
                            "-o"
                          ],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "output",
                                  "Description": "output",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--show-managed-fields",
                          "Description": "If true, keep the managedFields when printing objects in JSON or YAML format",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--template",
                          "Description": "Template string or path to template file to use when -o=go-template, -o=go-template-file. The template format is golang templates [http://golang.org/pkg/text/template/#pkg-overview]",
                          "Aliases": [],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "template",
                                  "Description": "template",
                                  "Type": "FileSystemEntry"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "Optional": true
                    }
                  ]
                },
                {
                  "Name": "start",
                  "Description": "Start Pipelines",
                  "Aliases": [],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "--dry-run",
                          "Description": "Preview PipelineRun without running it",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--filename",
                          "Description": "Local or remote file name containing a Pipeline definition to start a PipelineRun",
                          "Aliases": [
                            "-f"
                          ],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "filename",
                                  "Description": "filename",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--finally-timeout",
                          "Description": "Timeout for Finally TaskRuns",
                          "Aliases": [],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "finally-timeout",
                                  "Description": "finally-timeout",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--labels",
                          "Description": "Pass labels as label=value",
                          "Aliases": [
                            "-l"
                          ],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "labels",
                                  "Description": "labels",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--last",
                          "Description": "Re-run the Pipeline using last PipelineRun values",
                          "Aliases": [
                            "-L"
                          ],
                          "Arguments": []
                        },
                        {
                          "Name": "--output",
                          "Description": "Format of PipelineRun (yaml, json or name)",
                          "Aliases": [
                            "-o"
                          ],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "output",
                                  "Description": "output",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--param",
                          "Description": "Pass the param as key=value for string type, or key=value1,value2,... for array type",
                          "Aliases": [
                            "-p"
                          ],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "param",
                                  "Description": "param",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--pipeline-timeout",
                          "Description": "Timeout for PipelineRun",
                          "Aliases": [],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "pipeline-timeout",
                                  "Description": "pipeline-timeout",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--pod-template",
                          "Description": "Local or remote file containing a PodTemplate definition",
                          "Aliases": [],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "pod-template",
                                  "Description": "pod-template",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--prefix-name",
                          "Description": "Specify a prefix for the PipelineRun name (must be lowercase alphanumeric characters)",
                          "Aliases": [],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "prefix-name",
                                  "Description": "prefix-name",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--resource",
                          "Description": "Pass the resource name and ref as name=ref",
                          "Aliases": [
                            "-r"
                          ],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "resource",
                                  "Description": "resource",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--serviceaccount",
                          "Description": "Pass the serviceaccount name",
                          "Aliases": [
                            "-s"
                          ],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "serviceaccount",
                                  "Description": "serviceaccount",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--showlog",
                          "Description": "Show logs right after starting the Pipeline",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--skip-optional-workspace",
                          "Description": "Skips the prompt for optional workspaces",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--task-serviceaccount",
                          "Description": "Pass the service account corresponding to the task",
                          "Aliases": [],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "task-serviceaccount",
                                  "Description": "task-serviceaccount",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--tasks-timeout",
                          "Description": "Timeout for Pipeline TaskRuns",
                          "Aliases": [],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "tasks-timeout",
                                  "Description": "tasks-timeout",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--timeout",
                          "Description": "Timeout for PipelineRun",
                          "Aliases": [],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "timeout",
                                  "Description": "timeout",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--use-param-defaults",
                          "Description": "Use default parameter values without prompting for input",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--use-pipelinerun",
                          "Description": "Use this pipelinerun values to re-run the pipeline",
                          "Aliases": [],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "use-pipelinerun",
                                  "Description": "use-pipelinerun",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--workspace",
                          "Description": "Pass one or more workspaces to map to the corresponding physical volumes",
                          "Aliases": [
                            "-w"
                          ],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "workspace",
                                  "Description": "workspace",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "Optional": true
                    }
                  ]
                },
                {
                  "Name": "verify",
                  "Description": "Verify Tekton Pipeline",
                  "Aliases": [],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "--allow-missing-template-keys",
                          "Description": "If true, ignore any errors in templates when a field or map key is missing in the template. Only applies to golang and jsonpath output formats",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--key-file",
                          "Description": "Key file",
                          "Aliases": [
                            "-K"
                          ],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "key-file",
                                  "Description": "key-file",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--kms-key",
                          "Description": "KMS key url",
                          "Aliases": [
                            "-m"
                          ],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "kms-key",
                                  "Description": "kms-key",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--output",
                          "Description": "Output format. One of: (json, yaml, name, go-template, go-template-file, template, templatefile, jsonpath, jsonpath-as-json, jsonpath-file)",
                          "Aliases": [
                            "-o"
                          ],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "output",
                                  "Description": "output",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--show-managed-fields",
                          "Description": "If true, keep the managedFields when printing objects in JSON or YAML format",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--template",
                          "Description": "Template string or path to template file to use when -o=go-template, -o=go-template-file. The template format is golang templates [http://golang.org/pkg/text/template/#pkg-overview]",
                          "Aliases": [],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "template",
                                  "Description": "template",
                                  "Type": "FileSystemEntry"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "Optional": true
                    }
                  ]
                }
              ],
              "DontAllowMultiple": true
            }
          ]
        },
        {
          "Name": "pr",
          "Description": "Manage PipelineRuns",
          "Aliases": [
            "pipelineruns",
            "pipelinerun"
          ],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "--context",
                  "Description": "Name of the kubeconfig context to use (default: kubectl config current-context)",
                  "Aliases": [
                    "-c"
                  ],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "context",
                          "Description": "context",
                          "Type": "String"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Name": "--kubeconfig",
                  "Description": "Kubectl config file (default: $HOME/.kube/config)",
                  "Aliases": [
                    "-k"
                  ],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "kubeconfig",
                          "Description": "kubeconfig",
                          "Type": "String"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Name": "--namespace",
                  "Description": "Namespace to use (default: from $KUBECONFIG)",
                  "Aliases": [
                    "-n"
                  ],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "namespace",
                          "Description": "namespace",
                          "Type": "String"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Name": "--no-color",
                  "Description": "Disable coloring (default: false)",
                  "Aliases": [
                    "-C"
                  ],
                  "Arguments": []
                },
                {
                  "Name": "--nocolour",
                  "Description": "Disable colouring (default: false)",
                  "Aliases": [],
                  "Arguments": []
                }
              ],
              "Optional": true
            },
            {
              "Arguments": [
                {
                  "Name": "cancel",
                  "Description": "Cancel a PipelineRun in a namespace",
                  "Aliases": [],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "--grace",
                          "Description": "Gracefully cancel a PipelineRun To use this, you need to change the feature-flags configmap enable-api-fields to alpha instead of stable. Set to \u0027CancelledRunFinally\u0027 if you want to cancel the current running task and directly run the finally tasks. Set to \u0027StoppedRunFinally\u0027 if you want to cancel the remaining non-final task and directly run the finally tasks",
                          "Aliases": [],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "grace",
                                  "Description": "grace",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "Optional": true
                    }
                  ]
                },
                {
                  "Name": "rm",
                  "Description": "Delete PipelineRuns in a namespace",
                  "Aliases": [
                    "delete"
                  ],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "--all",
                          "Description": "Delete all PipelineRuns in a namespace (default: false)",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--allow-missing-template-keys",
                          "Description": "If true, ignore any errors in templates when a field or map key is missing in the template. Only applies to golang and jsonpath output formats",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--force",
                          "Description": "Whether to force deletion (default: false)",
                          "Aliases": [
                            "-f"
                          ],
                          "Arguments": []
                        },
                        {
                          "Name": "--ignore-running",
                          "Description": "Ignore running PipelineRun (default: true)",
                          "Aliases": [
                            "-i"
                          ],
                          "Arguments": []
                        },
                        {
                          "Name": "--keep",
                          "Description": "Keep n most recent number of PipelineRuns",
                          "Aliases": [],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "keep",
                                  "Description": "keep",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--keep-since",
                          "Description": "When deleting all PipelineRuns keep the ones that has been completed since n minutes",
                          "Aliases": [],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "keep-since",
                                  "Description": "keep-since",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--label",
                          "Description": "A selector (label query) to filter on when running with --all, supports \u0027=\u0027, \u0027==\u0027, and \u0027!=\u0027",
                          "Aliases": [],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "label",
                                  "Description": "label",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--output",
                          "Description": "Output format. One of: (json, yaml, name, go-template, go-template-file, template, templatefile, jsonpath, jsonpath-as-json, jsonpath-file)",
                          "Aliases": [
                            "-o"
                          ],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "output",
                                  "Description": "output",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--pipeline",
                          "Description": "The name of a Pipeline whose PipelineRuns should be deleted (does not delete the Pipeline)",
                          "Aliases": [
                            "-p"
                          ],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "pipeline",
                                  "Description": "pipeline",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--show-managed-fields",
                          "Description": "If true, keep the managedFields when printing objects in JSON or YAML format",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--template",
                          "Description": "Template string or path to template file to use when -o=go-template, -o=go-template-file. The template format is golang templates [http://golang.org/pkg/text/template/#pkg-overview]",
                          "Aliases": [],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "template",
                                  "Description": "template",
                                  "Type": "FileSystemEntry"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "Optional": true
                    }
                  ]
                },
                {
                  "Name": "desc",
                  "Description": "Describe a PipelineRun in a namespace",
                  "Aliases": [
                    "describe"
                  ],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "--allow-missing-template-keys",
                          "Description": "If true, ignore any errors in templates when a field or map key is missing in the template. Only applies to golang and jsonpath output formats",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--fzf",
                          "Description": "Use fzf to select a PipelineRun to describe",
                          "Aliases": [
                            "-F"
                          ],
                          "Arguments": []
                        },
                        {
                          "Name": "--last",
                          "Description": "Show description for last PipelineRun",
                          "Aliases": [
                            "-L"
                          ],
                          "Arguments": []
                        },
                        {
                          "Name": "--limit",
                          "Description": "Lists number of PipelineRuns when selecting a PipelineRun to describe",
                          "Aliases": [],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "limit",
                                  "Description": "limit",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--output",
                          "Description": "Output format. One of: (json, yaml, name, go-template, go-template-file, template, templatefile, jsonpath, jsonpath-as-json, jsonpath-file)",
                          "Aliases": [
                            "-o"
                          ],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "output",
                                  "Description": "output",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--show-managed-fields",
                          "Description": "If true, keep the managedFields when printing objects in JSON or YAML format",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--template",
                          "Description": "Template string or path to template file to use when -o=go-template, -o=go-template-file. The template format is golang templates [http://golang.org/pkg/text/template/#pkg-overview]",
                          "Aliases": [],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "template",
                                  "Description": "template",
                                  "Type": "FileSystemEntry"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "Optional": true
                    }
                  ]
                },
                {
                  "Name": "export",
                  "Description": "Export PipelineRun",
                  "Aliases": [],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "--allow-missing-template-keys",
                          "Description": "If true, ignore any errors in templates when a field or map key is missing in the template. Only applies to golang and jsonpath output formats",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--output",
                          "Description": "Output format. One of: (json, yaml, name, go-template, go-template-file, template, templatefile, jsonpath, jsonpath-as-json, jsonpath-file)",
                          "Aliases": [
                            "-o"
                          ],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "output",
                                  "Description": "output",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--show-managed-fields",
                          "Description": "If true, keep the managedFields when printing objects in JSON or YAML format",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--template",
                          "Description": "Template string or path to template file to use when -o=go-template, -o=go-template-file. The template format is golang templates [http://golang.org/pkg/text/template/#pkg-overview]",
                          "Aliases": [],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "template",
                                  "Description": "template",
                                  "Type": "FileSystemEntry"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "Optional": true
                    }
                  ]
                },
                {
                  "Name": "ls",
                  "Description": "Lists PipelineRuns in a namespace",
                  "Aliases": [
                    "list"
                  ],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "--all-namespaces",
                          "Description": "List PipelineRuns from all namespaces",
                          "Aliases": [
                            "-A"
                          ],
                          "Arguments": []
                        },
                        {
                          "Name": "--allow-missing-template-keys",
                          "Description": "If true, ignore any errors in templates when a field or map key is missing in the template. Only applies to golang and jsonpath output formats",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--label",
                          "Description": "A selector (label query) to filter on, supports \u0027=\u0027, \u0027==\u0027, and \u0027!=\u0027",
                          "Aliases": [],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "label",
                                  "Description": "label",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--limit",
                          "Description": "Limit PipelineRuns listed (default: return all PipelineRuns)",
                          "Aliases": [],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "limit",
                                  "Description": "limit",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--no-headers",
                          "Description": "Do not print column headers with output (default print column headers with output)",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--output",
                          "Description": "Output format. One of: (json, yaml, name, go-template, go-template-file, template, templatefile, jsonpath, jsonpath-as-json, jsonpath-file)",
                          "Aliases": [
                            "-o"
                          ],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "output",
                                  "Description": "output",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--reverse",
                          "Description": "List PipelineRuns in reverse order",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--show-managed-fields",
                          "Description": "If true, keep the managedFields when printing objects in JSON or YAML format",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--template",
                          "Description": "Template string or path to template file to use when -o=go-template, -o=go-template-file. The template format is golang templates [http://golang.org/pkg/text/template/#pkg-overview]",
                          "Aliases": [],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "template",
                                  "Description": "template",
                                  "Type": "FileSystemEntry"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "Optional": true
                    }
                  ]
                },
                {
                  "Name": "logs",
                  "Description": "Show the logs of a PipelineRun",
                  "Aliases": [],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "--all",
                          "Description": "Show all logs including init steps injected by tekton",
                          "Aliases": [
                            "-a"
                          ],
                          "Arguments": []
                        },
                        {
                          "Name": "--follow",
                          "Description": "Stream live logs",
                          "Aliases": [
                            "-f"
                          ],
                          "Arguments": []
                        },
                        {
                          "Name": "--fzf",
                          "Description": "Use fzf to select a PipelineRun",
                          "Aliases": [
                            "-F"
                          ],
                          "Arguments": []
                        },
                        {
                          "Name": "--last",
                          "Description": "Show logs for last PipelineRun",
                          "Aliases": [
                            "-L"
                          ],
                          "Arguments": []
                        },
                        {
                          "Name": "--limit",
                          "Description": "Lists number of PipelineRuns",
                          "Aliases": [],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "limit",
                                  "Description": "limit",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--prefix",
                          "Description": "Prefix each log line with the log source (task name and step name)",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--task",
                          "Description": "Show logs for mentioned Tasks only",
                          "Aliases": [
                            "-t"
                          ],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "task",
                                  "Description": "task",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--timestamps",
                          "Description": "Show logs with timestamp",
                          "Aliases": [],
                          "Arguments": []
                        }
                      ],
                      "Optional": true
                    }
                  ]
                }
              ],
              "DontAllowMultiple": true
            }
          ]
        },
        {
          "Name": "res",
          "Description": "Manage pipeline resources",
          "Aliases": [
            "resources",
            "resource"
          ],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "--context",
                  "Description": "Name of the kubeconfig context to use (default: kubectl config current-context)",
                  "Aliases": [
                    "-c"
                  ],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "context",
                          "Description": "context",
                          "Type": "String"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Name": "--kubeconfig",
                  "Description": "Kubectl config file (default: $HOME/.kube/config)",
                  "Aliases": [
                    "-k"
                  ],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "kubeconfig",
                          "Description": "kubeconfig",
                          "Type": "String"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Name": "--namespace",
                  "Description": "Namespace to use (default: from $KUBECONFIG)",
                  "Aliases": [
                    "-n"
                  ],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "namespace",
                          "Description": "namespace",
                          "Type": "String"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Name": "--no-color",
                  "Description": "Disable coloring (default: false)",
                  "Aliases": [
                    "-C"
                  ],
                  "Arguments": []
                },
                {
                  "Name": "--nocolour",
                  "Description": "Disable colouring (default: false)",
                  "Aliases": [],
                  "Arguments": []
                }
              ],
              "Optional": true
            },
            {
              "Arguments": [
                {
                  "Name": "create",
                  "Description": "Create a pipeline resource in a namespace",
                  "Aliases": [],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "--allow-missing-template-keys",
                          "Description": "If true, ignore any errors in templates when a field or map key is missing in the template. Only applies to golang and jsonpath output formats",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--output",
                          "Description": "Output format. One of: (json, yaml, name, go-template, go-template-file, template, templatefile, jsonpath, jsonpath-as-json, jsonpath-file)",
                          "Aliases": [
                            "-o"
                          ],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "output",
                                  "Description": "output",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--show-managed-fields",
                          "Description": "If true, keep the managedFields when printing objects in JSON or YAML format",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--template",
                          "Description": "Template string or path to template file to use when -o=go-template, -o=go-template-file. The template format is golang templates [http://golang.org/pkg/text/template/#pkg-overview]",
                          "Aliases": [],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "template",
                                  "Description": "template",
                                  "Type": "FileSystemEntry"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "Optional": true
                    }
                  ]
                },
                {
                  "Name": "rm",
                  "Description": "Delete pipeline resources in a namespace",
                  "Aliases": [
                    "delete"
                  ],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "--all",
                          "Description": "Delete all PipelineResources in a namespace (default: false)",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--allow-missing-template-keys",
                          "Description": "If true, ignore any errors in templates when a field or map key is missing in the template. Only applies to golang and jsonpath output formats",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--force",
                          "Description": "Whether to force deletion (default: false)",
                          "Aliases": [
                            "-f"
                          ],
                          "Arguments": []
                        },
                        {
                          "Name": "--output",
                          "Description": "Output format. One of: (json, yaml, name, go-template, go-template-file, template, templatefile, jsonpath, jsonpath-as-json, jsonpath-file)",
                          "Aliases": [
                            "-o"
                          ],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "output",
                                  "Description": "output",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--show-managed-fields",
                          "Description": "If true, keep the managedFields when printing objects in JSON or YAML format",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--template",
                          "Description": "Template string or path to template file to use when -o=go-template, -o=go-template-file. The template format is golang templates [http://golang.org/pkg/text/template/#pkg-overview]",
                          "Aliases": [],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "template",
                                  "Description": "template",
                                  "Type": "FileSystemEntry"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "Optional": true
                    }
                  ]
                },
                {
                  "Name": "desc",
                  "Description": "Describes a pipeline resource in a namespace",
                  "Aliases": [
                    "describe"
                  ],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "--allow-missing-template-keys",
                          "Description": "If true, ignore any errors in templates when a field or map key is missing in the template. Only applies to golang and jsonpath output formats",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--output",
                          "Description": "Output format. One of: (json, yaml, name, go-template, go-template-file, template, templatefile, jsonpath, jsonpath-as-json, jsonpath-file)",
                          "Aliases": [
                            "-o"
                          ],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "output",
                                  "Description": "output",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--show-managed-fields",
                          "Description": "If true, keep the managedFields when printing objects in JSON or YAML format",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--template",
                          "Description": "Template string or path to template file to use when -o=go-template, -o=go-template-file. The template format is golang templates [http://golang.org/pkg/text/template/#pkg-overview]",
                          "Aliases": [],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "template",
                                  "Description": "template",
                                  "Type": "FileSystemEntry"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "Optional": true
                    }
                  ]
                },
                {
                  "Name": "ls",
                  "Description": "Lists pipeline resources in a namespace",
                  "Aliases": [
                    "list"
                  ],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "--all-namespaces",
                          "Description": "List pipeline resources from all namespaces",
                          "Aliases": [
                            "-A"
                          ],
                          "Arguments": []
                        },
                        {
                          "Name": "--allow-missing-template-keys",
                          "Description": "If true, ignore any errors in templates when a field or map key is missing in the template. Only applies to golang and jsonpath output formats",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--no-headers",
                          "Description": "Do not print column headers with output (default print column headers with output)",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--output",
                          "Description": "Output format. One of: (json, yaml, name, go-template, go-template-file, template, templatefile, jsonpath, jsonpath-as-json, jsonpath-file)",
                          "Aliases": [
                            "-o"
                          ],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "output",
                                  "Description": "output",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--show-managed-fields",
                          "Description": "If true, keep the managedFields when printing objects in JSON or YAML format",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--template",
                          "Description": "Template string or path to template file to use when -o=go-template, -o=go-template-file. The template format is golang templates [http://golang.org/pkg/text/template/#pkg-overview]",
                          "Aliases": [],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "template",
                                  "Description": "template",
                                  "Type": "FileSystemEntry"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--type",
                          "Description": "Pipeline resource type",
                          "Aliases": [
                            "-t"
                          ],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "type",
                                  "Description": "type",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "Optional": true
                    }
                  ]
                }
              ],
              "DontAllowMultiple": true
            }
          ]
        },
        {
          "Name": "t",
          "Description": "Manage Tasks",
          "Aliases": [
            "tasks",
            "task"
          ],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "--context",
                  "Description": "Name of the kubeconfig context to use (default: kubectl config current-context)",
                  "Aliases": [
                    "-c"
                  ],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "context",
                          "Description": "context",
                          "Type": "String"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Name": "--kubeconfig",
                  "Description": "Kubectl config file (default: $HOME/.kube/config)",
                  "Aliases": [
                    "-k"
                  ],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "kubeconfig",
                          "Description": "kubeconfig",
                          "Type": "String"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Name": "--namespace",
                  "Description": "Namespace to use (default: from $KUBECONFIG)",
                  "Aliases": [
                    "-n"
                  ],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "namespace",
                          "Description": "namespace",
                          "Type": "String"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Name": "--no-color",
                  "Description": "Disable coloring (default: false)",
                  "Aliases": [
                    "-C"
                  ],
                  "Arguments": []
                },
                {
                  "Name": "--nocolour",
                  "Description": "Disable colouring (default: false)",
                  "Aliases": [],
                  "Arguments": []
                }
              ],
              "Optional": true
            },
            {
              "Arguments": [
                {
                  "Name": "create",
                  "Description": "Create a Task from ClusterTask",
                  "Aliases": [],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "--from",
                          "Description": "Create a ClusterTask from Task in a particular namespace",
                          "Aliases": [],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "from",
                                  "Description": "from",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "Optional": true
                    }
                  ]
                },
                {
                  "Name": "rm",
                  "Description": "Delete Tasks in a namespace",
                  "Aliases": [
                    "delete"
                  ],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "--all",
                          "Description": "Delete all Tasks in a namespace (default: false)",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--allow-missing-template-keys",
                          "Description": "If true, ignore any errors in templates when a field or map key is missing in the template. Only applies to golang and jsonpath output formats",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--force",
                          "Description": "Whether to force deletion (default: false)",
                          "Aliases": [
                            "-f"
                          ],
                          "Arguments": []
                        },
                        {
                          "Name": "--output",
                          "Description": "Output format. One of: (json, yaml, name, go-template, go-template-file, template, templatefile, jsonpath, jsonpath-as-json, jsonpath-file)",
                          "Aliases": [
                            "-o"
                          ],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "output",
                                  "Description": "output",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--show-managed-fields",
                          "Description": "If true, keep the managedFields when printing objects in JSON or YAML format",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--template",
                          "Description": "Template string or path to template file to use when -o=go-template, -o=go-template-file. The template format is golang templates [http://golang.org/pkg/text/template/#pkg-overview]",
                          "Aliases": [],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "template",
                                  "Description": "template",
                                  "Type": "FileSystemEntry"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--trs",
                          "Description": "Whether to delete Task(s) and related resources (TaskRuns) (default: false)",
                          "Aliases": [],
                          "Arguments": []
                        }
                      ],
                      "Optional": true
                    }
                  ]
                },
                {
                  "Name": "desc",
                  "Description": "Describe a Task in a namespace",
                  "Aliases": [
                    "describe"
                  ],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "--allow-missing-template-keys",
                          "Description": "If true, ignore any errors in templates when a field or map key is missing in the template. Only applies to golang and jsonpath output formats",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--output",
                          "Description": "Output format. One of: (json, yaml, name, go-template, go-template-file, template, templatefile, jsonpath, jsonpath-as-json, jsonpath-file)",
                          "Aliases": [
                            "-o"
                          ],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "output",
                                  "Description": "output",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--show-managed-fields",
                          "Description": "If true, keep the managedFields when printing objects in JSON or YAML format",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--template",
                          "Description": "Template string or path to template file to use when -o=go-template, -o=go-template-file. The template format is golang templates [http://golang.org/pkg/text/template/#pkg-overview]",
                          "Aliases": [],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "template",
                                  "Description": "template",
                                  "Type": "FileSystemEntry"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "Optional": true
                    }
                  ]
                },
                {
                  "Name": "ls",
                  "Description": "Lists Tasks in a namespace",
                  "Aliases": [
                    "list"
                  ],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "--all-namespaces",
                          "Description": "List Tasks from all namespaces",
                          "Aliases": [
                            "-A"
                          ],
                          "Arguments": []
                        },
                        {
                          "Name": "--allow-missing-template-keys",
                          "Description": "If true, ignore any errors in templates when a field or map key is missing in the template. Only applies to golang and jsonpath output formats",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--no-headers",
                          "Description": "Do not print column headers with output (default print column headers with output)",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--output",
                          "Description": "Output format. One of: (json, yaml, name, go-template, go-template-file, template, templatefile, jsonpath, jsonpath-as-json, jsonpath-file)",
                          "Aliases": [
                            "-o"
                          ],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "output",
                                  "Description": "output",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--show-managed-fields",
                          "Description": "If true, keep the managedFields when printing objects in JSON or YAML format",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--template",
                          "Description": "Template string or path to template file to use when -o=go-template, -o=go-template-file. The template format is golang templates [http://golang.org/pkg/text/template/#pkg-overview]",
                          "Aliases": [],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "template",
                                  "Description": "template",
                                  "Type": "FileSystemEntry"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "Optional": true
                    }
                  ]
                },
                {
                  "Name": "logs",
                  "Description": "Show Task logs",
                  "Aliases": [],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "--all",
                          "Description": "Show all logs including init steps injected by tekton",
                          "Aliases": [
                            "-a"
                          ],
                          "Arguments": []
                        },
                        {
                          "Name": "--follow",
                          "Description": "Stream live logs",
                          "Aliases": [
                            "-f"
                          ],
                          "Arguments": []
                        },
                        {
                          "Name": "--last",
                          "Description": "Show logs for last TaskRun",
                          "Aliases": [
                            "-L"
                          ],
                          "Arguments": []
                        },
                        {
                          "Name": "--limit",
                          "Description": "Lists number of TaskRuns",
                          "Aliases": [],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "limit",
                                  "Description": "limit",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--timestamps",
                          "Description": "Show logs with timestamp",
                          "Aliases": [
                            "-t"
                          ],
                          "Arguments": []
                        }
                      ],
                      "Optional": true
                    }
                  ]
                },
                {
                  "Name": "sign",
                  "Description": "Sign Tekton Task",
                  "Aliases": [],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "--allow-missing-template-keys",
                          "Description": "If true, ignore any errors in templates when a field or map key is missing in the template. Only applies to golang and jsonpath output formats",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--file-name",
                          "Description": "File name of the signed task, using the original file name will overwrite the file",
                          "Aliases": [
                            "-f"
                          ],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "file-name",
                                  "Description": "file-name",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--key-file",
                          "Description": "Key file",
                          "Aliases": [
                            "-K"
                          ],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "key-file",
                                  "Description": "key-file",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--kms-key",
                          "Description": "KMS key url",
                          "Aliases": [
                            "-m"
                          ],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "kms-key",
                                  "Description": "kms-key",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--output",
                          "Description": "Output format. One of: (json, yaml, name, go-template, go-template-file, template, templatefile, jsonpath, jsonpath-as-json, jsonpath-file)",
                          "Aliases": [
                            "-o"
                          ],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "output",
                                  "Description": "output",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--show-managed-fields",
                          "Description": "If true, keep the managedFields when printing objects in JSON or YAML format",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--template",
                          "Description": "Template string or path to template file to use when -o=go-template, -o=go-template-file. The template format is golang templates [http://golang.org/pkg/text/template/#pkg-overview]",
                          "Aliases": [],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "template",
                                  "Description": "template",
                                  "Type": "FileSystemEntry"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "Optional": true
                    }
                  ]
                },
                {
                  "Name": "start",
                  "Description": "Start Tasks",
                  "Aliases": [],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "--dry-run",
                          "Description": "Preview TaskRun without running it",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--filename",
                          "Description": "Local or remote file name containing a Task definition to start a TaskRun",
                          "Aliases": [
                            "-f"
                          ],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "filename",
                                  "Description": "filename",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--inputresource",
                          "Description": "Pass the input resource name and ref as name=ref",
                          "Aliases": [
                            "-i"
                          ],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "inputresource",
                                  "Description": "inputresource",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--labels",
                          "Description": "Pass labels as label=value",
                          "Aliases": [
                            "-l"
                          ],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "labels",
                                  "Description": "labels",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--last",
                          "Description": "Re-run the Task using last TaskRun values",
                          "Aliases": [
                            "-L"
                          ],
                          "Arguments": []
                        },
                        {
                          "Name": "--output",
                          "Description": "Format of TaskRun (yaml or json)",
                          "Aliases": [],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "output",
                                  "Description": "output",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--outputresource",
                          "Description": "Pass the output resource name and ref as name=ref",
                          "Aliases": [
                            "-o"
                          ],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "outputresource",
                                  "Description": "outputresource",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--param",
                          "Description": "Pass the param as key=value for string type, or key=value1,value2,... for array type",
                          "Aliases": [
                            "-p"
                          ],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "param",
                                  "Description": "param",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--pod-template",
                          "Description": "Local or remote file containing a PodTemplate definition",
                          "Aliases": [],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "pod-template",
                                  "Description": "pod-template",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--prefix-name",
                          "Description": "Specify a prefix for the TaskRun name (must be lowercase alphanumeric characters)",
                          "Aliases": [],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "prefix-name",
                                  "Description": "prefix-name",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--serviceaccount",
                          "Description": "Pass the serviceaccount name",
                          "Aliases": [
                            "-s"
                          ],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "serviceaccount",
                                  "Description": "serviceaccount",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--showlog",
                          "Description": "Show logs right after starting the Task",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--skip-optional-workspace",
                          "Description": "Skips the prompt for optional workspaces",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--timeout",
                          "Description": "Timeout for TaskRun",
                          "Aliases": [],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "timeout",
                                  "Description": "timeout",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--use-param-defaults",
                          "Description": "Use default parameter values without prompting for input",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--use-taskrun",
                          "Description": "Specify a TaskRun name to use its values to re-run the TaskRun",
                          "Aliases": [],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "use-taskrun",
                                  "Description": "use-taskrun",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--workspace",
                          "Description": "Pass one or more workspaces to map to the corresponding physical volumes",
                          "Aliases": [
                            "-w"
                          ],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "workspace",
                                  "Description": "workspace",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "Optional": true
                    }
                  ]
                },
                {
                  "Name": "verify",
                  "Description": "Verify Tekton Task",
                  "Aliases": [],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "--allow-missing-template-keys",
                          "Description": "If true, ignore any errors in templates when a field or map key is missing in the template. Only applies to golang and jsonpath output formats",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--key-file",
                          "Description": "Key file",
                          "Aliases": [
                            "-K"
                          ],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "key-file",
                                  "Description": "key-file",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--kms-key",
                          "Description": "KMS key url",
                          "Aliases": [
                            "-m"
                          ],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "kms-key",
                                  "Description": "kms-key",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--output",
                          "Description": "Output format. One of: (json, yaml, name, go-template, go-template-file, template, templatefile, jsonpath, jsonpath-as-json, jsonpath-file)",
                          "Aliases": [
                            "-o"
                          ],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "output",
                                  "Description": "output",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--show-managed-fields",
                          "Description": "If true, keep the managedFields when printing objects in JSON or YAML format",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--template",
                          "Description": "Template string or path to template file to use when -o=go-template, -o=go-template-file. The template format is golang templates [http://golang.org/pkg/text/template/#pkg-overview]",
                          "Aliases": [],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "template",
                                  "Description": "template",
                                  "Type": "FileSystemEntry"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "Optional": true
                    }
                  ]
                }
              ],
              "DontAllowMultiple": true
            }
          ]
        },
        {
          "Name": "tr",
          "Description": "Manage TaskRuns",
          "Aliases": [
            "taskruns",
            "taskrun"
          ],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "--context",
                  "Description": "Name of the kubeconfig context to use (default: kubectl config current-context)",
                  "Aliases": [
                    "-c"
                  ],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "context",
                          "Description": "context",
                          "Type": "String"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Name": "--kubeconfig",
                  "Description": "Kubectl config file (default: $HOME/.kube/config)",
                  "Aliases": [
                    "-k"
                  ],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "kubeconfig",
                          "Description": "kubeconfig",
                          "Type": "String"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Name": "--namespace",
                  "Description": "Namespace to use (default: from $KUBECONFIG)",
                  "Aliases": [
                    "-n"
                  ],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "namespace",
                          "Description": "namespace",
                          "Type": "String"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Name": "--no-color",
                  "Description": "Disable coloring (default: false)",
                  "Aliases": [
                    "-C"
                  ],
                  "Arguments": []
                },
                {
                  "Name": "--nocolour",
                  "Description": "Disable colouring (default: false)",
                  "Aliases": [],
                  "Arguments": []
                }
              ],
              "Optional": true
            },
            {
              "Arguments": [
                {
                  "Name": "cancel",
                  "Description": "Cancel a TaskRun in a namespace",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "rm",
                  "Description": "Delete TaskRuns in a namespace",
                  "Aliases": [
                    "delete"
                  ],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "--all",
                          "Description": "Delete all TaskRuns in a namespace (default: false)",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--allow-missing-template-keys",
                          "Description": "If true, ignore any errors in templates when a field or map key is missing in the template. Only applies to golang and jsonpath output formats",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--clustertask",
                          "Description": "The name of a ClusterTask whose TaskRuns should be deleted (does not delete the ClusterTask)",
                          "Aliases": [],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "clustertask",
                                  "Description": "clustertask",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--force",
                          "Description": "Whether to force deletion (default: false)",
                          "Aliases": [
                            "-f"
                          ],
                          "Arguments": []
                        },
                        {
                          "Name": "--ignore-running",
                          "Description": "Ignore running TaskRun (default: true)",
                          "Aliases": [
                            "-i"
                          ],
                          "Arguments": []
                        },
                        {
                          "Name": "--ignore-running-pipelinerun",
                          "Description": "Ignore deleting taskruns of a running PipelineRun (default: true)",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--keep",
                          "Description": "Keep n most recent number of TaskRuns",
                          "Aliases": [],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "keep",
                                  "Description": "keep",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--keep-since",
                          "Description": "When deleting all TaskRuns keep the ones that has been completed since n minutes",
                          "Aliases": [],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "keep-since",
                                  "Description": "keep-since",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--output",
                          "Description": "Output format. One of: (json, yaml, name, go-template, go-template-file, template, templatefile, jsonpath, jsonpath-as-json, jsonpath-file)",
                          "Aliases": [
                            "-o"
                          ],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "output",
                                  "Description": "output",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--show-managed-fields",
                          "Description": "If true, keep the managedFields when printing objects in JSON or YAML format",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--task",
                          "Description": "The name of a Task whose TaskRuns should be deleted (does not delete the task)",
                          "Aliases": [
                            "-t"
                          ],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "task",
                                  "Description": "task",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--template",
                          "Description": "Template string or path to template file to use when -o=go-template, -o=go-template-file. The template format is golang templates [http://golang.org/pkg/text/template/#pkg-overview]",
                          "Aliases": [],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "template",
                                  "Description": "template",
                                  "Type": "FileSystemEntry"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "Optional": true
                    }
                  ]
                },
                {
                  "Name": "desc",
                  "Description": "Describe a TaskRun in a namespace",
                  "Aliases": [
                    "describe"
                  ],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "--allow-missing-template-keys",
                          "Description": "If true, ignore any errors in templates when a field or map key is missing in the template. Only applies to golang and jsonpath output formats",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--fzf",
                          "Description": "Use fzf to select a taskrun to describe",
                          "Aliases": [
                            "-F"
                          ],
                          "Arguments": []
                        },
                        {
                          "Name": "--last",
                          "Description": "Show description for last TaskRun",
                          "Aliases": [
                            "-L"
                          ],
                          "Arguments": []
                        },
                        {
                          "Name": "--limit",
                          "Description": "Lists number of TaskRuns when selecting a TaskRun to describe",
                          "Aliases": [],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "limit",
                                  "Description": "limit",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--output",
                          "Description": "Output format. One of: (json, yaml, name, go-template, go-template-file, template, templatefile, jsonpath, jsonpath-as-json, jsonpath-file)",
                          "Aliases": [
                            "-o"
                          ],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "output",
                                  "Description": "output",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--show-managed-fields",
                          "Description": "If true, keep the managedFields when printing objects in JSON or YAML format",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--template",
                          "Description": "Template string or path to template file to use when -o=go-template, -o=go-template-file. The template format is golang templates [http://golang.org/pkg/text/template/#pkg-overview]",
                          "Aliases": [],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "template",
                                  "Description": "template",
                                  "Type": "FileSystemEntry"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "Optional": true
                    }
                  ]
                },
                {
                  "Name": "export",
                  "Description": "Export TaskRun",
                  "Aliases": [],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "--allow-missing-template-keys",
                          "Description": "If true, ignore any errors in templates when a field or map key is missing in the template. Only applies to golang and jsonpath output formats",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--output",
                          "Description": "Output format. One of: (json, yaml, name, go-template, go-template-file, template, templatefile, jsonpath, jsonpath-as-json, jsonpath-file)",
                          "Aliases": [
                            "-o"
                          ],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "output",
                                  "Description": "output",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--show-managed-fields",
                          "Description": "If true, keep the managedFields when printing objects in JSON or YAML format",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--template",
                          "Description": "Template string or path to template file to use when -o=go-template, -o=go-template-file. The template format is golang templates [http://golang.org/pkg/text/template/#pkg-overview]",
                          "Aliases": [],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "template",
                                  "Description": "template",
                                  "Type": "FileSystemEntry"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "Optional": true
                    }
                  ]
                },
                {
                  "Name": "ls",
                  "Description": "Lists TaskRuns in a namespace",
                  "Aliases": [
                    "list"
                  ],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "--all-namespaces",
                          "Description": "List TaskRuns from all namespaces",
                          "Aliases": [
                            "-A"
                          ],
                          "Arguments": []
                        },
                        {
                          "Name": "--allow-missing-template-keys",
                          "Description": "If true, ignore any errors in templates when a field or map key is missing in the template. Only applies to golang and jsonpath output formats",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--label",
                          "Description": "A selector (label query) to filter on, supports \u0027=\u0027, \u0027==\u0027, and \u0027!=\u0027",
                          "Aliases": [],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "label",
                                  "Description": "label",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--limit",
                          "Description": "Limit TaskRuns listed (default: return all TaskRuns)",
                          "Aliases": [],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "limit",
                                  "Description": "limit",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--no-headers",
                          "Description": "Do not print column headers with output (default print column headers with output)",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--output",
                          "Description": "Output format. One of: (json, yaml, name, go-template, go-template-file, template, templatefile, jsonpath, jsonpath-as-json, jsonpath-file)",
                          "Aliases": [
                            "-o"
                          ],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "output",
                                  "Description": "output",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--reverse",
                          "Description": "List TaskRuns in reverse order",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--show-managed-fields",
                          "Description": "If true, keep the managedFields when printing objects in JSON or YAML format",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--template",
                          "Description": "Template string or path to template file to use when -o=go-template, -o=go-template-file. The template format is golang templates [http://golang.org/pkg/text/template/#pkg-overview]",
                          "Aliases": [],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "template",
                                  "Description": "template",
                                  "Type": "FileSystemEntry"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "Optional": true
                    }
                  ]
                },
                {
                  "Name": "logs",
                  "Description": "Show TaskRuns logs",
                  "Aliases": [],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "--all",
                          "Description": "Show all logs including init steps injected by tekton",
                          "Aliases": [
                            "-a"
                          ],
                          "Arguments": []
                        },
                        {
                          "Name": "--follow",
                          "Description": "Stream live logs",
                          "Aliases": [
                            "-f"
                          ],
                          "Arguments": []
                        },
                        {
                          "Name": "--fzf",
                          "Description": "Use fzf to select a TaskRun",
                          "Aliases": [
                            "-F"
                          ],
                          "Arguments": []
                        },
                        {
                          "Name": "--last",
                          "Description": "Show logs for last TaskRun",
                          "Aliases": [
                            "-L"
                          ],
                          "Arguments": []
                        },
                        {
                          "Name": "--limit",
                          "Description": "Lists number of TaskRuns",
                          "Aliases": [],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "limit",
                                  "Description": "limit",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--prefix",
                          "Description": "Prefix each log line with the log source (step name)",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--step",
                          "Description": "Show logs for mentioned steps only",
                          "Aliases": [
                            "-s"
                          ],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "step",
                                  "Description": "step",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--timestamps",
                          "Description": "Show logs with timestamp",
                          "Aliases": [
                            "-t"
                          ],
                          "Arguments": []
                        }
                      ],
                      "Optional": true
                    }
                  ]
                }
              ],
              "DontAllowMultiple": true
            }
          ]
        },
        {
          "Name": "tb",
          "Description": "Manage TriggerBindings",
          "Aliases": [
            "triggerbindings",
            "triggerbinding"
          ],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "--context",
                  "Description": "Name of the kubeconfig context to use (default: kubectl config current-context)",
                  "Aliases": [
                    "-c"
                  ],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "context",
                          "Description": "context",
                          "Type": "String"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Name": "--kubeconfig",
                  "Description": "Kubectl config file (default: $HOME/.kube/config)",
                  "Aliases": [
                    "-k"
                  ],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "kubeconfig",
                          "Description": "kubeconfig",
                          "Type": "String"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Name": "--namespace",
                  "Description": "Namespace to use (default: from $KUBECONFIG)",
                  "Aliases": [
                    "-n"
                  ],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "namespace",
                          "Description": "namespace",
                          "Type": "String"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Name": "--no-color",
                  "Description": "Disable coloring (default: false)",
                  "Aliases": [
                    "-C"
                  ],
                  "Arguments": []
                },
                {
                  "Name": "--nocolour",
                  "Description": "Disable colouring (default: false)",
                  "Aliases": [],
                  "Arguments": []
                }
              ],
              "Optional": true
            },
            {
              "Arguments": [
                {
                  "Name": "rm",
                  "Description": "Delete TriggerBindings in a namespace",
                  "Aliases": [
                    "delete"
                  ],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "--all",
                          "Description": "Delete all TriggerBindings in a namespace (default: false)",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--allow-missing-template-keys",
                          "Description": "If true, ignore any errors in templates when a field or map key is missing in the template. Only applies to golang and jsonpath output formats",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--force",
                          "Description": "Whether to force deletion (default: false)",
                          "Aliases": [
                            "-f"
                          ],
                          "Arguments": []
                        },
                        {
                          "Name": "--output",
                          "Description": "Output format. One of: (json, yaml, name, go-template, go-template-file, template, templatefile, jsonpath, jsonpath-as-json, jsonpath-file)",
                          "Aliases": [
                            "-o"
                          ],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "output",
                                  "Description": "output",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--show-managed-fields",
                          "Description": "If true, keep the managedFields when printing objects in JSON or YAML format",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--template",
                          "Description": "Template string or path to template file to use when -o=go-template, -o=go-template-file. The template format is golang templates [http://golang.org/pkg/text/template/#pkg-overview]",
                          "Aliases": [],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "template",
                                  "Description": "template",
                                  "Type": "FileSystemEntry"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "Optional": true
                    }
                  ]
                },
                {
                  "Name": "desc",
                  "Description": "Describes a TriggerBinding in a namespace",
                  "Aliases": [
                    "describe"
                  ],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "--allow-missing-template-keys",
                          "Description": "If true, ignore any errors in templates when a field or map key is missing in the template. Only applies to golang and jsonpath output formats",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--output",
                          "Description": "Output format. One of: (json, yaml, name, go-template, go-template-file, template, templatefile, jsonpath, jsonpath-as-json, jsonpath-file)",
                          "Aliases": [
                            "-o"
                          ],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "output",
                                  "Description": "output",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--show-managed-fields",
                          "Description": "If true, keep the managedFields when printing objects in JSON or YAML format",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--template",
                          "Description": "Template string or path to template file to use when -o=go-template, -o=go-template-file. The template format is golang templates [http://golang.org/pkg/text/template/#pkg-overview]",
                          "Aliases": [],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "template",
                                  "Description": "template",
                                  "Type": "FileSystemEntry"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "Optional": true
                    }
                  ]
                },
                {
                  "Name": "ls",
                  "Description": "Lists TriggerBindings in a namespace",
                  "Aliases": [
                    "list"
                  ],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "--all-namespaces",
                          "Description": "List TriggerBindings from all namespaces",
                          "Aliases": [
                            "-A"
                          ],
                          "Arguments": []
                        },
                        {
                          "Name": "--allow-missing-template-keys",
                          "Description": "If true, ignore any errors in templates when a field or map key is missing in the template. Only applies to golang and jsonpath output formats",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--no-headers",
                          "Description": "Do not print column headers with output (default print column headers with output)",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--output",
                          "Description": "Output format. One of: (json, yaml, name, go-template, go-template-file, template, templatefile, jsonpath, jsonpath-as-json, jsonpath-file)",
                          "Aliases": [
                            "-o"
                          ],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "output",
                                  "Description": "output",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--show-managed-fields",
                          "Description": "If true, keep the managedFields when printing objects in JSON or YAML format",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--template",
                          "Description": "Template string or path to template file to use when -o=go-template, -o=go-template-file. The template format is golang templates [http://golang.org/pkg/text/template/#pkg-overview]",
                          "Aliases": [],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "template",
                                  "Description": "template",
                                  "Type": "FileSystemEntry"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "Optional": true
                    }
                  ]
                }
              ],
              "DontAllowMultiple": true
            }
          ]
        },
        {
          "Name": "tt",
          "Description": "Manage TriggerTemplates",
          "Aliases": [
            "triggertemplates",
            "triggertemplate"
          ],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "--context",
                  "Description": "Name of the kubeconfig context to use (default: kubectl config current-context)",
                  "Aliases": [
                    "-c"
                  ],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "context",
                          "Description": "context",
                          "Type": "String"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Name": "--kubeconfig",
                  "Description": "Kubectl config file (default: $HOME/.kube/config)",
                  "Aliases": [
                    "-k"
                  ],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "kubeconfig",
                          "Description": "kubeconfig",
                          "Type": "String"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Name": "--namespace",
                  "Description": "Namespace to use (default: from $KUBECONFIG)",
                  "Aliases": [
                    "-n"
                  ],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "namespace",
                          "Description": "namespace",
                          "Type": "String"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Name": "--no-color",
                  "Description": "Disable coloring (default: false)",
                  "Aliases": [
                    "-C"
                  ],
                  "Arguments": []
                },
                {
                  "Name": "--nocolour",
                  "Description": "Disable colouring (default: false)",
                  "Aliases": [],
                  "Arguments": []
                }
              ],
              "Optional": true
            },
            {
              "Arguments": [
                {
                  "Name": "rm",
                  "Description": "Delete TriggerTemplates in a namespace",
                  "Aliases": [
                    "delete"
                  ],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "--all",
                          "Description": "Delete all TriggerTemplates in a namespace (default: false)",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--allow-missing-template-keys",
                          "Description": "If true, ignore any errors in templates when a field or map key is missing in the template. Only applies to golang and jsonpath output formats",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--force",
                          "Description": "Whether to force deletion (default: false)",
                          "Aliases": [
                            "-f"
                          ],
                          "Arguments": []
                        },
                        {
                          "Name": "--output",
                          "Description": "Output format. One of: (json, yaml, name, go-template, go-template-file, template, templatefile, jsonpath, jsonpath-as-json, jsonpath-file)",
                          "Aliases": [
                            "-o"
                          ],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "output",
                                  "Description": "output",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--show-managed-fields",
                          "Description": "If true, keep the managedFields when printing objects in JSON or YAML format",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--template",
                          "Description": "Template string or path to template file to use when -o=go-template, -o=go-template-file. The template format is golang templates [http://golang.org/pkg/text/template/#pkg-overview]",
                          "Aliases": [],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "template",
                                  "Description": "template",
                                  "Type": "FileSystemEntry"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "Optional": true
                    }
                  ]
                },
                {
                  "Name": "desc",
                  "Description": "Describes a TriggerTemplate in a namespace",
                  "Aliases": [
                    "describe"
                  ],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "--allow-missing-template-keys",
                          "Description": "If true, ignore any errors in templates when a field or map key is missing in the template. Only applies to golang and jsonpath output formats",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--output",
                          "Description": "Output format. One of: (json, yaml, name, go-template, go-template-file, template, templatefile, jsonpath, jsonpath-as-json, jsonpath-file)",
                          "Aliases": [
                            "-o"
                          ],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "output",
                                  "Description": "output",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--show-managed-fields",
                          "Description": "If true, keep the managedFields when printing objects in JSON or YAML format",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--template",
                          "Description": "Template string or path to template file to use when -o=go-template, -o=go-template-file. The template format is golang templates [http://golang.org/pkg/text/template/#pkg-overview]",
                          "Aliases": [],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "template",
                                  "Description": "template",
                                  "Type": "FileSystemEntry"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "Optional": true
                    }
                  ]
                },
                {
                  "Name": "ls",
                  "Description": "Lists TriggerTemplates in a namespace",
                  "Aliases": [
                    "list"
                  ],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "--all-namespaces",
                          "Description": "List TriggerTemplates from all namespaces",
                          "Aliases": [
                            "-A"
                          ],
                          "Arguments": []
                        },
                        {
                          "Name": "--allow-missing-template-keys",
                          "Description": "If true, ignore any errors in templates when a field or map key is missing in the template. Only applies to golang and jsonpath output formats",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--no-headers",
                          "Description": "Do not print column headers with output (default print column headers with output)",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--output",
                          "Description": "Output format. One of: (json, yaml, name, go-template, go-template-file, template, templatefile, jsonpath, jsonpath-as-json, jsonpath-file)",
                          "Aliases": [
                            "-o"
                          ],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "output",
                                  "Description": "output",
                                  "Type": "String"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "Name": "--show-managed-fields",
                          "Description": "If true, keep the managedFields when printing objects in JSON or YAML format",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "--template",
                          "Description": "Template string or path to template file to use when -o=go-template, -o=go-template-file. The template format is golang templates [http://golang.org/pkg/text/template/#pkg-overview]",
                          "Aliases": [],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "template",
                                  "Description": "template",
                                  "Type": "FileSystemEntry"
                                }
                              ]
                            }
                          ]
                        }
                      ],
                      "Optional": true
                    }
                  ]
                }
              ],
              "DontAllowMultiple": true
            }
          ]
        },
        {
          "Name": "version",
          "Description": "Prints version information",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "--check",
                  "Description": "Check if a newer version is available",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "--component",
                  "Description": "Provide a particular component name for its version (client|chains|pipeline|triggers|dashboard)",
                  "Aliases": [],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "component",
                          "Description": "component",
                          "Type": "String"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Name": "--context",
                  "Description": "Name of the kubeconfig context to use (default: kubectl config current-context)",
                  "Aliases": [
                    "-c"
                  ],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "context",
                          "Description": "context",
                          "Type": "String"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Name": "--kubeconfig",
                  "Description": "Kubectl config file (default: $HOME/.kube/config)",
                  "Aliases": [
                    "-k"
                  ],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "kubeconfig",
                          "Description": "kubeconfig",
                          "Type": "String"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Name": "--namespace",
                  "Description": "Namespace to use (default: from $KUBECONFIG)",
                  "Aliases": [
                    "-n"
                  ],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "namespace",
                          "Description": "namespace",
                          "Type": "String"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Name": "--no-color",
                  "Description": "Disable coloring (default: false)",
                  "Aliases": [
                    "-C"
                  ],
                  "Arguments": []
                },
                {
                  "Name": "--nocolour",
                  "Description": "Disable colouring (default: false)",
                  "Aliases": [],
                  "Arguments": []
                }
              ],
              "Optional": true
            }
          ]
        },
        {
          "Name": "help",
          "Description": "Help about any command",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "tkb",
                  "Description": "Manage Tekton Bundles",
                  "Aliases": [
                    "bundles",
                    "bundle"
                  ],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "list",
                          "Description": "List and print a Tekton bundle\u0027s contents",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "push",
                          "Description": "Create or replace a Tekton bundle",
                          "Aliases": [],
                          "Arguments": []
                        }
                      ],
                      "DontAllowMultiple": true
                    }
                  ]
                },
                {
                  "Name": "chains",
                  "Description": "Manage Chains",
                  "Aliases": [
                    "chain"
                  ],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "payload",
                          "Description": "Print Tekton Chains\u0027 payload for a specific taskrun",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "signature",
                          "Description": "Print Tekton Chains\u0027 signature for a specific taskrun",
                          "Aliases": [],
                          "Arguments": []
                        }
                      ],
                      "DontAllowMultiple": true
                    }
                  ]
                },
                {
                  "Name": "ct",
                  "Description": "Manage ClusterTasks",
                  "Aliases": [
                    "clustertasks",
                    "clustertask"
                  ],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "create",
                          "Description": "Create a ClusterTask from Task",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "rm",
                          "Description": "Delete ClusterTasks in a cluster",
                          "Aliases": [
                            "delete"
                          ],
                          "Arguments": []
                        },
                        {
                          "Name": "desc",
                          "Description": "Describe a ClusterTask",
                          "Aliases": [
                            "describe"
                          ],
                          "Arguments": []
                        },
                        {
                          "Name": "ls",
                          "Description": "Lists ClusterTasks",
                          "Aliases": [
                            "list"
                          ],
                          "Arguments": []
                        },
                        {
                          "Name": "logs",
                          "Description": "Show ClusterTask logs",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "start",
                          "Description": "Start ClusterTasks",
                          "Aliases": [],
                          "Arguments": []
                        }
                      ],
                      "DontAllowMultiple": true
                    }
                  ]
                },
                {
                  "Name": "ctb",
                  "Description": "Manage ClusterTriggerBindings",
                  "Aliases": [
                    "clustertriggerbindings",
                    "clustertriggerbinding"
                  ],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "rm",
                          "Description": "Delete ClusterTriggerBindings",
                          "Aliases": [
                            "delete"
                          ],
                          "Arguments": []
                        },
                        {
                          "Name": "desc",
                          "Description": "Describes a ClusterTriggerBinding",
                          "Aliases": [
                            "describe"
                          ],
                          "Arguments": []
                        },
                        {
                          "Name": "ls",
                          "Description": "Lists ClusterTriggerBindings in a namespace",
                          "Aliases": [
                            "list"
                          ],
                          "Arguments": []
                        }
                      ],
                      "DontAllowMultiple": true
                    }
                  ]
                },
                {
                  "Name": "completion",
                  "Description": "Prints shell completion scripts",
                  "Aliases": [],
                  "Arguments": []
                },
                {
                  "Name": "el",
                  "Description": "Manage EventListeners",
                  "Aliases": [
                    "eventlisteners",
                    "eventlistener"
                  ],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "rm",
                          "Description": "Delete EventListeners in a namespace",
                          "Aliases": [
                            "delete"
                          ],
                          "Arguments": []
                        },
                        {
                          "Name": "desc",
                          "Description": "Describe EventListener in a namespace",
                          "Aliases": [
                            "describe"
                          ],
                          "Arguments": []
                        },
                        {
                          "Name": "ls",
                          "Description": "Lists EventListeners in a namespace",
                          "Aliases": [
                            "list"
                          ],
                          "Arguments": []
                        },
                        {
                          "Name": "logs",
                          "Description": "Show EventListener logs",
                          "Aliases": [],
                          "Arguments": []
                        }
                      ],
                      "DontAllowMultiple": true
                    }
                  ]
                },
                {
                  "Name": "hub",
                  "Description": "Interact with tekton hub",
                  "Aliases": [],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "check-upgrade",
                          "Description": "Check for upgrades of resources if present",
                          "Aliases": [],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "task",
                                  "Description": "Check updates for Task installed via Hub CLI",
                                  "Aliases": [],
                                  "Arguments": []
                                }
                              ],
                              "DontAllowMultiple": true
                            }
                          ]
                        },
                        {
                          "Name": "downgrade",
                          "Description": "Downgrade an installed resource",
                          "Aliases": [],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "task",
                                  "Description": "Downgrade an installed Task by its name to a lower version",
                                  "Aliases": [],
                                  "Arguments": []
                                }
                              ],
                              "DontAllowMultiple": true
                            }
                          ]
                        },
                        {
                          "Name": "get",
                          "Description": "Get resource manifest by its name, kind, catalog, and version",
                          "Aliases": [],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "pipeline",
                                  "Description": "Get Pipeline by name, catalog and version",
                                  "Aliases": [],
                                  "Arguments": []
                                },
                                {
                                  "Name": "task",
                                  "Description": "Get Task by name, catalog and version",
                                  "Aliases": [],
                                  "Arguments": []
                                }
                              ],
                              "DontAllowMultiple": true
                            }
                          ]
                        },
                        {
                          "Name": "info",
                          "Description": "Display info of resource by its name, kind, catalog, and version",
                          "Aliases": [],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "task",
                                  "Description": "Display info of Task by its name, catalog and version",
                                  "Aliases": [],
                                  "Arguments": []
                                }
                              ],
                              "DontAllowMultiple": true
                            }
                          ]
                        },
                        {
                          "Name": "install",
                          "Description": "Install a resource from a catalog by its kind, name and version",
                          "Aliases": [],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "task",
                                  "Description": "Install Task from a catalog by its name and version",
                                  "Aliases": [],
                                  "Arguments": []
                                }
                              ],
                              "DontAllowMultiple": true
                            }
                          ]
                        },
                        {
                          "Name": "reinstall",
                          "Description": "Reinstall a resource by its kind and name",
                          "Aliases": [],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "task",
                                  "Description": "Reinstall a Task by its name",
                                  "Aliases": [],
                                  "Arguments": []
                                }
                              ],
                              "DontAllowMultiple": true
                            }
                          ]
                        },
                        {
                          "Name": "search",
                          "Description": "Search resource by a combination of name, kind, categories, platforms, and tags",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "upgrade",
                          "Description": "Upgrade an installed resource",
                          "Aliases": [],
                          "Arguments": [
                            {
                              "Arguments": [
                                {
                                  "Name": "task",
                                  "Description": "Upgrade a Task by its name",
                                  "Aliases": [],
                                  "Arguments": []
                                }
                              ],
                              "DontAllowMultiple": true
                            }
                          ]
                        }
                      ],
                      "DontAllowMultiple": true
                    }
                  ]
                },
                {
                  "Name": "p",
                  "Description": "Manage pipelines",
                  "Aliases": [
                    "pipelines",
                    "pipeline"
                  ],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "rm",
                          "Description": "Delete Pipelines in a namespace",
                          "Aliases": [
                            "delete"
                          ],
                          "Arguments": []
                        },
                        {
                          "Name": "desc",
                          "Description": "Describes a Pipeline in a namespace",
                          "Aliases": [
                            "describe"
                          ],
                          "Arguments": []
                        },
                        {
                          "Name": "export",
                          "Description": "Export Pipeline",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "ls",
                          "Description": "Lists Pipelines in a namespace",
                          "Aliases": [
                            "list"
                          ],
                          "Arguments": []
                        },
                        {
                          "Name": "logs",
                          "Description": "Show Pipeline logs",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "sign",
                          "Description": "Sign Tekton Pipeline",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "start",
                          "Description": "Start Pipelines",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "verify",
                          "Description": "Verify Tekton Pipeline",
                          "Aliases": [],
                          "Arguments": []
                        }
                      ],
                      "DontAllowMultiple": true
                    }
                  ]
                },
                {
                  "Name": "pr",
                  "Description": "Manage PipelineRuns",
                  "Aliases": [
                    "pipelineruns",
                    "pipelinerun"
                  ],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "cancel",
                          "Description": "Cancel a PipelineRun in a namespace",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "rm",
                          "Description": "Delete PipelineRuns in a namespace",
                          "Aliases": [
                            "delete"
                          ],
                          "Arguments": []
                        },
                        {
                          "Name": "desc",
                          "Description": "Describe a PipelineRun in a namespace",
                          "Aliases": [
                            "describe"
                          ],
                          "Arguments": []
                        },
                        {
                          "Name": "export",
                          "Description": "Export PipelineRun",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "ls",
                          "Description": "Lists PipelineRuns in a namespace",
                          "Aliases": [
                            "list"
                          ],
                          "Arguments": []
                        },
                        {
                          "Name": "logs",
                          "Description": "Show the logs of a PipelineRun",
                          "Aliases": [],
                          "Arguments": []
                        }
                      ],
                      "DontAllowMultiple": true
                    }
                  ]
                },
                {
                  "Name": "res",
                  "Description": "Manage pipeline resources",
                  "Aliases": [
                    "resources",
                    "resource"
                  ],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "create",
                          "Description": "Create a pipeline resource in a namespace",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "rm",
                          "Description": "Delete pipeline resources in a namespace",
                          "Aliases": [
                            "delete"
                          ],
                          "Arguments": []
                        },
                        {
                          "Name": "desc",
                          "Description": "Describes a pipeline resource in a namespace",
                          "Aliases": [
                            "describe"
                          ],
                          "Arguments": []
                        },
                        {
                          "Name": "ls",
                          "Description": "Lists pipeline resources in a namespace",
                          "Aliases": [
                            "list"
                          ],
                          "Arguments": []
                        }
                      ],
                      "DontAllowMultiple": true
                    }
                  ]
                },
                {
                  "Name": "t",
                  "Description": "Manage Tasks",
                  "Aliases": [
                    "tasks",
                    "task"
                  ],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "create",
                          "Description": "Create a Task from ClusterTask",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "rm",
                          "Description": "Delete Tasks in a namespace",
                          "Aliases": [
                            "delete"
                          ],
                          "Arguments": []
                        },
                        {
                          "Name": "desc",
                          "Description": "Describe a Task in a namespace",
                          "Aliases": [
                            "describe"
                          ],
                          "Arguments": []
                        },
                        {
                          "Name": "ls",
                          "Description": "Lists Tasks in a namespace",
                          "Aliases": [
                            "list"
                          ],
                          "Arguments": []
                        },
                        {
                          "Name": "logs",
                          "Description": "Show Task logs",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "sign",
                          "Description": "Sign Tekton Task",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "start",
                          "Description": "Start Tasks",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "verify",
                          "Description": "Verify Tekton Task",
                          "Aliases": [],
                          "Arguments": []
                        }
                      ],
                      "DontAllowMultiple": true
                    }
                  ]
                },
                {
                  "Name": "tr",
                  "Description": "Manage TaskRuns",
                  "Aliases": [
                    "taskruns",
                    "taskrun"
                  ],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "cancel",
                          "Description": "Cancel a TaskRun in a namespace",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "rm",
                          "Description": "Delete TaskRuns in a namespace",
                          "Aliases": [
                            "delete"
                          ],
                          "Arguments": []
                        },
                        {
                          "Name": "desc",
                          "Description": "Describe a TaskRun in a namespace",
                          "Aliases": [
                            "describe"
                          ],
                          "Arguments": []
                        },
                        {
                          "Name": "export",
                          "Description": "Export TaskRun",
                          "Aliases": [],
                          "Arguments": []
                        },
                        {
                          "Name": "ls",
                          "Description": "Lists TaskRuns in a namespace",
                          "Aliases": [
                            "list"
                          ],
                          "Arguments": []
                        },
                        {
                          "Name": "logs",
                          "Description": "Show TaskRuns logs",
                          "Aliases": [],
                          "Arguments": []
                        }
                      ],
                      "DontAllowMultiple": true
                    }
                  ]
                },
                {
                  "Name": "tb",
                  "Description": "Manage TriggerBindings",
                  "Aliases": [
                    "triggerbindings",
                    "triggerbinding"
                  ],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "rm",
                          "Description": "Delete TriggerBindings in a namespace",
                          "Aliases": [
                            "delete"
                          ],
                          "Arguments": []
                        },
                        {
                          "Name": "desc",
                          "Description": "Describes a TriggerBinding in a namespace",
                          "Aliases": [
                            "describe"
                          ],
                          "Arguments": []
                        },
                        {
                          "Name": "ls",
                          "Description": "Lists TriggerBindings in a namespace",
                          "Aliases": [
                            "list"
                          ],
                          "Arguments": []
                        }
                      ],
                      "DontAllowMultiple": true
                    }
                  ]
                },
                {
                  "Name": "tt",
                  "Description": "Manage TriggerTemplates",
                  "Aliases": [
                    "triggertemplates",
                    "triggertemplate"
                  ],
                  "Arguments": [
                    {
                      "Arguments": [
                        {
                          "Name": "rm",
                          "Description": "Delete TriggerTemplates in a namespace",
                          "Aliases": [
                            "delete"
                          ],
                          "Arguments": []
                        },
                        {
                          "Name": "desc",
                          "Description": "Describes a TriggerTemplate in a namespace",
                          "Aliases": [
                            "describe"
                          ],
                          "Arguments": []
                        },
                        {
                          "Name": "ls",
                          "Description": "Lists TriggerTemplates in a namespace",
                          "Aliases": [
                            "list"
                          ],
                          "Arguments": []
                        }
                      ],
                      "DontAllowMultiple": true
                    }
                  ]
                },
                {
                  "Name": "version",
                  "Description": "Prints version information",
                  "Aliases": [],
                  "Arguments": []
                }
              ],
              "DontAllowMultiple": true
            }
          ]
        }
      ],
      "DontAllowMultiple": true
    }
  ]
}