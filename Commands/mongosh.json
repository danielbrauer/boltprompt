{
  "Comment": "This command info is generated from fig",
  "Name": "mongosh",
  "Description": "The MongoDB Shell, mongosh  is a fully functional JavaScript and Node.js 14.x REPL environment for interacting with MongoDB deployments",
  "Arguments": [
    {
      "Arguments": [
        {
          "Name": "-v",
          "Description": "View your current mongosh version",
          "Aliases": [
            "--version"
          ],
          "Arguments": []
        },
        {
          "Name": "--shell",
          "Description": "Enables the shell interface. If you invoke the mongosh command and specify a JavaScript file as an argument, or use --eval to specify JavaScript on the command line, the --shell option provides the user with a shell prompt after the file finishes executing",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--eval",
          "Description": "Evaluates a JavaScript expression that is specified as an argument. mongosh does not load its own environment when evaluating code. As a result many options of the shell environment are not available. The result of evaluating a JavaScript argument is printed to your command line",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "javascript",
                  "Description": "javascript",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "--help",
          "Description": "Returns information on the options and use of the MongoDB Shell",
          "Aliases": [
            "-h"
          ],
          "Arguments": []
        },
        {
          "Name": "--authenticationDatabase",
          "Description": "Specifies the authentication database where the specified --username has been created. See Authentication Database",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "dbname",
                  "Description": "dbname",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "--gssapiHostName",
          "Description": "Specify the hostname of a service using GSSAPI/Kerberos. Only required if the hostname of a machine does not match the hostname resolved by DNS",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "hostname",
                  "Description": "hostname",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "--gssapiServiceName",
          "Description": "Specify the name of the service using GSSAPI/Kerberos. Only required if the service does not use the default name of mongodb",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "saslServiceName",
                  "Description": "saslServiceName",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "--password",
          "Description": "Specifies a password with which to authenticate to a MongoDB database that uses authentication. Use in conjunction with the --username and --authenticationDatabase options",
          "Aliases": [
            "-p"
          ],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "password",
                  "Description": "password",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "--username",
          "Description": "Specifies a username with which to authenticate to a MongoDB database that uses authentication. Use in conjunction with the --password and --authenticationDatabase options",
          "Aliases": [
            "-u"
          ],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "username",
                  "Description": "username",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "--retryWrites",
          "Description": "Enables retryable writes as the default for sessions in the MongoDB Shell",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--authenticationMechanism",
          "Description": "Specifies the authentication mechanism the MongoDB Shell uses to authenticate to the mongod or mongos",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "authentication mechanism",
                  "Description": "authentication mechanism",
                  "Type": "String"
                },
                {
                  "Name": "SCRAM-SHA-1",
                  "Description": "RFC 5802 standard Salted Challenge Response Authentication Mechanism using the SHA-1 hash function"
                },
                {
                  "Name": "SCRAM-SHA-256",
                  "Description": "RFC 7677 standard Salted Challenge Response Authentication Mechanism using the SHA-256 hash function"
                },
                {
                  "Name": "MONGODB-X509",
                  "Description": "MongoDB TLS SSL certificate authentication"
                },
                {
                  "Name": "GSSAPI (Kerberos)",
                  "Description": "External authentication using Kerberos. This mechanism is available only in MongoDB Enterprise"
                },
                {
                  "Name": "PLAIN (LDAP SASL)",
                  "Description": "External authentication using LDAP. You can also use PLAIN for authenticating in-database users. PLAIN transmits passwords in plain text. This mechanism is available only in MongoDB Enterprise"
                }
              ]
            }
          ]
        },
        {
          "Name": "--nodb",
          "Description": "Prevents the shell from connecting to any database instances",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--norc",
          "Description": "Prevents the shell from sourcing and evaluating ~/.mongoshrc.js on startup",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--quiet",
          "Description": "Skips all messages during startup (such as welcome messages and startup warnings) and goes directly to the prompt",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--verbose",
          "Description": "Increases the verbosity of the shell output during the connection process and when running commands",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--port",
          "Description": "Specifies the port where the mongod or mongos instance is listening. If --port is not specified, the MongoDB Shell attempts to connect to port 27017",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "port",
                  "Description": "port",
                  "Type": "String"
                },
                {
                  "Name": "27017",
                  "Description": "Default-port"
                }
              ]
            }
          ]
        },
        {
          "Name": "--tls",
          "Description": "Enables connection to a mongod or mongos that has TLS SSL support enabled",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--tlsAllowInvalidHostnames",
          "Description": "Disables the validation of the hostnames in the certificate presented by the mongod/mongos instance. Allows the MongoDB Shell to connect to MongoDB instances even if the hostname in the server certificates do not match the server\u0027s host",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--tlsAllowInvalidCertificates",
          "Description": "Bypasses the validation checks for the certificates presented by the mongod/mongos instance and allows connections to servers that present invalid certificates",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--tlsDisabledProtocols",
          "Description": "Disables the specified TLS protocols",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "protocols",
                  "Description": "protocols",
                  "Type": "String"
                },
                {
                  "Name": "TLS1_0",
                  "Description": "protocols"
                },
                {
                  "Name": "TLS1_1",
                  "Description": "protocols"
                },
                {
                  "Name": "TLS1_2",
                  "Description": "protocols"
                },
                {
                  "Name": "TLS1_3",
                  "Description": "(Starting in version 4.0.4, 3.6.9, 3.4.24)"
                }
              ]
            }
          ]
        },
        {
          "Name": "--tlsCAFile",
          "Description": "Specifies the .pem file that contains the root certificate chain from the Certificate Authority. This file is used to validate the certificate presented by the mongod/mongos instance",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "filePath",
                  "Description": "filePath",
                  "Type": "String",
                  "Extensions": []
                }
              ]
            }
          ]
        },
        {
          "Name": "--tlsCRLFile",
          "Description": "Specifies the .pem file that contains the root certificate chain from the Certificate Authority. This file is used to validate the certificate presented by the mongod/mongos instance",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "filePath",
                  "Description": "filePath",
                  "Type": "String",
                  "Extensions": []
                }
              ]
            }
          ]
        },
        {
          "Name": "--tlsCertificateKeyFile",
          "Description": "Enables connection to a mongod or mongos that has TLS SSL support enabled",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "filePath",
                  "Description": "filePath",
                  "Type": "String",
                  "Extensions": []
                }
              ]
            }
          ]
        }
      ],
      "Optional": true
    },
    {
      "Arguments": [
        {
          "Name": "Connection String",
          "Description": "Connection String",
          "Type": "String"
        },
        {
          "Name": "mongodb://localhost:27017",
          "Description": "Default Connection String; Equivalent to running mongosh without any commands"
        },
        {
          "Name": "mongodb\u002Bsrv://cluster0.example.mongodb.net/sample_geospatial",
          "Description": "Atlas Connection String Example"
        }
      ],
      "Optional": true
    }
  ]
}