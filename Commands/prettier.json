{
  "Comment": "This command info is generated from fig",
  "Name": "prettier",
  "Description": "Run Prettier from the command line",
  "Arguments": [
    {
      "Arguments": [
        {
          "Name": "-c",
          "Description": "Check if your files are formatted",
          "Aliases": [
            "--check"
          ],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "file, dir, or glob",
                  "Description": "file, dir, or glob",
                  "Type": "FileSystemEntry"
                }
              ]
            }
          ]
        },
        {
          "Name": "-l",
          "Description": "Print the names of files that are different from Prettier\u0027s formatting",
          "Aliases": [
            "--list-different"
          ],
          "Arguments": []
        },
        {
          "Name": "-w",
          "Description": "Edit files in-place",
          "Aliases": [
            "--write"
          ],
          "Arguments": []
        },
        {
          "Name": "--arrow-parens",
          "Description": "Include parentheses around a sole arrow function parameter",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "mode",
                  "Description": "mode",
                  "Type": "String"
                },
                {
                  "Name": "always",
                  "Description": "mode"
                },
                {
                  "Name": "avoid",
                  "Description": "mode"
                }
              ]
            }
          ]
        },
        {
          "Name": "--no-bracket-spacing",
          "Description": "Do not print spaces between brackets",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--embedded-language-formatting",
          "Description": "Control how Prettier formats quoted code embedded in the file",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "mode",
                  "Description": "mode",
                  "Type": "String"
                },
                {
                  "Name": "auto",
                  "Description": "mode"
                },
                {
                  "Name": "off",
                  "Description": "mode"
                }
              ]
            }
          ]
        },
        {
          "Name": "--end-of-line",
          "Description": "Which end of line characters to apply",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "choice",
                  "Description": "choice",
                  "Type": "String"
                },
                {
                  "Name": "lf",
                  "Description": "choice"
                },
                {
                  "Name": "crlf",
                  "Description": "choice"
                },
                {
                  "Name": "cr",
                  "Description": "choice"
                },
                {
                  "Name": "auto",
                  "Description": "choice"
                }
              ]
            }
          ]
        },
        {
          "Name": "--html-whitespace-sensitivity",
          "Description": "How to handle whitespaces in HTML",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "choice",
                  "Description": "choice",
                  "Type": "String"
                },
                {
                  "Name": "css",
                  "Description": "choice"
                },
                {
                  "Name": "strict",
                  "Description": "choice"
                },
                {
                  "Name": "ignore",
                  "Description": "choice"
                }
              ]
            }
          ]
        },
        {
          "Name": "--jsx-bracket-same-line",
          "Description": "Put \u003E on the last line instead of at a new line",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--jsx-single-quote",
          "Description": "Use single quotes in JSX",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--parser",
          "Description": "Which parser to use",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "parser",
                  "Description": "parser",
                  "Type": "String"
                },
                {
                  "Name": "flow",
                  "Description": "parser"
                },
                {
                  "Name": "babel",
                  "Description": "parser"
                },
                {
                  "Name": "babel-flow",
                  "Description": "parser"
                },
                {
                  "Name": "babel-ts",
                  "Description": "parser"
                },
                {
                  "Name": "typescript",
                  "Description": "parser"
                },
                {
                  "Name": "espree",
                  "Description": "parser"
                },
                {
                  "Name": "meriyah",
                  "Description": "parser"
                },
                {
                  "Name": "css",
                  "Description": "parser"
                },
                {
                  "Name": "less",
                  "Description": "parser"
                },
                {
                  "Name": "scss",
                  "Description": "parser"
                },
                {
                  "Name": "json",
                  "Description": "parser"
                },
                {
                  "Name": "json5",
                  "Description": "parser"
                },
                {
                  "Name": "json-stringify",
                  "Description": "parser"
                },
                {
                  "Name": "graphql",
                  "Description": "parser"
                },
                {
                  "Name": "markdown",
                  "Description": "parser"
                },
                {
                  "Name": "mdx",
                  "Description": "parser"
                },
                {
                  "Name": "vue",
                  "Description": "parser"
                },
                {
                  "Name": "yaml",
                  "Description": "parser"
                },
                {
                  "Name": "html",
                  "Description": "parser"
                },
                {
                  "Name": "angular",
                  "Description": "parser"
                },
                {
                  "Name": "lwc",
                  "Description": "parser"
                }
              ]
            }
          ]
        },
        {
          "Name": "--print-width",
          "Description": "The line length where Prettier will try wrap",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "int",
                  "Description": "int",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "--prose-wrap",
          "Description": "How to wrap prose",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "String",
                  "Description": "",
                  "Type": "String"
                },
                {
                  "Name": "always",
                  "Description": ""
                },
                {
                  "Name": "never",
                  "Description": ""
                },
                {
                  "Name": "preserve",
                  "Description": ""
                }
              ]
            }
          ]
        },
        {
          "Name": "--quote-props",
          "Description": "Change when properties in objects are quoted",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "when",
                  "Description": "when",
                  "Type": "String"
                },
                {
                  "Name": "as-needed",
                  "Description": "when"
                },
                {
                  "Name": "consistent",
                  "Description": "when"
                },
                {
                  "Name": "preserve",
                  "Description": "when"
                }
              ]
            }
          ]
        },
        {
          "Name": "--no-semi",
          "Description": "Do not print semicolons, except at the beginning of lines which may need them",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--single-quote",
          "Description": "Use single quotes instead of double quotes",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--tab-width",
          "Description": "Number of spaces per indentation level",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "int",
                  "Description": "int",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "--trailing-comma",
          "Description": "Print trailing commas wherever possible when multi-line",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "type",
                  "Description": "type",
                  "Type": "String"
                },
                {
                  "Name": "es5",
                  "Description": "type"
                },
                {
                  "Name": "none",
                  "Description": "type"
                },
                {
                  "Name": "all",
                  "Description": "type"
                }
              ]
            }
          ]
        },
        {
          "Name": "--use-tabs",
          "Description": "Indent with tabs instead of spaces",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--vue-indent-script-and-style",
          "Description": "Indent script and style tags in Vue files",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--config",
          "Description": "Path to a Prettier configuration file (.prettierrc, package.json, prettier.config.js)",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "path",
                  "Description": "path",
                  "Type": "FileSystemEntry"
                }
              ]
            }
          ]
        },
        {
          "Name": "--no-config",
          "Description": "Do not look for a configuration file",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--config-precedence",
          "Description": "Define in which order config files and CLI options should be evaluated",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "precedence",
                  "Description": "precedence",
                  "Type": "String"
                },
                {
                  "Name": "cli-override",
                  "Description": "precedence"
                },
                {
                  "Name": "file-override",
                  "Description": "precedence"
                },
                {
                  "Name": "prefer-file",
                  "Description": "precedence"
                }
              ]
            }
          ]
        },
        {
          "Name": "--no-editorconfig",
          "Description": "Don\u0027t take .editorconfig into account when parsing configuration",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--find-config-path",
          "Description": "Finds a path to the configuration file for the given input file",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "file",
                  "Description": "file",
                  "Type": "FileSystemEntry"
                }
              ]
            }
          ]
        },
        {
          "Name": "--ignore-path",
          "Description": "Path to a file with patterns describing files to ignore",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "path",
                  "Description": "path",
                  "Type": "FileSystemEntry"
                }
              ]
            }
          ]
        },
        {
          "Name": "--plugin",
          "Description": "Add a plugin",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "path",
                  "Description": "path",
                  "Type": "Directory"
                }
              ]
            }
          ]
        },
        {
          "Name": "--plugin-search-dir",
          "Description": "Custom directory that contains prettier plugins in node_modules subdirectory",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "path",
                  "Description": "path",
                  "Type": "Directory"
                }
              ]
            }
          ]
        },
        {
          "Name": "--with-node-modules",
          "Description": "Process files inside \u0027node_modules\u0027 directory",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--cursor-offset",
          "Description": "Print (to stderr) where a cursor at the given position would move to after formatting",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "int",
                  "Description": "int",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "--range-end",
          "Description": "Format code ending at a given character offset (exclusive)",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "int",
                  "Description": "int",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "--range-start",
          "Description": "Format code starting at a given character offset",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "int",
                  "Description": "int",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "--no-color",
          "Description": "Do not colorize error messages",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--file-info",
          "Description": "Extract the following info (as JSON) for a given file path",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "path",
                  "Description": "path",
                  "Type": "FileSystemEntry"
                }
              ]
            }
          ]
        },
        {
          "Name": "-h",
          "Description": "Show CLI usage, or details about the given flag",
          "Aliases": [
            "--help"
          ],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "flag",
                  "Description": "flag",
                  "Type": "String"
                }
              ],
              "Optional": true
            }
          ]
        },
        {
          "Name": "-u",
          "Description": "Ignore unknown files",
          "Aliases": [
            "--ignore-unknown"
          ],
          "Arguments": []
        },
        {
          "Name": "--insert-pragma",
          "Description": "Insert @format pragma into file\u0027s first docblock comment",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--loglevel",
          "Description": "What level of logs to report",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "level",
                  "Description": "level",
                  "Type": "String"
                },
                {
                  "Name": "silent",
                  "Description": "level"
                },
                {
                  "Name": "error",
                  "Description": "level"
                },
                {
                  "Name": "warn",
                  "Description": "level"
                },
                {
                  "Name": "log",
                  "Description": "level"
                },
                {
                  "Name": "debug",
                  "Description": "level"
                }
              ]
            }
          ]
        },
        {
          "Name": "--require-pragma",
          "Description": "Require either \u0027@prettier\u0027 or \u0027@format\u0027 to be present in the file\u0027s first docblock comment in order for it to be formatted",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--stdin-filepath",
          "Description": "Path to the file to pretend that stdin comes from",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "path",
                  "Description": "path",
                  "Type": "FileSystemEntry"
                }
              ]
            }
          ]
        },
        {
          "Name": "--support-info",
          "Description": "Print support information as JSON",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-v",
          "Description": "Print Prettier version",
          "Aliases": [
            "--version"
          ],
          "Arguments": []
        },
        {
          "Name": "--debug-check",
          "Description": "This will cause Prettier to print an error message if it detects that code correctness might have changed",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--no-error-on-unmatched-pattern",
          "Description": "Prevent errors when pattern is unmatched",
          "Aliases": [],
          "Arguments": []
        }
      ],
      "Optional": true
    },
    {
      "Arguments": [
        {
          "Name": "file, dir or glob",
          "Description": "file, dir or glob",
          "Type": "FileSystemEntry"
        }
      ],
      "Optional": true
    }
  ]
}