{
  "Comment": "This command info is generated from fig",
  "Name": "babel",
  "Description": "",
  "Arguments": [
    {
      "Arguments": [
        {
          "Name": "-f",
          "Description": "The filename to use when reading from stdin. This will be used in source-maps, errors etc",
          "Aliases": [
            "--filename"
          ],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "filename",
                  "Description": "filename",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "--presets",
          "Description": "A comma-separated list of preset names",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "list",
                  "Description": "list",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "--plugins",
          "Description": "A comma-separated list of plugin names",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "list",
                  "Description": "list",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "--config-file",
          "Description": "Path to a .babelrc file to use",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "path",
                  "Description": "path",
                  "Type": "FileSystemEntry"
                }
              ]
            }
          ]
        },
        {
          "Name": "--env-name",
          "Description": "The name of the \u0027env\u0027 to use when loading configs and plugins. Defaults to the value of BABEL_ENV, or else NODE_ENV, or else \u0027development\u0027",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "env",
                  "Description": "env",
                  "Type": "String"
                },
                {
                  "Name": "production",
                  "Description": "env"
                },
                {
                  "Name": "development",
                  "Description": "env"
                }
              ]
            }
          ]
        },
        {
          "Name": "--root-mode",
          "Description": "The project-root resolution mode",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "mode",
                  "Description": "mode",
                  "Type": "String"
                },
                {
                  "Name": "root",
                  "Description": "Passes the \u0022root\u0022 value through as unchanged"
                },
                {
                  "Name": "upward",
                  "Description": "Walks upward from the \u0022root\u0022 directory, looking for a directory containing a babel.config.json file, and throws an error if a babel.config.json is not found"
                },
                {
                  "Name": "upward-optional",
                  "Description": "Walk upward from the \u0022root\u0022 directory, looking for a directory containing a babel.config.json file, and falls back to \u0022root\u0022 if a babel.config.json is not found"
                }
              ]
            }
          ]
        },
        {
          "Name": "--source-type",
          "Description": "",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "type",
                  "Description": "type",
                  "Type": "String"
                },
                {
                  "Name": "script",
                  "Description": "type"
                },
                {
                  "Name": "module",
                  "Description": "type"
                }
              ]
            }
          ]
        },
        {
          "Name": "--no-babelrc",
          "Description": "Whether or not to look up .babelrc and .babelignore files",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--ignore",
          "Description": "List of glob paths to **not** compile",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "list",
                  "Description": "list",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "--only",
          "Description": "List of glob paths to **only** compile",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "list",
                  "Description": "list",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "--no-highlight-code",
          "Description": "Enable or disable ANSI syntax highlighting of code frames",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--no-comments",
          "Description": "Write comments to generated output",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--retain-lines",
          "Description": "Retain line numbers. This will result in really ugly code",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--compact",
          "Description": "Do not include superfluous whitespace characters and line terminators",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "mode",
                  "Description": "mode",
                  "Type": "String"
                },
                {
                  "Name": "true",
                  "Description": "mode"
                },
                {
                  "Name": "false",
                  "Description": "mode"
                },
                {
                  "Name": "auto",
                  "Description": "mode"
                }
              ]
            }
          ]
        },
        {
          "Name": "--minified",
          "Description": "Save as many bytes when printing. (false by default)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--auxiliary-comment-before",
          "Description": "Print a comment before any injected non-user code",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "comment",
                  "Description": "comment",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "--auxiliary-comment-after",
          "Description": "Print a comment after any injected non-user code",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "comment",
                  "Description": "comment",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-s",
          "Description": "",
          "Aliases": [
            "--source-maps"
          ],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "mode",
                  "Description": "mode",
                  "Type": "String"
                },
                {
                  "Name": "true",
                  "Description": "mode"
                },
                {
                  "Name": "false",
                  "Description": "mode"
                },
                {
                  "Name": "inline",
                  "Description": "mode"
                },
                {
                  "Name": "both",
                  "Description": "mode"
                }
              ]
            }
          ]
        },
        {
          "Name": "--source-map-target",
          "Description": "Set \u0060file\u0060 on returned source map",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "string",
                  "Description": "string",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "--source-file-name",
          "Description": "Set \u0060sources[0]\u0060 on returned source map",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "string",
                  "Description": "string",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "--source-root",
          "Description": "The root from which all sources are relative",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "filename",
                  "Description": "filename",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-x",
          "Description": "Comma separated list of extensions to compile when a directory has been the input. [js,ts,jsx,tsx]",
          "Aliases": [
            "--extensions"
          ],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "extensions",
                  "Description": "extensions",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "--keep-file-extension",
          "Description": "Preserve the file extensions of the input files",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-w",
          "Description": "Recompile files on changes",
          "Aliases": [
            "--watch"
          ],
          "Arguments": []
        },
        {
          "Name": "--skip-initial-build",
          "Description": "Do not compile files before watching",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-o",
          "Description": "Compile all input files into a single file",
          "Aliases": [
            "--out-file"
          ],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "file",
                  "Description": "file",
                  "Type": "FileSystemEntry"
                }
              ]
            }
          ]
        },
        {
          "Name": "-d",
          "Description": "Compile an input directory of modules into an output directory",
          "Aliases": [
            "--out-dir"
          ],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "directory",
                  "Description": "directory",
                  "Type": "Directory"
                }
              ]
            }
          ]
        },
        {
          "Name": "--relative",
          "Description": "Compile into an output directory relative to input directory or file",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-D",
          "Description": "When compiling a directory copy over non-compilable files",
          "Aliases": [
            "--copy-files"
          ],
          "Arguments": []
        },
        {
          "Name": "--include-dotfiles",
          "Description": "Include dotfiles when compiling and copying non-compilable files",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--no-copy-ignored",
          "Description": "Exclude ignored files when copying non-compilable files",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--verbose",
          "Description": "Log everything. This option conflicts with --quiet",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--quiet",
          "Description": "Don\u0027t log anything. This option conflicts with --verbose",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--delete-dir-on-start",
          "Description": "Delete the out directory before compilation",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--out-file-extension",
          "Description": "Use a specific extension for the output files",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "extension",
                  "Description": "extension",
                  "Type": "String"
                },
                {
                  "Name": ".es6",
                  "Description": "extension"
                },
                {
                  "Name": ".js",
                  "Description": "extension"
                },
                {
                  "Name": ".es",
                  "Description": "extension"
                },
                {
                  "Name": ".jsx",
                  "Description": "extension"
                },
                {
                  "Name": ".mjs",
                  "Description": "extension"
                }
              ]
            }
          ]
        },
        {
          "Name": "-V",
          "Description": "Output the version number",
          "Aliases": [
            "--version"
          ],
          "Arguments": []
        },
        {
          "Name": "-h",
          "Description": "Output usage information",
          "Aliases": [
            "--help"
          ],
          "Arguments": []
        }
      ],
      "Optional": true
    }
  ]
}