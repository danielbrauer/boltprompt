{
  "Comment": "This command info is generated from fig",
  "Name": "helmfile",
  "Description": "Deploy helm charts",
  "Arguments": [
    {
      "Arguments": [
        {
          "Name": "--help",
          "Description": "Do not exit with an error code if the provided selector has no matching releases",
          "Aliases": [
            "-h"
          ],
          "Arguments": []
        },
        {
          "Name": "--allow-no-matching-release",
          "Description": "Show help for helmfile",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--chart",
          "Description": "Set chart. Uses the chart set in release by default, and is available in template as {{ .Chart }}",
          "Aliases": [
            "-c"
          ],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "string",
                  "Description": "string",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "--color",
          "Description": "Output with color",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--debug",
          "Description": "Enable verbose output for Helm and set log-level to debug, this disables --quiet/-q effect",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--enable-live-output",
          "Description": "Show live output from the Helm binary Stdout/Stderr into Helmfile own Stdout/Stderr. It only applies for the Helm CLI commands, Stdout/Stderr for Hooks are still displayed only when it\u0027s execution finishes",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--environment",
          "Description": "Specify the environment name. defaults to default",
          "Aliases": [
            "-e"
          ],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "environment",
                  "Description": "environment",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "--file",
          "Description": "Load config from file or directory. defaults to helmfile.yaml or \u0060helmfile.d\u0060(means \u0060helmfile.d/*.yaml\u0060) in this preference",
          "Aliases": [
            "-f"
          ],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "file",
                  "Description": "file",
                  "Type": "FileSystemEntry"
                }
              ]
            }
          ]
        },
        {
          "Name": "--helm-binary",
          "Description": "Path to the helm binary (default \u0022helm\u0022)",
          "Aliases": [
            "-b"
          ],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "binary",
                  "Description": "binary",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "--interactive",
          "Description": "Request confirmation before attempting to modify clusters",
          "Aliases": [
            "-i"
          ],
          "Arguments": []
        },
        {
          "Name": "--kube-context",
          "Description": "Set kubectl context. Uses current context by default",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "kube-context",
                  "Description": "kube-context",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "--log-level",
          "Description": "Set log level, default info (default info)",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "log-level",
                  "Description": "log-level",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "--namespace",
          "Description": "Set namespace. Uses the namespace set in the context by default, and is available in templates as {{ .Namespace }}",
          "Aliases": [
            "-n"
          ],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "namespace",
                  "Description": "namespace",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "--no-color",
          "Description": "Output without color",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--quiet",
          "Description": "Silence output. Equivalent to log-level warn",
          "Aliases": [
            "-q"
          ],
          "Arguments": []
        },
        {
          "Name": "--selector",
          "Description": "Only run using the releases that match labels. Labels can take the form of foo=bar or foo!=bar",
          "Aliases": [
            "-l"
          ],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": " selector ",
                  "Description": " selector ",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "--state-values-file",
          "Description": "Specify state values in a YAML file",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "state-values-file",
                  "Description": "state-values-file",
                  "Type": "FileSystemEntry"
                }
              ]
            }
          ]
        },
        {
          "Name": "--state-values-set",
          "Description": "Set state values on the command line (can specify multiple or separate values with commas: key1=val1,key2=val2)",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "state-values-=set",
                  "Description": "state-values-=set",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "--version",
          "Description": "Version for helmfile",
          "Aliases": [
            "-v"
          ],
          "Arguments": []
        }
      ],
      "Optional": true
    },
    {
      "Arguments": [
        {
          "Name": "apply",
          "Description": "Apply all resources from state file only when there are changes",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "build",
          "Description": "Build all resources from state file",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "cache",
          "Description": "Cache management",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "charts",
          "Description": "DEPRECATED: sync releases from state file (helm upgrade --install)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "completion",
          "Description": "Generate the autocompletion script for the specified shell",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "delete",
          "Description": "The helmfile delete sub-command deletes all the releases defined in the manifests",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "deps",
          "Description": "Update charts based on their requirements, it locks your helmfile state and local charts dependencies",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "destroy",
          "Description": "Destroys and then purges releases",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "diff",
          "Description": "Diff releases defined in state file, it executes the helm-diff plugin across all of the charts/releases defined in the manifest",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "fetch",
          "Description": "Fetch charts from state file, it downloads or copies local charts to a local directory for debug purpose",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "help",
          "Description": "Help about any command",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "init",
          "Description": "Initialize the helmfile, includes version checking and installation of helm and plug-ins",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "lint",
          "Description": "Lint charts from state file (helm lint)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "list",
          "Description": "List releases defined in state file",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "repos",
          "Description": "Repos releases defined in state file",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "secrets",
          "Description": "Causes the helm-secrets plugin to be executed to decrypt the file",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "status",
          "Description": "Retrieve status of releases in state file",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "sync",
          "Description": "Sync releases defined in state file",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "template",
          "Description": "Template releases defined in state file",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "test",
          "Description": "Test charts from state file (helm test)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "version",
          "Description": "Print the CLI version",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": " write-values",
          "Description": "Write values files for releases. Similar to \u0060helmfile template\u0060, write values files instead of manifests",
          "Aliases": [],
          "Arguments": []
        }
      ],
      "DontAllowMultiple": true
    }
  ]
}