{
  "Comment": "This command info is generated from fig",
  "Name": "symfony",
  "Description": "Symfony Binary",
  "Arguments": [
    {
      "Arguments": [
        {
          "Name": "-h",
          "Description": "Show help",
          "Aliases": [
            "--help"
          ],
          "Arguments": []
        },
        {
          "Name": "-q",
          "Description": "Do not output any message",
          "Aliases": [
            "--quiet"
          ],
          "Arguments": []
        },
        {
          "Name": "--no-ansi",
          "Description": "Disable ANSI output",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--ansi",
          "Description": "Force ANSI output",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--no-interaction",
          "Description": "Do not ask any interactive question",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-v",
          "Description": "Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug",
          "Aliases": [
            "--verbose"
          ],
          "Arguments": []
        },
        {
          "Name": "V",
          "Description": "Print the version",
          "Type": "Flag",
          "Aliases": [],
          "Arguments": []
        }
      ],
      "Optional": true
    },
    {
      "Arguments": [
        {
          "Name": "book:check-requirements",
          "Description": "Check that you have all the pre-requisites locally to code while reading the \u0022Symfony: The Fast Track\u0022 book",
          "Aliases": [
            "book:check"
          ],
          "Arguments": []
        },
        {
          "Name": "book:checkout",
          "Description": "Check out a step of the \u0022Symfony: The Fast Track\u0022 book repository",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "cloud:clear-cache",
          "Description": "Clear the CLI cache",
          "Aliases": [
            "cloud:clearcache",
            "cloud:cc"
          ],
          "Arguments": []
        },
        {
          "Name": "cloud:docs",
          "Description": "Open the online documentation",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "cloud:multi",
          "Description": "Execute a command on multiple projects",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "cloud:web",
          "Description": "Open the Web UI",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "cloud:activity:cancel",
          "Description": "Cancel an activity",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "cloud:activity:get",
          "Description": "View detailed information on a single activity",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "cloud:activity:list",
          "Description": "Get a list of activities for an environment or project",
          "Aliases": [
            "cloud:activities",
            "cloud:act"
          ],
          "Arguments": []
        },
        {
          "Name": "cloud:activity:log",
          "Description": "Display the log for an activity",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "cloud:app:config-get",
          "Description": "View the configuration of an app",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "cloud:app:list",
          "Description": "List apps in the project",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "cloud:auth:api-token-login",
          "Description": "Log in to Platform.sh using an API token",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "cloud:auth:browser-login",
          "Description": "Log in to Platform.sh via a browse",
          "Aliases": [
            "cloud:login"
          ],
          "Arguments": []
        },
        {
          "Name": "cloud:auth:info",
          "Description": "Display your account information",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "cloud:auth:logout",
          "Description": "Log out of Platform.sh",
          "Aliases": [
            "cloud:logout"
          ],
          "Arguments": []
        },
        {
          "Name": "cloud:backup:create",
          "Description": "Make a backup of an environment",
          "Aliases": [
            "cloud:backup",
            "cloud:snapshot:create",
            "cloud:environment:backup"
          ],
          "Arguments": []
        },
        {
          "Name": "cloud:backup:list",
          "Description": "List available backups of an environment",
          "Aliases": [
            "cloud:backups",
            "cloud:snapshots",
            "cloud:snapshot:list"
          ],
          "Arguments": []
        },
        {
          "Name": "cloud:backup:restore",
          "Description": "Restore an environment backup",
          "Aliases": [
            "cloud:environment:restore",
            "cloud:snapshot:restore"
          ],
          "Arguments": []
        },
        {
          "Name": "cloud:certificate:add",
          "Description": "Add an SSL certificate to the project",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "cloud:certificate:delete",
          "Description": "Delete a certificate from the project",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "cloud:certificate:get",
          "Description": "View a certificate",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "cloud:certificate:list",
          "Description": "List project certificates",
          "Aliases": [
            "cloud:certificates",
            "cloud:certs"
          ],
          "Arguments": []
        },
        {
          "Name": "cloud:commit:get",
          "Description": "Show commit details",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "cloud:commit:list",
          "Description": "List commits",
          "Aliases": [
            "cloud:commits"
          ],
          "Arguments": []
        },
        {
          "Name": "cloud:db:dump",
          "Description": "Create a local dump of the remote database",
          "Aliases": [
            "cloud:sql-dump",
            "cloud-environment:sql-dump"
          ],
          "Arguments": []
        },
        {
          "Name": "cloud:db:size",
          "Description": "Estimate the disk usage of a database",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "cloud:db:sql",
          "Description": "Run SQL on the remote database",
          "Aliases": [
            "cloud:sql",
            "cloud:environment:sql"
          ],
          "Arguments": []
        },
        {
          "Name": "cloud:domain:add",
          "Description": "Add a new domain to the project",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "cloud:domain:delete",
          "Description": "Delete a domain from the project",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "cloud:domain:get",
          "Description": "Show detailed information for a domain",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "cloud:domain:list",
          "Description": "Get a list of all domains",
          "Aliases": [
            "cloud:domains"
          ],
          "Arguments": []
        },
        {
          "Name": "cloud:domain:update",
          "Description": "Update a domain",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "coud:environment:activate",
          "Description": "Activate an environment",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "cloud:environment:branch",
          "Description": "Branch an environment",
          "Aliases": [
            "cloud:branch"
          ],
          "Arguments": []
        },
        {
          "Name": "cloud:environment:checkout",
          "Description": "Check out an environment",
          "Aliases": [
            "cloud:checkout"
          ],
          "Arguments": []
        },
        {
          "Name": "cloud:environment:debug",
          "Description": "Debug an environment by switching Symfony to the debug mode temporarily",
          "Aliases": [
            "environment:debug"
          ],
          "Arguments": []
        },
        {
          "Name": "cloud:environment:delete",
          "Description": "Delete one or more environments",
          "Aliases": [
            "cloud:environment:deactivate"
          ],
          "Arguments": []
        },
        {
          "Name": "cloud:environment:http-access",
          "Description": "Update HTTP access settings for an environment",
          "Aliases": [
            "cloud:httpaccess"
          ],
          "Arguments": []
        },
        {
          "Name": "cloud:environment:info",
          "Description": "Read or set properties for an environment",
          "Aliases": [
            "cloud:environment:metadata"
          ],
          "Arguments": []
        },
        {
          "Name": "cloud:environment:init",
          "Description": "Initialize an environment from a public Git repository",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "cloud:environment:list",
          "Description": "Get a list of environments",
          "Aliases": [
            "cloud:environments",
            "cloud:env"
          ],
          "Arguments": []
        },
        {
          "Name": "cloud:environment:logs",
          "Description": "Read an environment\u0027s logs",
          "Aliases": [
            "cloud:log",
            "cloud:logs"
          ],
          "Arguments": []
        },
        {
          "Name": "cloud:environment:merge",
          "Description": "Merge an environment",
          "Aliases": [
            "cloud:merge"
          ],
          "Arguments": []
        },
        {
          "Name": "cloud:environment:push",
          "Description": "Push code to an environment",
          "Aliases": [
            "cloud:push",
            "deploy",
            "cloud:deploy"
          ],
          "Arguments": []
        },
        {
          "Name": "cloud:environment:redeploy",
          "Description": "Redeploy an environment",
          "Aliases": [
            "cloud:redeploy"
          ],
          "Arguments": []
        },
        {
          "Name": "cloud:environment:relationships",
          "Description": "Show an environment\u0027s relationships",
          "Aliases": [
            "cloud:relationships"
          ],
          "Arguments": []
        },
        {
          "Name": "cloud:environment:scp",
          "Description": "Copy files to and from current environment using scp",
          "Aliases": [
            "cloud:scp"
          ],
          "Arguments": []
        },
        {
          "Name": "cloud:environment:ssh",
          "Description": "SSH to the current environment",
          "Aliases": [
            "cloud:ssh"
          ],
          "Arguments": []
        },
        {
          "Name": "cloud:environment:synchronize",
          "Description": "Synchronize an environment\u0027s code and/or data from its parent",
          "Aliases": [
            "cloud:sync"
          ],
          "Arguments": []
        },
        {
          "Name": "cloud:environment:url",
          "Description": "Get the public URLs of an environment",
          "Aliases": [
            "cloud:url"
          ],
          "Arguments": []
        },
        {
          "Name": "cloud:environment:xdebug",
          "Description": "Open a tunnel to Xdebug on the environment",
          "Aliases": [
            "cloud:xdebug"
          ],
          "Arguments": []
        },
        {
          "Name": "cloud:integration:activity:get",
          "Description": "View detailed information on a single integration activity",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "cloud:integration:activity:list",
          "Description": "Get a list of activities for an integration",
          "Aliases": [
            "cloud:i:act",
            "cloud:integration:activities"
          ],
          "Arguments": []
        },
        {
          "Name": "cloud:integration:activity:log",
          "Description": "Display the log for an integration activity",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "cloud:integration:add",
          "Description": "Add an integration to the project",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "cloud:integration:delete",
          "Description": "Delete an integration from a project",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "cloud:integration:get",
          "Description": "View details of an integration",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "cloud:integration:list",
          "Description": "View a list of project integration(s)",
          "Aliases": [
            "cloud:integrations"
          ],
          "Arguments": []
        },
        {
          "Name": "cloud:integration:update",
          "Description": "Update an integration",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "cloud:integration:validate",
          "Description": "Validate an existing integration",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "cloud:mount:download",
          "Description": "Download files from a mount, using rsync",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "cloud:mount:list",
          "Description": "Get a list of mounts",
          "Aliases": [
            "cloud:mounts"
          ],
          "Arguments": []
        },
        {
          "Name": "cloud:mount:size",
          "Description": "Check the disk usage of mounts",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "cloud:mount:upload",
          "Description": "Upload files to a mount, using rsync",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "cloud:organization:billing:address",
          "Description": "View or change an organization\u0027s billing address",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "cloud:organization:billing:profile",
          "Description": "View or change an organization\u0027s billing profile",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "cloud:organization:create",
          "Description": "Create a new organization",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "cloud:organization:delete",
          "Description": "Delete an organization",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "cloud:organization:info",
          "Description": "View or change organization details",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "cloud:organization:list",
          "Description": "List organizations",
          "Aliases": [
            "cloud:orgs",
            "cloud:organizations"
          ],
          "Arguments": []
        },
        {
          "Name": "cloud:organization:subscription:list",
          "Description": "List subscriptions within an organization",
          "Aliases": [
            "cloud:organization:subscriptions"
          ],
          "Arguments": []
        },
        {
          "Name": "cloud:organization:user:add",
          "Description": "Invite a user to an organization",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "cloud:organization:user:delete",
          "Description": "Remove a user from an organization",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "cloud:organization:user:get",
          "Description": "View an organization user",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "cloud:organization:user:list",
          "Description": "List organization users",
          "Aliases": [
            "cloud:organization:users"
          ],
          "Arguments": []
        },
        {
          "Name": "cloud:organization:user:update",
          "Description": "Update an organization user",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "cloud:project:clear-build-cache",
          "Description": "Clear a project\u0027s build cache",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "cloud:project:create",
          "Description": "Create a new project",
          "Aliases": [
            "cloud:create"
          ],
          "Arguments": []
        },
        {
          "Name": "cloud:project:delete",
          "Description": "Delete a project",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "cloud:project:get",
          "Description": "Clone a project locally",
          "Aliases": [
            "cloud:get"
          ],
          "Arguments": []
        },
        {
          "Name": "cloud:project:info",
          "Description": "Read or set properties for a project",
          "Aliases": [
            "cloud:project:metadata"
          ],
          "Arguments": []
        },
        {
          "Name": "cloud:project:list",
          "Description": "Get a list of all active projects",
          "Aliases": [
            "cloud:projects",
            "cloud:pro"
          ],
          "Arguments": []
        },
        {
          "Name": "cloud:project:set-remote",
          "Description": "Set the remote project for the current Git repository",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "cloud:repo:cat",
          "Description": "Read a file in the project repository",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "cloud:repo:ls",
          "Description": "List files in the project repository",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "cloud:repo:read",
          "Description": "Read a directory or file in the project repository",
          "Aliases": [
            "cloud:read"
          ],
          "Arguments": []
        },
        {
          "Name": "cloud:route:get",
          "Description": "View detailed information about a route",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "cloud:route:list",
          "Description": "List all routes for an environment",
          "Aliases": [
            "cloud:routes",
            "cloud:environment:routes"
          ],
          "Arguments": []
        },
        {
          "Name": "cloud:service:list",
          "Description": "List services in the project",
          "Aliases": [
            "cloud:services"
          ],
          "Arguments": []
        },
        {
          "Name": "cloud:service:mongo:dump",
          "Description": "Create a binary archive dump of data from MongoDB",
          "Aliases": [
            "cloud:mongodump"
          ],
          "Arguments": []
        },
        {
          "Name": "cloud:service:mongo:export",
          "Description": "Export data from MongoDB",
          "Aliases": [
            "cloud:mongoexport"
          ],
          "Arguments": []
        },
        {
          "Name": "cloud:service:mongo:restore",
          "Description": "Restore a binary archive dump of data into MongoDB",
          "Aliases": [
            "cloud:mongorestore"
          ],
          "Arguments": []
        },
        {
          "Name": "cloud:service:mongo:shell",
          "Description": "Use the MongoDB shell",
          "Aliases": [
            "cloud:mongo"
          ],
          "Arguments": []
        },
        {
          "Name": "cloud:service:redis-cli",
          "Description": "Access the Redis CLI",
          "Aliases": [
            "cloud:redis"
          ],
          "Arguments": []
        },
        {
          "Name": "cloud:ssh-cert:load",
          "Description": "Generate an SSH certificate",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "cloud:ssh-key:add",
          "Description": "Add a new SSH key",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "cloud:ssh-key:delete",
          "Description": "Delete an SSH key",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "cloud:ssh-key:list",
          "Description": "Get a list of SSH keys in your accountt",
          "Aliases": [
            "cloud:ssh-keys"
          ],
          "Arguments": []
        },
        {
          "Name": "cloud:subscription:info",
          "Description": "Read or modify subscription properties",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "cloud:tunnel:close",
          "Description": "Close SSH tunnels",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "cloud:tunnel:info",
          "Description": "View relationship info for SSH tunnels",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "cloud:tunnel:list",
          "Description": "List SSH tunnels",
          "Aliases": [
            "cloud:tunnels"
          ],
          "Arguments": []
        },
        {
          "Name": "cloud:tunnel:open",
          "Description": "Open SSH tunnels to an app\u0027s relationships",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "cloud:tunnel:single",
          "Description": "Open a single SSH tunnel to an app relationship",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "cloud:user:add",
          "Description": "Add a user to the project",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "cloud:user:delete",
          "Description": "Delete a user from the project",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "cloud:user:get",
          "Description": "View a user\u0027s role(s)",
          "Aliases": [
            "cloud:vget"
          ],
          "Arguments": []
        },
        {
          "Name": "cloud:user:list",
          "Description": "List project users",
          "Aliases": [
            "cloud:variables",
            "cloud:var"
          ],
          "Arguments": []
        },
        {
          "Name": "cloud:user:update",
          "Description": "Update user role(s) on a project",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "cloud:variable:create",
          "Description": "Create a variable",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "cloud:variable:delete",
          "Description": "Delete a variable",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "cloud:variable:get",
          "Description": "View a variable",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "cloud:variable:list",
          "Description": "List variables",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "cloud:variable:update",
          "Description": "Update a variable",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "cloud:worker:list",
          "Description": "Get a list of all deployed workers",
          "Aliases": [
            "cloud:workers"
          ],
          "Arguments": []
        },
        {
          "Name": "local:check:requirements",
          "Description": "Checks requirements for running Symfony and gives useful recommendations to optimize PHP for Symfony",
          "Aliases": [
            "check-requirements",
            "check:req"
          ],
          "Arguments": []
        },
        {
          "Name": "local:check:security",
          "Description": "Check security issues in project dependencies",
          "Aliases": [
            "security:check",
            "check:security",
            "local:security:check"
          ],
          "Arguments": []
        },
        {
          "Name": "local:new",
          "Description": "Create a new Symfony project",
          "Aliases": [
            "new"
          ],
          "Arguments": []
        },
        {
          "Name": "local:php:list",
          "Description": "List locally available PHP versions",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "local:php:refresh",
          "Description": "Auto-discover the list of available PHP version",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "local:proxy:domain:attach",
          "Description": "Attach a local domain for the proxy",
          "Aliases": [
            "proxy:domain:attach"
          ],
          "Arguments": []
        },
        {
          "Name": "local:proxy:domain:detach",
          "Description": "Detach domains from the proxy",
          "Aliases": [
            "proxy:domain:detach"
          ],
          "Arguments": []
        },
        {
          "Name": "local:proxy:start",
          "Description": "Start the local proxy server (local domains support)",
          "Aliases": [
            "proxy:start"
          ],
          "Arguments": []
        },
        {
          "Name": "local:proxy:status",
          "Description": "Get the local proxy server status",
          "Aliases": [
            "proxy:status"
          ],
          "Arguments": []
        },
        {
          "Name": "local:proxy:stop",
          "Description": "Stop the local proxy server",
          "Aliases": [
            "proxy:stop"
          ],
          "Arguments": []
        },
        {
          "Name": "local:run",
          "Description": "Run a program with environment variables set depending on the current context",
          "Aliases": [
            "run"
          ],
          "Arguments": []
        },
        {
          "Name": "local:server:ca:install",
          "Description": "Create a local Certificate Authority for serving HTTPS",
          "Aliases": [
            "server:ca:install"
          ],
          "Arguments": []
        },
        {
          "Name": "local:server:ca:uninstall",
          "Description": "Uninstall the local Certificate Authority",
          "Aliases": [
            "server:ca:uninstall"
          ],
          "Arguments": []
        },
        {
          "Name": "local:server:list",
          "Description": "List all configured local web servers",
          "Aliases": [
            "server:list"
          ],
          "Arguments": []
        },
        {
          "Name": "local:server:log",
          "Description": "Display local web server logs",
          "Aliases": [
            "server:log"
          ],
          "Arguments": []
        },
        {
          "Name": "local:server:prod",
          "Description": "Switch a project to use Symfony\u0027s production environment",
          "Aliases": [
            "server:prod"
          ],
          "Arguments": []
        },
        {
          "Name": "local:server:start",
          "Description": "Run a local web server",
          "Aliases": [
            "server:start",
            "serve"
          ],
          "Arguments": []
        },
        {
          "Name": "local:server:status",
          "Description": "Get the local web server status",
          "Aliases": [
            "server:status"
          ],
          "Arguments": []
        },
        {
          "Name": "local:server:stop",
          "Description": "Stop the local web server",
          "Aliases": [
            "server:stop"
          ],
          "Arguments": []
        },
        {
          "Name": "local:var:expose-from-tunnel",
          "Description": "Expose tunnel service environment variables locally",
          "Aliases": [
            "var:expose-from-tunnel"
          ],
          "Arguments": []
        },
        {
          "Name": "open:local",
          "Description": "Open the local project in a browser",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "open:local:rabbitmq",
          "Description": "Open the local project RabbitMQ web management interface in a browser",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "open:local:webmail",
          "Description": "Open the local project mail catcher web interface in a browser",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "project:init",
          "Description": "Initialize a new project using templates",
          "Aliases": [
            "init"
          ],
          "Arguments": []
        },
        {
          "Name": "self:help",
          "Description": "Display help for a command or a category of commands",
          "Aliases": [
            "help",
            "list"
          ],
          "Arguments": []
        },
        {
          "Name": "self:version",
          "Description": "Display the application version",
          "Aliases": [
            "version"
          ],
          "Arguments": []
        },
        {
          "Name": "var:export",
          "Description": "Export environment variables depending on the current context",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "composer",
          "Description": "Runs Composer without memory limit",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "php",
          "Description": "Runs the binary using the configured PHP version",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "pecl",
          "Description": "Runs the binary using the configured PHP version",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "pear",
          "Description": "Runs the binary using the configured PHP version",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "php-fdp",
          "Description": "Runs the binary using the configured PHP version",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "php-cgi",
          "Description": "Runs the binary using the configured PHP version",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "php-config",
          "Description": "Runs the binary using the configured PHP version",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "phpdbg",
          "Description": "Runs the binary using the configured PHP version",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "phpize",
          "Description": "Runs the binary using the configured PHP version",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "console",
          "Description": "Runs the Symfony Console (bin/console) for current project",
          "Aliases": [],
          "Arguments": []
        }
      ],
      "DontAllowMultiple": true
    }
  ]
}