{
  "Comment": "This command info is generated from fig",
  "Name": "wasm-bindgen",
  "Description": "Generate bindings between WebAssembly and JavaScript",
  "Arguments": [
    {
      "Arguments": [
        {
          "Name": "--help",
          "Description": "Show help for wasm-bindgen",
          "Aliases": [
            "-h"
          ],
          "Arguments": []
        },
        {
          "Name": "--version",
          "Description": "Show version for wasm-bindgen",
          "Aliases": [
            "-v"
          ],
          "Arguments": []
        },
        {
          "Name": "--out-dir",
          "Description": "Output directory",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "directory",
                  "Description": "directory",
                  "Type": "Directory"
                }
              ]
            }
          ]
        },
        {
          "Name": "--out-name",
          "Description": "Set a custom output filename (Without extension. Defaults to crate name)",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "filename",
                  "Description": "filename",
                  "Type": "FileSystemEntry"
                }
              ]
            }
          ]
        },
        {
          "Name": "--target",
          "Description": "What type of output to generate",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "target",
                  "Description": "target",
                  "Type": "String"
                },
                {
                  "Name": "web",
                  "Description": "Directly loadable in a web browser"
                },
                {
                  "Name": "bundler",
                  "Description": "Suitable for loading in bundlers like Webpack"
                },
                {
                  "Name": "nodejs",
                  "Description": "Loadable via require as a Node.js module"
                },
                {
                  "Name": "no-modules",
                  "Description": "Like web, but older and doesn\u0027t use ES modules"
                },
                {
                  "Name": "deno",
                  "Description": "Loadable using imports from Deno modules"
                }
              ]
            }
          ]
        },
        {
          "Name": "--no-modules-global",
          "Description": "Name of global to assign generated bindings to",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "name",
                  "Description": "name",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "--browser",
          "Description": "Hint that JS should only be compatible with a browser",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--typescript",
          "Description": "Output a TypeScript definition file (on by default)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--no-typescript",
          "Description": "Don\u0027t emit a *.d.ts file",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--omit-imports",
          "Description": "Don\u0027t emit imports in generated JavaScript",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--debug",
          "Description": "Include otherwise-extraneous debug checks in output",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--no-demangle",
          "Description": "Don\u0027t demangle Rust symbol names",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--keep-debug",
          "Description": "Keep debug sections in wasm files",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--remove-name-section",
          "Description": "Remove the debugging \u0060name\u0060 section of the file",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--remove-producers-section",
          "Description": "Remove the telemetry \u0060producers\u0060 section",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--omit-default-module-path",
          "Description": "Don\u0027t add WebAssembly fallback imports in generated JavaScript",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--encode-into",
          "Description": "Whether or not to use TextEncoder#encodeInto()",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "option",
                  "Description": "option",
                  "Type": "String"
                },
                {
                  "Name": "test",
                  "Description": "option"
                },
                {
                  "Name": "always",
                  "Description": "Always use TextEncoder#encodeInto()"
                },
                {
                  "Name": "never",
                  "Description": "Never use TextEncoder#encodeInto()"
                }
              ]
            }
          ]
        },
        {
          "Name": "--nodejs",
          "Description": "Deprecated, use \u0060--target nodejs\u0060",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--web",
          "Description": "Deprecated, use \u0060--target web\u0060",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--no-modules",
          "Description": "Deprecated, use \u0060--target no-modules\u0060",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--weak-refs",
          "Description": "Enable usage of the JS weak references proposal",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--reference-types",
          "Description": "Enable usage of WebAssembly reference types",
          "Aliases": [],
          "Arguments": []
        }
      ],
      "Optional": true
    },
    {
      "Arguments": [
        {
          "Name": "input",
          "Description": "input",
          "Type": "File",
          "Extensions": [
            "wasm"
          ],
          "CustomCommand": ""
        }
      ]
    }
  ]
}