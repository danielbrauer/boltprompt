{
  "Comment": "This command info is generated from fig",
  "Name": "ag",
  "Description": "Recursively search for PATTERN in PATH. Like grep or ack, but faster",
  "Arguments": [
    {
      "Arguments": [
        {
          "Name": "--ackmate",
          "Description": "Output results in a format parseable by AckMate https://github.com/protocool/AckMate",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--affinity",
          "Description": "Set thread affinity (if platform supports it)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--noaffinity",
          "Description": "Don\u0027t set thread affinity (if platform supports it)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-a",
          "Description": "Search all files. This doesn\u0027t include hidden files, and doesn\u0027t respect any ignore files",
          "Aliases": [
            "--all-types"
          ],
          "Arguments": []
        },
        {
          "Name": "-A",
          "Description": "Print lines after match",
          "Aliases": [
            "--after"
          ],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "LINES",
                  "Description": "LINES",
                  "Type": "String"
                }
              ],
              "Optional": true
            }
          ]
        },
        {
          "Name": "-B",
          "Description": "Print lines before match",
          "Aliases": [
            "--before"
          ],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "LINES",
                  "Description": "LINES",
                  "Type": "String"
                }
              ],
              "Optional": true
            }
          ]
        },
        {
          "Name": "--nobreak",
          "Description": "Print a newline between matches in different files. Enabled by default",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-c",
          "Description": "Only  print the number of matches in each file. Note: This is the number of matches, not the number of matching lines. Pipe output to wc -l if you want the number of matching lines",
          "Aliases": [
            "--count"
          ],
          "Arguments": []
        },
        {
          "Name": "--color",
          "Description": "Print color codes in results",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--nocolor",
          "Description": "Don\u0027t print color codes in results",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--color-line-number",
          "Description": "Color codes for line numbers. Default is 1;33",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--color-match",
          "Description": "Color codes for result match numbers. Default is 30;43",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--color-path",
          "Description": "Color codes for path names. Default is 1;32",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--column",
          "Description": "Print column numbers in results",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-C",
          "Description": "Print lines before and after matches",
          "Aliases": [
            "--context"
          ],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "LINES",
                  "Description": "LINES",
                  "Type": "String"
                }
              ],
              "Optional": true
            }
          ]
        },
        {
          "Name": "-D",
          "Description": "Output ridiculous amounts of debugging info. Not useful unless you\u0027re actually debugging",
          "Aliases": [
            "--debug"
          ],
          "Arguments": []
        },
        {
          "Name": "--depth",
          "Description": "Search up to NUM directories deep, -1 for unlimited",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "NUM",
                  "Description": "NUM",
                  "Type": "String"
                }
              ],
              "Optional": true
            }
          ]
        },
        {
          "Name": "--filename",
          "Description": "Print file names",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--nofilename",
          "Description": "Don\u0027t print file names",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-f",
          "Description": "Follow symlinks",
          "Aliases": [
            "--follow"
          ],
          "Arguments": []
        },
        {
          "Name": "--nofollow",
          "Description": "Don\u0027t follow symlinks",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-F",
          "Description": "Alias for --literal for compatibility with grep",
          "Aliases": [
            "--fixed-strings"
          ],
          "Arguments": []
        },
        {
          "Name": "--group",
          "Description": "Lumps multiple matches in the same file together, and presents them under a single occurrence of the filename",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--nogroup",
          "Description": "Refrains from lumping matches in the same file together, and instead places the filename at the start of each match line",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "g",
          "Description": "Print filenames matching PATTERN",
          "Type": "Flag",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "PATTERN",
                  "Description": "PATTERN",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-G",
          "Description": "Only search files whose names match PATTERN",
          "Aliases": [
            "--file-search-regex"
          ],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "PATTERN",
                  "Description": "PATTERN",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-H",
          "Description": "Print filenames above matching contents",
          "Aliases": [
            "--heading"
          ],
          "Arguments": []
        },
        {
          "Name": "--noheading",
          "Description": "Don\u0027t print filenames above matching contents",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--hidden",
          "Description": "Search hidden files. This option obeys ignored files",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--ignore",
          "Description": "Ignore files/directories whose names match this pattern. Literal file and directory names are also allowed",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "PATTERN",
                  "Description": "PATTERN",
                  "Type": "FileSystemEntry"
                }
              ]
            }
          ]
        },
        {
          "Name": "--ignore-dir",
          "Description": "Alias for --ignore for compatibility with ack",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "NAME",
                  "Description": "NAME",
                  "Type": "FileSystemEntry"
                }
              ]
            }
          ]
        },
        {
          "Name": "-i",
          "Description": "Match case-insensitively",
          "Aliases": [
            "--ignore-case"
          ],
          "Arguments": []
        },
        {
          "Name": "-l",
          "Description": "Only print the names of files containing matches, not the matching lines. An empty query will print all files that would be searched",
          "Aliases": [
            "--files-with-matches"
          ],
          "Arguments": []
        },
        {
          "Name": "-L",
          "Description": "Only print the names of files that don\u0027t contain matches",
          "Aliases": [
            "--files-without-matches"
          ],
          "Arguments": []
        },
        {
          "Name": "--list-file-types",
          "Description": "See FILE TYPES below",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-m",
          "Description": "Skip the rest of a file after NUM matches. Default is 0, which never skips",
          "Aliases": [
            "--max-count"
          ],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "NUM",
                  "Description": "NUM",
                  "Type": "String"
                }
              ],
              "Optional": true
            }
          ]
        },
        {
          "Name": "--mmap",
          "Description": "Use of memory-mapped I/O. Defaults to true on platforms where mmap() is faster than read(). (All but macOS.)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--nommap",
          "Description": "Don\u0027t use of memory-mapped I/O. Defaults to true on platforms where mmap() is faster than read(). (All but macOS.)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--multiline",
          "Description": "Match regexes across newlines",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--nomultiline",
          "Description": "Don\u0027t match regexes across newlines",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-n",
          "Description": "Don\u0027t recurse into directories",
          "Aliases": [
            "--norecurse"
          ],
          "Arguments": []
        },
        {
          "Name": "--numbers",
          "Description": "Print line numbers",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--nonumbers",
          "Description": "Don\u0027t print line numbers",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-o",
          "Description": "Print only the matching part of the lines",
          "Aliases": [
            "--only-matching"
          ],
          "Arguments": []
        },
        {
          "Name": "--one-device",
          "Description": "When  recursing  directories, don\u0027t scan dirs that reside on other storage devices. This lets you avoid scanning slow network mounts. This feature is not supported on all platforms",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-p",
          "Description": "Provide a path to a specific .ignore file",
          "Aliases": [
            "--path-to-ignore"
          ],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "STRING",
                  "Description": "STRING",
                  "Type": "FileSystemEntry"
                }
              ]
            }
          ]
        },
        {
          "Name": "--pager",
          "Description": "Use a pager such as less. Use --nopager to override. This option is also ignored if output is piped to another program",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "COMMAND",
                  "Description": "COMMAND",
                  "Type": "String"
                },
                {
                  "Name": "more",
                  "Description": "COMMAND"
                },
                {
                  "Name": "less",
                  "Description": "COMMAND"
                },
                {
                  "Name": "most",
                  "Description": "COMMAND"
                }
              ]
            }
          ]
        },
        {
          "Name": "--parallel",
          "Description": "Parse the input stream as a search term, not data to search. This is meant to be  used  with  tools  such  as  GNU  parallel.  For  example:  echo \u0022foo\nbar\nbaz\u0022 | parallel \u0022ag {} .\u0022 will run 3 instances of ag, searching the current directory for \u0022foo\u0022, \u0022bar\u0022, and \u0022baz\u0022",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--print-long-lines",
          "Description": "Print matches on very long lines (\u003E 2k characters by default)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--passthrough",
          "Description": "When searching a stream, print all lines even if they don\u0027t match",
          "Aliases": [
            "--passthru"
          ],
          "Arguments": []
        },
        {
          "Name": "-Q",
          "Description": "Do not parse PATTERN as a regular expression. Try to match it literally",
          "Aliases": [
            "--literal"
          ],
          "Arguments": []
        },
        {
          "Name": "-r",
          "Description": "Recurse into directories when searching. Default is true",
          "Aliases": [
            "--recurse"
          ],
          "Arguments": []
        },
        {
          "Name": "-s",
          "Description": "Match case-sensitively",
          "Aliases": [
            "--case-sensitive"
          ],
          "Arguments": []
        },
        {
          "Name": "-S",
          "Description": "Match case-sensitively if there are any uppercase letters in PATTERN, case-insensitively otherwise. Enabled by default",
          "Aliases": [
            "--smart-case"
          ],
          "Arguments": []
        },
        {
          "Name": "--search-binary",
          "Description": "Search binary files for matches",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--silent",
          "Description": "Suppress all log messages, including errors",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--stats",
          "Description": "Print stats (files scanned, time taken, etc)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--stats-only",
          "Description": "Print stats (files scanned, time taken, etc) and nothing else",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-t",
          "Description": "Search all text files. This doesn\u0027t include hidden files",
          "Aliases": [
            "--all-text"
          ],
          "Arguments": []
        },
        {
          "Name": "-u",
          "Description": "Search all files. This ignores .ignore, .gitignore, etc. It searches binary and hidden files as well",
          "Aliases": [
            "--unrestricted"
          ],
          "Arguments": []
        },
        {
          "Name": "-U",
          "Description": "Ignore VCS ignore files (.gitignore, .hgignore), but still use .ignore",
          "Aliases": [
            "--skip-vcs-ignores"
          ],
          "Arguments": []
        },
        {
          "Name": "-v",
          "Description": "Match every line not containing the specified pattern",
          "Aliases": [
            "--invert-match"
          ],
          "Arguments": []
        },
        {
          "Name": "-V",
          "Description": "Print version info",
          "Aliases": [
            "--version"
          ],
          "Arguments": []
        },
        {
          "Name": "--vimgrep",
          "Description": "Output results in the same form as Vim\u0027s :vimgrep /pattern/g Here is a ~/.vimrc configuration example: set grepprg=ag --vimgrep $* set grepformat=%f:%l:%c:%m Then use :grep to grep for something. Then use :copen, :cn, :cp, etc. to navigate through the matches",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-w",
          "Description": "Only match whole words",
          "Aliases": [
            "--word-regexp"
          ],
          "Arguments": []
        },
        {
          "Name": "--workers",
          "Description": "Use NUM worker threads. Default is the number of CPU cores, with a max of 8",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "NUM",
                  "Description": "NUM",
                  "Type": "String"
                }
              ],
              "Optional": true
            }
          ]
        },
        {
          "Name": "-z",
          "Description": "Search contents of compressed files. Currently, gz and xz are supported. This option requires that ag is built with lzma and zlib",
          "Aliases": [
            "--search-zip"
          ],
          "Arguments": []
        },
        {
          "Name": "-0",
          "Description": "Separate the filenames with \u0000, rather than \n: this allows xargs -0 \u003Ccommand\u003E to correctly process filenames containing spaces or newlines",
          "Aliases": [
            "--null",
            "--print0"
          ],
          "Arguments": []
        }
      ],
      "Optional": true
    },
    {
      "Arguments": [
        {
          "Name": "pattern",
          "Description": "pattern",
          "Type": "String"
        }
      ],
      "Optional": true
    },
    {
      "Arguments": [
        {
          "Name": "path",
          "Description": "path",
          "Type": "FileSystemEntry"
        }
      ],
      "Optional": true
    }
  ]
}