{
  "Comment": "This command info is generated from fig",
  "Name": "g\u002B\u002B",
  "Description": "The default C\u002B\u002B compiler for most linux distributions",
  "Arguments": [
    {
      "Arguments": [
        {
          "Name": "--analyzer-output",
          "Description": "Static analyzer report output format",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                },
                {
                  "Name": "html",
                  "Description": "value"
                },
                {
                  "Name": "plist",
                  "Description": "value"
                },
                {
                  "Name": "plist-multi-file",
                  "Description": "value"
                },
                {
                  "Name": "plist-html",
                  "Description": "value"
                },
                {
                  "Name": "sarif",
                  "Description": "value"
                },
                {
                  "Name": "text",
                  "Description": "value"
                }
              ]
            }
          ]
        },
        {
          "Name": "--analyze",
          "Description": "Run the static analyzer",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-arcmt-migrate-emit-errors",
          "Description": "Emit ARC errors even if the migrator can fix them",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-arcmt-migrate-report-output",
          "Description": "Output path for the plist report",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "B",
          "Description": "Add \u003Cdir\u003E to search path for binaries and object files used implicitly",
          "Type": "Flag",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "dir",
                  "Description": "dir",
                  "Type": "Directory"
                }
              ]
            }
          ]
        },
        {
          "Name": "-CC",
          "Description": "Include comments from within macros in preprocessed output",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-cl-denorms-are-zero",
          "Description": "OpenCL only. Allow denormals to be flushed to zero",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-cl-fast-relaxed-math",
          "Description": "OpenCL only. Sets -cl-finite-math-only and -cl-unsafe-math-optimizations, and defines __FAST_RELAXED_MATH__",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-cl-finite-math-only",
          "Description": "OpenCL only. Allow floating-point optimizations that assume arguments and results are not NaNs or \u002B-Inf",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-cl-fp32-correctly-rounded-divide-sqrt",
          "Description": "OpenCL only. Specify that single precision floating-point divide and sqrt used in the program source are correctly rounded",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-cl-kernel-arg-info",
          "Description": "OpenCL only. Generate kernel argument metadata",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-cl-mad-enable",
          "Description": "OpenCL only. Allow use of less precise MAD computations in the generated binary",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-cl-no-signed-zeros",
          "Description": "OpenCL only. Allow use of less precise no signed zeros computations in the generated binary",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-cl-opt-disable",
          "Description": "OpenCL only. This option disables all optimizations. By default optimizations are enabled",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-cl-single-precision-constant",
          "Description": "OpenCL only. Treat double precision floating-point constant as single precision constant",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-cl-std",
          "Description": "OpenCL language standard to compile for",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-cl-strict-aliasing",
          "Description": "OpenCL only. This option is added for compatibility with OpenCL 1.0",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-cl-uniform-work-group-size",
          "Description": "OpenCL only. Defines that the global work-size be a multiple of the work-group size specified to clEnqueueNDRangeKernel",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-cl-unsafe-math-optimizations",
          "Description": "OpenCL only. Allow unsafe floating-point optimizations",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--config",
          "Description": "Specifies configuration file",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "--cuda-compile-host-device",
          "Description": "Compile CUDA code for both host and device (default)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--cuda-device-only",
          "Description": "Compile CUDA code for device only",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--cuda-host-only",
          "Description": "Compile CUDA code for host only",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--cuda-include-ptx",
          "Description": "Include PTX for the following GPU architecture (e.g. sm_35) or \u0027all\u0027. May be specified more than once",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "--cuda-noopt-device-debug",
          "Description": "Enable device-side debug info generation. Disables ptxas optimizations",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--cuda-path-ignore-env",
          "Description": "Ignore environment variables to detect CUDA installation",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--cuda-path",
          "Description": "CUDA installation path",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "Directory"
                }
              ]
            }
          ]
        },
        {
          "Name": "-cxx-isystem",
          "Description": "Add directory to the C\u002B\u002B SYSTEM include search path",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "directory",
                  "Description": "directory",
                  "Type": "Directory"
                }
              ]
            }
          ]
        },
        {
          "Name": "C",
          "Description": "Include comments in preprocessed output",
          "Type": "Flag",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "c",
          "Description": "Only run preprocess, compile, and assemble steps",
          "Type": "Flag",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-dD",
          "Description": "Print macro definitions in -E mode in addition to normal output",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-dependency-dot",
          "Description": "Filename to write DOT-formatted header dependencies to",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "FileSystemEntry"
                }
              ]
            }
          ]
        },
        {
          "Name": "-dependency-file",
          "Description": "Filename (or -) to write dependency output to",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "FileSystemEntry"
                },
                {
                  "Name": "-",
                  "Description": "value"
                }
              ]
            }
          ]
        },
        {
          "Name": "-dI",
          "Description": "Print include directives in -E mode in addition to normal output",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-dM",
          "Description": "Print macro definitions in -E mode instead of normal output",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "D",
          "Description": "Define \u003Cmacro\u003E to \u003Cvalue\u003E (or 1 if \u003Cvalue\u003E omitted)",
          "Type": "Flag",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "macro\u003E=\u003Cvalue",
                  "Description": "macro\u003E=\u003Cvalue",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-emit-ast",
          "Description": "Emit Clang AST files for source inputs",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-emit-interface-stubs",
          "Description": "Generate Interface Stub Files",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-emit-llvm",
          "Description": "Use the LLVM representation for assembler and object files",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-emit-merged-ifs",
          "Description": "Generate Interface Stub Files, emit merged text not binary",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--emit-static-lib",
          "Description": "Enable linker job to emit a static library",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-enable-trivial-auto-var-init-zero-knowing-it-will-be-removed-from-clang",
          "Description": "Trivial automatic variable initialization to zero is only here for benchmarks, it\u0027ll eventually be removed, and I\u0027m OK with that because I\u0027m only using it to benchmark",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "E",
          "Description": "Only run the preprocessor",
          "Type": "Flag",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fAAPCSBitfieldLoad",
          "Description": "Follows the AAPCS standard that all volatile bit-field write generates at least one load. (ARM only)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-faddrsig",
          "Description": "Emit an address-significance table",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-faligned-allocation",
          "Description": "Enable C\u002B\u002B17 aligned allocation functions",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fallow-editor-placeholders",
          "Description": "Treat editor placeholders as valid source code",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fansi-escape-codes",
          "Description": "Use ANSI escape codes for diagnostics",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fapinotes-cache-path",
          "Description": "Does nothing; API notes are no longer cached separately from modules",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "directory",
                  "Description": "directory",
                  "Type": "Directory"
                }
              ]
            }
          ]
        },
        {
          "Name": "-fapinotes-modules",
          "Description": "Enable module-based external API notes support",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fapinotes-swift-version",
          "Description": "Specify the Swift version to use when filtering API notes",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "version",
                  "Description": "version",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-fapinotes",
          "Description": "Enable external API notes support",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fapple-kext",
          "Description": "Use Apple\u0027s kernel extensions ABI",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fapple-link-rtlib",
          "Description": "Force linking the clang builtins runtime library",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fapple-pragma-pack",
          "Description": "Enable Apple gcc-compatible #pragma pack handling",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fapplication-extension",
          "Description": "Restrict",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fasm-blocks",
          "Description": "",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fautolink",
          "Description": "",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fbasic-block-sections",
          "Description": "Place each function\u0027s basic blocks in unique sections (ELF Only) : all | labels | none | list=\u003Cfile\u003E",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                },
                {
                  "Name": "all",
                  "Description": "value"
                },
                {
                  "Name": "labels",
                  "Description": "value"
                },
                {
                  "Name": "none",
                  "Description": "value"
                }
              ]
            }
          ]
        },
        {
          "Name": "-fblocks",
          "Description": "Enable the \u0027blocks\u0027 language feature",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fborland-extensions",
          "Description": "Accept non-standard constructs supported by the Borland compiler",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fbranch-target-identification",
          "Description": "Emit branch target identification instructions for indirect branch destinations",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fbuild-session-file",
          "Description": "Use the last modification time of \u003Cfile\u003E as the build session timestamp",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "file",
                  "Description": "file",
                  "Type": "FileSystemEntry"
                }
              ]
            }
          ]
        },
        {
          "Name": "-fbuild-session-timestamp",
          "Description": "Time when the current build session started",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "time since Epoch in seconds",
                  "Description": "time since Epoch in seconds",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-fbuiltin-module-map",
          "Description": "Load the clang builtins module map file",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fc\u002B\u002B-static-destructors",
          "Description": "",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fcall-saved-x10",
          "Description": "Make the x10 register call-saved (AArch64 only)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fcall-saved-x11",
          "Description": "Make the x11 register call-saved (AArch64 only)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fcall-saved-x12",
          "Description": "Make the x12 register call-saved (AArch64 only)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fcall-saved-x13",
          "Description": "Make the x13 register call-saved (AArch64 only)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fcall-saved-x14",
          "Description": "Make the x14 register call-saved (AArch64 only)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fcall-saved-x15",
          "Description": "Make the x15 register call-saved (AArch64 only)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fcall-saved-x18",
          "Description": "Make the x18 register call-saved (AArch64 only)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fcall-saved-x8",
          "Description": "Make the x8 register call-saved (AArch64 only)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fcall-saved-x9",
          "Description": "Make the x9 register call-saved (AArch64 only)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fcaret-diagnostics",
          "Description": "",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fcf-protection",
          "Description": "Enable cf-protection in \u0027full\u0027 mode",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ],
              "Optional": true
            }
          ]
        },
        {
          "Name": "-fchar8_t",
          "Description": "Enable C\u002B\u002B builtin type char8_t",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fclang-abi-compat",
          "Description": "Attempt to match the ABI of Clang \u003Cversion\u003E",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "version",
                  "Description": "version",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-fcolor-diagnostics",
          "Description": "Enable colors in diagnostics",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fcomment-block-commands",
          "Description": "Treat each comma separated argument in \u003Carg\u003E as a documentation comment block command",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "arg",
                  "Description": "arg",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-fcommon",
          "Description": "Place uninitialized global variables in a common block",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fcomplete-member-pointers",
          "Description": "Require member pointer base types to be complete if they would be significant under the Microsoft ABI",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fconvergent-functions",
          "Description": "Assume functions may be convergent",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fcoroutines-ts",
          "Description": "Enable support for the C\u002B\u002B Coroutines TS",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fcoverage-mapping",
          "Description": "Generate coverage mapping to enable code coverage analysis",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fcs-profile-generate",
          "Description": "Generate instrumented code to collect context sensitive execution counts into \u003Cdirectory\u003E/default.profraw (overridden by LLVM_PROFILE_FILE env var)",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "directory",
                  "Description": "directory",
                  "Type": "Directory"
                }
              ],
              "Optional": true
            }
          ]
        },
        {
          "Name": "-fcuda-approx-transcendentals",
          "Description": "Use approximate transcendental functions",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fcuda-flush-denormals-to-zero",
          "Description": "Flush denormal floating point values to zero in CUDA device mode",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fcuda-short-ptr",
          "Description": "Use 32-bit pointers for accessing const/local/shared address spaces",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fcxx-exceptions",
          "Description": "Enable C\u002B\u002B exceptions",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fdata-sections",
          "Description": "Place each data in its own section",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fdebug-compilation-dir",
          "Description": "The compilation directory to embed in the debug info",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "Directory"
                }
              ]
            }
          ]
        },
        {
          "Name": "-fdebug-default-version",
          "Description": "Default DWARF version to use, if a -g option caused DWARF debug info to be produced",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-fdebug-info-for-profiling",
          "Description": "Emit extra debug info to make sample profile more accurate",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fdebug-macro",
          "Description": "Emit macro debug information",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fdebug-prefix-map",
          "Description": "Remap file source paths in debug info",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-fdebug-ranges-base-address",
          "Description": "Use DWARF base address selection entries in .debug_ranges",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fdebug-types-section",
          "Description": "Place debug types in their own section (ELF Only)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fdeclspec",
          "Description": "Allow __declspec as a keyword",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fdelayed-template-parsing",
          "Description": "Parse templated function definitions at the end of the translation unit",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fdelete-null-pointer-checks",
          "Description": "Treat usage of null pointers as undefined behavior (default)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fdiagnostics-absolute-paths",
          "Description": "Print absolute paths in diagnostics",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fdiagnostics-hotness-threshold",
          "Description": "Prevent optimization remarks from being output if they do not have at least this profile count",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "number",
                  "Description": "number",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-fdiagnostics-parseable-fixits",
          "Description": "Print fix-its in machine parseable form",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fdiagnostics-print-source-range-info",
          "Description": "Print source range spans in numeric form",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fdiagnostics-show-hotness",
          "Description": "Enable profile hotness information in diagnostic line",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fdiagnostics-show-note-include-stack",
          "Description": "Display include stacks for diagnostic notes",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fdiagnostics-show-option",
          "Description": "Print option name with mappable diagnostics",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fdiagnostics-show-template-tree",
          "Description": "Print a template comparison tree for differing templates",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fdigraphs",
          "Description": "Enable alternative token representations \u0027\u003C:\u0027, \u0027:\u003E\u0027, \u0027\u003C%\u0027, \u0027%\u003E\u0027, \u0027%:\u0027, \u0027%:%:\u0027 (default)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fdiscard-value-names",
          "Description": "Discard value names in LLVM IR",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fdollars-in-identifiers",
          "Description": "Allow \u0027$\u0027 in identifiers",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fdouble-square-bracket-attributes",
          "Description": "Enable \u0027[[]]\u0027 attributes in all C and C\u002B\u002B language modes",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fdwarf-directory-asm",
          "Description": "",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fdwarf-exceptions",
          "Description": "Use DWARF style exceptions",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fembed-bitcode-marker",
          "Description": "Embed placeholder LLVM IR data as a marker",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fembed-bitcode",
          "Description": "Embed LLVM bitcode (option: off, all, bitcode, marker)",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "option",
                  "Description": "option",
                  "Type": "String"
                }
              ],
              "Optional": true
            }
          ]
        },
        {
          "Name": "-femit-all-decls",
          "Description": "Emit all declarations, even if unused",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-femulated-tls",
          "Description": "Use emutls functions to access thread_local variables",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fenable-globaldse",
          "Description": "Enable experimental global dead store elimination",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fenable-matrix",
          "Description": "Enable matrix data type and related builtin functions",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fexceptions",
          "Description": "Enable support for exception handling",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fexperimental-new-constant-interpreter",
          "Description": "Enable the experimental new constant interpreter",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fexperimental-new-pass-manager",
          "Description": "Enables an experimental new pass manager in LLVM",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fexperimental-relative-c\u002B\u002B-abi-vtables",
          "Description": "Use the experimental C\u002B\u002B class ABI for classes with virtual tables",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fexperimental-strict-floating-point",
          "Description": "Enables experimental strict floating point in LLVM",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-ffast-math",
          "Description": "Allow aggressive, lossy floating-point optimizations",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-ffile-prefix-map",
          "Description": "Remap file source paths in debug info and predefined preprocessor macros",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-ffine-grained-bitfield-accesses",
          "Description": "Use separate accesses for consecutive bitfield runs with legal widths and alignments",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-ffixed-point",
          "Description": "Enable fixed point types",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-ffixed-r19",
          "Description": "Reserve register r19 (Hexagon only)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-ffixed-r9",
          "Description": "Reserve the r9 register (ARM only)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-ffixed-x10",
          "Description": "Reserve the x10 register (AArch64/RISC-V only)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-ffixed-x11",
          "Description": "Reserve the x11 register (AArch64/RISC-V only)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-ffixed-x12",
          "Description": "Reserve the x12 register (AArch64/RISC-V only)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-ffixed-x13",
          "Description": "Reserve the x13 register (AArch64/RISC-V only)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-ffixed-x14",
          "Description": "Reserve the x14 register (AArch64/RISC-V only)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-ffixed-x15",
          "Description": "Reserve the x15 register (AArch64/RISC-V only)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-ffixed-x16",
          "Description": "Reserve the x16 register (AArch64/RISC-V only)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-ffixed-x17",
          "Description": "Reserve the x17 register (AArch64/RISC-V only)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-ffixed-x18",
          "Description": "Reserve the x18 register (AArch64/RISC-V only)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-ffixed-x19",
          "Description": "Reserve the x19 register (AArch64/RISC-V only)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-ffixed-x1",
          "Description": "Reserve the x1 register (AArch64/RISC-V only)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-ffixed-x20",
          "Description": "Reserve the x20 register (AArch64/RISC-V only)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-ffixed-x21",
          "Description": "Reserve the x21 register (AArch64/RISC-V only)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-ffixed-x22",
          "Description": "Reserve the x22 register (AArch64/RISC-V only)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-ffixed-x23",
          "Description": "Reserve the x23 register (AArch64/RISC-V only)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-ffixed-x24",
          "Description": "Reserve the x24 register (AArch64/RISC-V only)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-ffixed-x25",
          "Description": "Reserve the x25 register (AArch64/RISC-V only)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-ffixed-x26",
          "Description": "Reserve the x26 register (AArch64/RISC-V only)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-ffixed-x27",
          "Description": "Reserve the x27 register (AArch64/RISC-V only)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-ffixed-x28",
          "Description": "Reserve the x28 register (AArch64/RISC-V only)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-ffixed-x29",
          "Description": "Reserve the x29 register (AArch64/RISC-V only)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-ffixed-x2",
          "Description": "Reserve the x2 register (AArch64/RISC-V only)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-ffixed-x30",
          "Description": "Reserve the x30 register (AArch64/RISC-V only)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-ffixed-x31",
          "Description": "Reserve the x31 register (AArch64/RISC-V only)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-ffixed-x3",
          "Description": "Reserve the x3 register (AArch64/RISC-V only)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-ffixed-x4",
          "Description": "Reserve the x4 register (AArch64/RISC-V only)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-ffixed-x5",
          "Description": "Reserve the x5 register (AArch64/RISC-V only)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-ffixed-x6",
          "Description": "Reserve the x6 register (AArch64/RISC-V only)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-ffixed-x7",
          "Description": "Reserve the x7 register (AArch64/RISC-V only)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-ffixed-x8",
          "Description": "Reserve the x8 register (AArch64/RISC-V only)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-ffixed-x9",
          "Description": "Reserve the x9 register (AArch64/RISC-V only)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fforce-dwarf-frame",
          "Description": "Always emit a debug frame section",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fforce-emit-vtables",
          "Description": "Emits more virtual tables to improve devirtualization",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fforce-enable-int128",
          "Description": "Enable support for int128_t type",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-ffp-contract",
          "Description": "Form fused FP ops (e.g. FMAs): fast (everywhere) | on (according to FP_CONTRACT pragma) | off (never fuse). Default is \u0027fast\u0027 for CUDA/HIP and \u0027on\u0027 otherwise",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                },
                {
                  "Name": "fast",
                  "Description": "value"
                },
                {
                  "Name": "on",
                  "Description": "value"
                },
                {
                  "Name": "off",
                  "Description": "value"
                }
              ]
            }
          ]
        },
        {
          "Name": "-ffp-exception-behavior",
          "Description": "Specifies the exception behavior of floating-point operations",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-ffp-model",
          "Description": "Controls the semantics of floating-point calculations",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-ffreestanding",
          "Description": "Assert that the compilation takes place in a freestanding environment",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-ffunction-sections",
          "Description": "Place each function in its own section",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fglobal-isel",
          "Description": "Enables the global instruction selector",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fgnu-inline-asm",
          "Description": "",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fgnu-keywords",
          "Description": "Allow GNU-extension keywords regardless of language standard",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fgnu-runtime",
          "Description": "Generate output compatible with the standard GNU Objective-C runtime",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fgnu89-inline",
          "Description": "Use the gnu89 inline semantics",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fgnuc-version",
          "Description": "Sets various macros to claim compatibility with the given GCC version",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-fgpu-allow-device-init",
          "Description": "Allow",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fgpu-rdc",
          "Description": "Generate relocatable device code, also known as separate compilation mode",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fhip-new-launch-api",
          "Description": "Use new kernel launching API for HIP",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fignore-exceptions",
          "Description": "Enable support for ignoring exception handling constructs",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fimplicit-module-maps",
          "Description": "Implicitly search the file system for module map files",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-finline-functions",
          "Description": "Inline suitable functions",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-finline-hint-functions",
          "Description": "Inline",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-finstrument-function-entry-bare",
          "Description": "Instrument function entry only, after inlining, without arguments to the instrumentation call",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-finstrument-functions-after-inlining",
          "Description": "Like -finstrument-functions, but insert the calls after inlining",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-finstrument-functions",
          "Description": "Generate calls to instrument function entry and exit",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fintegrated-as",
          "Description": "Enable the integrated assembler",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fintegrated-cc1",
          "Description": "Run cc1 in-process",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fjump-tables",
          "Description": "Use jump tables for lowering switches",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fkeep-static-consts",
          "Description": "Keep static const variables if unused",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-flax-vector-conversions",
          "Description": "Enable implicit vector bit-casts",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-flto-jobs",
          "Description": "Controls the backend parallelism of -flto=thin (default of 0 means the number of threads will be derived from the number of CPUs detected)",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-flto",
          "Description": "Set LTO mode to either \u0027full\u0027 or \u0027thin\u0027",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                },
                {
                  "Name": "full",
                  "Description": "value"
                },
                {
                  "Name": "thin",
                  "Description": "value"
                }
              ],
              "Optional": true
            }
          ]
        },
        {
          "Name": "-fmacro-prefix-map",
          "Description": "Remap file source paths in predefined preprocessor macros",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-fmath-errno",
          "Description": "Require math functions to indicate errors by setting errno",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fmax-tokens",
          "Description": "Max total number of preprocessed tokens for -Wmax-tokens",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-fmax-type-align",
          "Description": "Specify the maximum alignment to enforce on pointers lacking an explicit alignment",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-fmerge-all-constants",
          "Description": "Allow merging of constants",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fmessage-length",
          "Description": "Format message diagnostics so that they fit within N columns",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-fmodule-file",
          "Description": "Specify the mapping of module name to precompiled module file, or load a module file if name is omitted",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "\u003Cname",
                  "Description": "\u003Cname",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-fmodule-map-file",
          "Description": "Load this module map file",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "file",
                  "Description": "file",
                  "Type": "FileSystemEntry"
                }
              ]
            }
          ]
        },
        {
          "Name": "-fmodule-name",
          "Description": "Specify the name of the module to build",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "name",
                  "Description": "name",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-fmodules-cache-path",
          "Description": "Specify the module cache path",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "directory",
                  "Description": "directory",
                  "Type": "Directory"
                }
              ]
            }
          ]
        },
        {
          "Name": "-fmodules-decluse",
          "Description": "Require declaration of modules used within a module",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fmodules-disable-diagnostic-validation",
          "Description": "Disable validation of the diagnostic options when loading the module",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fmodules-ignore-macro",
          "Description": "Ignore the definition of the given macro when building and loading modules",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-fmodules-prune-after",
          "Description": "Specify the interval (in seconds) after which a module file will be considered unused",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "seconds",
                  "Description": "seconds",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-fmodules-prune-interval",
          "Description": "Specify the interval (in seconds) between attempts to prune the module cache",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "seconds",
                  "Description": "seconds",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-fmodules-search-all",
          "Description": "Search even non-imported modules to resolve references",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fmodules-strict-decluse",
          "Description": "Like -fmodules-decluse but requires all headers to be in modules",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fmodules-ts",
          "Description": "Enable support for the C\u002B\u002B Modules TS",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fmodules-user-build-path",
          "Description": "Specify the module user build path",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "directory",
                  "Description": "directory",
                  "Type": "Directory"
                }
              ]
            }
          ]
        },
        {
          "Name": "-fmodules-validate-input-files-content",
          "Description": "Validate PCM input files based on content if mtime differs",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fmodules-validate-once-per-build-session",
          "Description": "Don\u0027t verify input files for the modules if the module has been successfully validated or loaded during this build session",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fmodules-validate-system-headers",
          "Description": "Validate the system headers that a module depends on when loading the module",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fmodules",
          "Description": "Enable the \u0027modules\u0027 language feature",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fms-compatibility-version",
          "Description": "Dot-separated value representing the Microsoft compiler version number to report in _MSC_VER (0 = don\u0027t define it (default))",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-fms-compatibility",
          "Description": "Enable full Microsoft Visual C\u002B\u002B compatibility",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fms-extensions",
          "Description": "Accept some non-standard constructs supported by the Microsoft compiler",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fmsc-version",
          "Description": "Microsoft compiler version number to report in _MSC_VER (0 = don\u0027t define it (default))",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-fnew-alignment",
          "Description": "Specifies the largest alignment guaranteed by \u0027::operator new(size_t)\u0027",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "align",
                  "Description": "align",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-fno-access-control",
          "Description": "",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-addrsig",
          "Description": "Don\u0027t emit an address-significance table",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-allow-editor-placeholders",
          "Description": "",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-apinotes-modules",
          "Description": "Disable module-based external API notes support",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-apinotes",
          "Description": "Disable external API notes support",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-asm-blocks",
          "Description": "",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-assume-sane-operator-new",
          "Description": "Don\u0027t assume that C\u002B\u002B\u0027s global operator new can\u0027t alias any pointer",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-autolink",
          "Description": "Disable generation of linker directives for automatic library linking",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-blocks",
          "Description": "",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-builtin",
          "Description": "Disable implicit builtin knowledge of functions",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-fno-c\u002B\u002B-static-destructors",
          "Description": "Disable C\u002B\u002B static destructor registration",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-caret-diagnostics",
          "Description": "",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-char8_t",
          "Description": "Disable C\u002B\u002B builtin type char8_t",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-color-diagnostics",
          "Description": "Disable colors in diagnostics",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-common",
          "Description": "Compile common globals like normal definitions",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-complete-member-pointers",
          "Description": "Do not require member pointer base types to be complete if they would be significant under the Microsoft ABI",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-constant-cfstrings",
          "Description": "Disable",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-constant-nsarray-literals",
          "Description": "Disable creation of CodeFoundation-type constant initializer \u0060NSArray\u0060s from array literals",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-constant-nsdictionary-literals",
          "Description": "Disable creation of CodeFoundation-type constant initializer \u0060NSDictionary\u0060s from dictionary literals",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-constant-nsnumber-literals",
          "Description": "Disable creation of CodeFoundation-type constant initializer \u0060NSNumber\u0060s from number literals",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-coroutines-ts",
          "Description": "",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-coverage-mapping",
          "Description": "Disable code coverage analysis",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-crash-diagnostics",
          "Description": "Disable auto-generation of preprocessed source files and a script for reproduction during a clang crash",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-cuda-approx-transcendentals",
          "Description": "Don\u0027t use approximate transcendental functions",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-cuda-short-ptr",
          "Description": "",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-cxx-exceptions",
          "Description": "",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-data-sections",
          "Description": "",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-debug-info-for-profiling",
          "Description": "",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-debug-macro",
          "Description": "Do not emit macro debug information",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-debug-ranges-base-address",
          "Description": "",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-declspec",
          "Description": "Disallow __declspec as a keyword",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-delayed-template-parsing",
          "Description": "Disable delayed template parsing",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-delete-null-pointer-checks",
          "Description": "Do not treat usage of null pointers as undefined behavior",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-diagnostics-fixit-info",
          "Description": "Do not include fixit information in diagnostics",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-digraphs",
          "Description": "Disallow alternative token representations \u0027\u003C:\u0027, \u0027:\u003E\u0027, \u0027\u003C%\u0027, \u0027%\u003E\u0027, \u0027%:\u0027, \u0027%:%:\u0027",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-discard-value-names",
          "Description": "Do not discard value names in LLVM IR",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-dollars-in-identifiers",
          "Description": "Disallow \u0027$\u0027 in identifiers",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-double-square-bracket-attributes",
          "Description": "Disable \u0027[[]]\u0027 attributes in all C and C\u002B\u002B language modes",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-dwarf-directory-asm",
          "Description": "",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-elide-constructors",
          "Description": "Disable",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-elide-type",
          "Description": "Do not elide types when printing diagnostics",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-exceptions",
          "Description": "Disable support for exception handling",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-experimental-new-pass-manager",
          "Description": "Disables an experimental new pass manager in LLVM",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-experimental-relative-c\u002B\u002B-abi-vtables",
          "Description": "Do not use the experimental C\u002B\u002B class ABI for classes with virtual tables",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-fast-math",
          "Description": "",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-fine-grained-bitfield-accesses",
          "Description": "Use large-integer access for consecutive bitfield runs",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-fixed-point",
          "Description": "Disable fixed point types",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-force-dwarf-frame",
          "Description": "",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-force-emit-vtables",
          "Description": "",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-force-enable-int128",
          "Description": "Disable support for int128_t type",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-function-sections",
          "Description": "",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-global-isel",
          "Description": "Disables the global instruction selector",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-gnu-inline-asm",
          "Description": "Disable GNU style inline asm",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-gnu89-inline",
          "Description": "",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-gpu-allow-device-init",
          "Description": "Don\u0027t allow device side init function in HIP",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-gpu-rdc",
          "Description": "",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-hip-new-launch-api",
          "Description": "Don\u0027t",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-integrated-as",
          "Description": "Disable the integrated assembler",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-integrated-cc1",
          "Description": "Spawn a separate process for each cc1",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-jump-tables",
          "Description": "Do not use jump tables for lowering switches",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-keep-static-consts",
          "Description": "Don\u0027t",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-lto",
          "Description": "Disable LTO mode (default)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-math-errno",
          "Description": "",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-merge-all-constants",
          "Description": "Disallow merging of constants",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-no-access-control",
          "Description": "Disable C\u002B\u002B access control",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-objc-infer-related-result-type",
          "Description": "Do not infer Objective-C related result type based on method family",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-operator-names",
          "Description": "Do not treat C\u002B\u002B operator name keywords as synonyms for operators",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-pch-codegen",
          "Description": "Do not generate code for uses of this PCH that assumes an explicit object file will be built for the PCH",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-pch-debuginfo",
          "Description": "Do not generate debug info for types in an object file built from this PCH and do not generate them elsewhere",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-plt",
          "Description": "Use GOT indirection instead of PLT to make external function calls (x86 only)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-preserve-as-comments",
          "Description": "Do not preserve comments in inline assembly",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-profile-generate",
          "Description": "Disable generation of profile instrumentation",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-profile-instr-generate",
          "Description": "Disable generation of profile instrumentation",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-profile-instr-use",
          "Description": "Disable using instrumentation data for profile-guided optimization",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-ptrauth-abi-version",
          "Description": "Disable Pointer Authentication ABI versioning",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-ptrauth-kernel-abi-version",
          "Description": "Disable Pointer Authentication kernel ABI versioning",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-register-global-dtors-with-atexit",
          "Description": "Don\u0027t use atexit or __cxa_atexit to register global destructors",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-reroll-loops",
          "Description": "",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-rewrite-imports",
          "Description": "",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-rewrite-includes",
          "Description": "",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-ropi",
          "Description": "",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-rtlib-add-rpath",
          "Description": "Do not add -rpath with architecture-specific resource directory to the linker flags",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-rtti-data",
          "Description": "Disable generation of RTTI data",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-rtti",
          "Description": "Disable generation of rtti information",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-rwpi",
          "Description": "",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-sanitize-address-poison-custom-array-cookie",
          "Description": "Disable poisoning array cookies when using custom operator new[] in AddressSanitizer",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-sanitize-address-use-after-scope",
          "Description": "Disable use-after-scope detection in AddressSanitizer",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-sanitize-address-use-odr-indicator",
          "Description": "Disable ODR indicator globals",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-sanitize-blacklist",
          "Description": "Don\u0027t",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-sanitize-cfi-canonical-jump-tables",
          "Description": "Do not make the jump table addresses canonical in the symbol table",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-sanitize-cfi-cross-dso",
          "Description": "Disable control flow integrity (CFI) checks for cross-DSO calls",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-sanitize-coverage",
          "Description": "Disable specified features of coverage instrumentation for Sanitizers",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-fno-sanitize-memory-track-origins",
          "Description": "Disable origins tracking in MemorySanitizer",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-sanitize-memory-use-after-dtor",
          "Description": "Disable use-after-destroy detection in MemorySanitizer",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-sanitize-recover",
          "Description": "Disable recovery for specified sanitizers",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-fno-sanitize-stats",
          "Description": "Disable sanitizer statistics gathering",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-sanitize-thread-atomics",
          "Description": "Disable atomic operations instrumentation in ThreadSanitizer",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-sanitize-thread-func-entry-exit",
          "Description": "Disable function entry/exit instrumentation in ThreadSanitizer",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-sanitize-thread-memory-access",
          "Description": "Disable memory access instrumentation in ThreadSanitizer",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-sanitize-trap",
          "Description": "Disable trapping for specified sanitizers",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ],
              "Optional": true
            }
          ]
        },
        {
          "Name": "-fno-short-wchar",
          "Description": "Force wchar_t to be an unsigned int",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-show-column",
          "Description": "Do not include column number on diagnostics",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-show-source-location",
          "Description": "Do not include source location information with diagnostics",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-signed-char",
          "Description": "Char is unsigned",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-signed-zeros",
          "Description": "Allow optimizations that ignore the sign of floating point zeros",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-spell-checking",
          "Description": "Disable spell-checking",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-split-lto-unit",
          "Description": "",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-stack-check",
          "Description": "Disable stack checking",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-stack-clash-protection",
          "Description": "Disable stack clash protection",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-stack-protector",
          "Description": "Disable the use of stack protectors",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-stack-size-section",
          "Description": "",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-standalone-debug",
          "Description": "Limit debug information produced to reduce size of debug binary",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-strict-float-cast-overflow",
          "Description": "Relax language rules and try to match the behavior of the target\u0027s native float-to-int conversion instructions",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-strict-return",
          "Description": "Don\u0027t treat control flow paths that fall off the end of a non-void function as unreachable",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-sycl",
          "Description": "Disable SYCL kernels compilation for device",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-temp-file",
          "Description": "Directly create compilation output files. This may lead to incorrect incremental builds if the compiler crashes",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-threadsafe-statics",
          "Description": "Do",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-trigraphs",
          "Description": "Do not process trigraph sequences",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-unique-basic-block-section-names",
          "Description": "",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-unique-internal-linkage-names",
          "Description": "",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-unique-section-names",
          "Description": "Don\u0027t use unique names for text and data sections",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-unroll-loops",
          "Description": "Turn off loop unroller",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-use-cxa-atexit",
          "Description": "Don\u0027t use __cxa_atexit for calling destructors",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-use-init-array",
          "Description": "Use .ctors/.dtors instead of .init_array/.fini_array",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-use-line-directives",
          "Description": "",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-virtual-function-elimination",
          "Description": "",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-visibility-inlines-hidden-static-local-var",
          "Description": "Disables -fvisibility-inlines-hidden-static-local-var (this is the default on non-darwin targets)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-whole-program-vtables",
          "Description": "",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-xray-always-emit-customevents",
          "Description": "",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-xray-always-emit-typedevents",
          "Description": "",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-xray-function-index",
          "Description": "Omit function index section at the expense of single-function patching performance",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-xray-ignore-loops",
          "Description": "",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-xray-instrument",
          "Description": "",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-zero-initialized-in-bss",
          "Description": "Don\u0027t place zero initialized data in BSS",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fno-zvector",
          "Description": "",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fobjc-arc-exceptions",
          "Description": "Use EH-safe code when synthesizing retains and releases in -fobjc-arc",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fobjc-arc",
          "Description": "Synthesize retain and release calls for Objective-C pointers",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fobjc-exceptions",
          "Description": "Enable Objective-C exceptions",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fobjc-relative-method-lists",
          "Description": "Enable relative method lists",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fobjc-runtime",
          "Description": "Specify the target Objective-C runtime kind and version",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-fobjc-weak",
          "Description": "Enable ARC-style weak references in Objective-C",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fopenmp-simd",
          "Description": "Emit OpenMP code only for SIMD-based constructs",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fopenmp-targets",
          "Description": "Specify comma-separated list of triples OpenMP offloading targets to be supported",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-fopenmp",
          "Description": "Parse OpenMP pragmas and generate parallel code",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-foptimization-record-file",
          "Description": "Specify the output name of the file containing the optimization remarks. Implies -fsave-optimization-record. On Darwin platforms, this cannot be used with multiple -arch \u003Carch\u003E options",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "file",
                  "Description": "file",
                  "Type": "FileSystemEntry"
                }
              ]
            }
          ]
        },
        {
          "Name": "-foptimization-record-passes",
          "Description": "Only include passes which match a specified regular expression in the generated optimization record (by default, include all passes)",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "regex",
                  "Description": "regex",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-forder-file-instrumentation",
          "Description": "Generate instrumented code to collect order file into default.profraw file (overridden by \u0027=\u0027 form of option or LLVM_PROFILE_FILE env var)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fpack-struct",
          "Description": "Specify the default maximum struct packing alignment",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-fpascal-strings",
          "Description": "Recognize and construct Pascal-style string literals",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fpass-plugin",
          "Description": "Load pass plugin from a dynamic shared object file (only with new pass manager)",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "dsopath",
                  "Description": "dsopath",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-fpatchable-function-entry",
          "Description": "Generate M NOPs before function entry and N-M NOPs after function entry",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "N,M",
                  "Description": "N,M",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-fpcc-struct-return",
          "Description": "Override the default ABI to return all structs on the stack",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fpch-codegen",
          "Description": "Generate code for uses of this PCH that assumes an explicit object file will be built for the PCH",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fpch-debuginfo",
          "Description": "Generate debug info for types in an object file built from this PCH and do not generate them elsewhere",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fpch-instantiate-templates",
          "Description": "Instantiate templates already while building a PCH",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fpch-validate-input-files-content",
          "Description": "Validate PCH input files based on content if mtime differs",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fplt",
          "Description": "",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fplugin",
          "Description": "Load the named plugin (dynamic shared object)",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "dsopath",
                  "Description": "dsopath",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-fprebuilt-module-path",
          "Description": "Specify the prebuilt module path",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "directory",
                  "Description": "directory",
                  "Type": "Directory"
                }
              ]
            }
          ]
        },
        {
          "Name": "-fpreserve-as-comments",
          "Description": "",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fprofile-exclude-files",
          "Description": "Instrument only functions from files where names don\u0027t match all the regexes separated by a semi-colon",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-fprofile-filter-files",
          "Description": "Instrument only functions from files where names match any regex separated by a semi-colon",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-fprofile-generate",
          "Description": "Generate instrumented code to collect execution counts into \u003Cdirectory\u003E/default.profraw (overridden by LLVM_PROFILE_FILE env var)",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "directory",
                  "Description": "directory",
                  "Type": "Directory"
                }
              ],
              "Optional": true
            }
          ]
        },
        {
          "Name": "-fprofile-instr-generate",
          "Description": "Generate instrumented code to collect execution counts into \u003Cfile\u003E (overridden by LLVM_PROFILE_FILE env var)",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "file",
                  "Description": "file",
                  "Type": "FileSystemEntry"
                }
              ],
              "Optional": true
            }
          ]
        },
        {
          "Name": "-fprofile-instr-use",
          "Description": "Use instrumentation data for profile-guided optimization",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-fprofile-remapping-file",
          "Description": "Use the remappings described in \u003Cfile\u003E to match the profile data against names in the program",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "file",
                  "Description": "file",
                  "Type": "FileSystemEntry"
                }
              ]
            }
          ]
        },
        {
          "Name": "-fprofile-sample-accurate",
          "Description": "Specifies that the sample profile is accurate",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fprofile-sample-use",
          "Description": "Enable sample-based profile guided optimizations",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-fprofile-use",
          "Description": "Use instrumentation data for profile-guided optimization. If pathname is a directory, it reads from \u003Cpathname\u003E/default.profdata. Otherwise, it reads from file \u003Cpathname\u003E",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "pathname",
                  "Description": "pathname",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-fptrauth-abi-version",
          "Description": "Pointer Authentication ABI version",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-fptrauth-auth-traps",
          "Description": "Enable traps on authentication failures",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fptrauth-block-descriptor-pointers",
          "Description": "Enable signing block descriptors",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fptrauth-calls",
          "Description": "Enable signing and authentication of all indirect calls",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fptrauth-function-pointer-type-discrimination",
          "Description": "Enabling type discrimination on C function pointers",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fptrauth-indirect-gotos",
          "Description": "Enable signing and authentication of indirect goto targets",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fptrauth-intrinsics",
          "Description": "Enable pointer-authentication intrinsics",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fptrauth-kernel-abi-version",
          "Description": "Enable Pointer Authentication kernel ABI version",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fptrauth-objc-isa-masking",
          "Description": "Pre- and post-authentication masking mode of objective-c isa pointers",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fptrauth-objc-isa-mode",
          "Description": "Authentication mode for ObjC isa field. Full auth if unspecified",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-fptrauth-objc-isa",
          "Description": "Enable signing and authentication of Objective-C object\u0027s \u0027isa\u0027 field",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fptrauth-returns",
          "Description": "Enable signing and authentication of return addresses",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fptrauth-soft",
          "Description": "Enable software lowering of pointer authentication",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fptrauth-vtable-pointer-address-discrimination",
          "Description": "Enable address discrimination of vtable pointers",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fptrauth-vtable-pointer-type-discrimination",
          "Description": "Enable type discrimination of vtable pointers",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-freciprocal-math",
          "Description": "Allow division operations to be reassociated",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-freg-struct-return",
          "Description": "Override the default ABI to return small structs in registers",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fregister-global-dtors-with-atexit",
          "Description": "Use atexit or __cxa_atexit to register global destructors",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-frelaxed-template-template-args",
          "Description": "Enable C\u002B\u002B17 relaxed template template argument matching",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-freroll-loops",
          "Description": "Turn on loop reroller",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-frewrite-imports",
          "Description": "",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-frewrite-includes",
          "Description": "",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fropi",
          "Description": "Generate read-only position independent code (ARM only)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-frtlib-add-rpath",
          "Description": "Add -rpath with architecture-specific resource directory to the linker flags",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-frtti-data",
          "Description": "",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-frtti",
          "Description": "",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-frwpi",
          "Description": "Generate read-write position independent code (ARM only)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fsanitize-address-field-padding",
          "Description": "Level of field padding for AddressSanitizer",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-fsanitize-address-globals-dead-stripping",
          "Description": "Enable linker dead stripping of globals in AddressSanitizer",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fsanitize-address-poison-custom-array-cookie",
          "Description": "Enable poisoning array cookies when using custom operator new[] in AddressSanitizer",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fsanitize-address-use-after-scope",
          "Description": "Enable use-after-scope detection in AddressSanitizer",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fsanitize-address-use-odr-indicator",
          "Description": "Enable ODR indicator globals to avoid false ODR violation reports in partially sanitized programs at the cost of an increase in binary size",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fsanitize-blacklist",
          "Description": "Path to blacklist file for sanitizers",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-fsanitize-cfi-canonical-jump-tables",
          "Description": "Make the jump table addresses canonical in the symbol table",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fsanitize-cfi-cross-dso",
          "Description": "Enable control flow integrity (CFI) checks for cross-DSO calls",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fsanitize-cfi-icall-generalize-pointers",
          "Description": "Generalize pointers in CFI indirect call type signature checks",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fsanitize-coverage-allowlist",
          "Description": "Restrict sanitizer coverage instrumentation exclusively to modules and functions that match the provided special case list, except the blocked ones",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-fsanitize-coverage-blacklist",
          "Description": "Deprecated, use -fsanitize-coverage-blocklist= instead",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-fsanitize-coverage-blocklist",
          "Description": "Disable sanitizer coverage instrumentation for modules and functions that match the provided special case list, even the allowed ones",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-fsanitize-coverage-whitelist",
          "Description": "Deprecated, use -fsanitize-coverage-allowlist= instead",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-fsanitize-coverage",
          "Description": "Specify the type of coverage instrumentation for Sanitizers",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-fsanitize-hwaddress-abi",
          "Description": "Select the HWAddressSanitizer ABI to target (interceptor or platform, default interceptor). This option is currently unused",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-fsanitize-memory-track-origins",
          "Description": "Enable origins tracking in MemorySanitizer",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ],
              "Optional": true
            }
          ]
        },
        {
          "Name": "-fsanitize-memory-use-after-dtor",
          "Description": "Enable use-after-destroy detection in MemorySanitizer",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fsanitize-recover",
          "Description": "Enable recovery for specified sanitizers",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-fsanitize-stats",
          "Description": "Enable sanitizer statistics gathering",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fsanitize-system-blacklist",
          "Description": "Path to system blacklist file for sanitizers",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-fsanitize-thread-atomics",
          "Description": "Enable atomic operations instrumentation in ThreadSanitizer (default)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fsanitize-thread-func-entry-exit",
          "Description": "Enable function entry/exit instrumentation in ThreadSanitizer (default)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fsanitize-thread-memory-access",
          "Description": "Enable memory access instrumentation in ThreadSanitizer (default)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fsanitize-trap",
          "Description": "Enable trapping for sanitizers",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-fsanitize-undefined-strip-path-components",
          "Description": "Strip (or keep only, if negative) a given number of path components when emitting check metadata",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "number",
                  "Description": "number",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-fsanitize",
          "Description": "Turn on runtime checks for various forms of undefined or suspicious behavior. See user manual for available checks",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "check",
                  "Description": "check",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-fsave-optimization-record",
          "Description": "Generate an optimization record file in a specific format",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "format",
                  "Description": "format",
                  "Type": "String"
                }
              ],
              "Optional": true
            }
          ]
        },
        {
          "Name": "-fseh-exceptions",
          "Description": "Use SEH style exceptions",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fshort-enums",
          "Description": "Allocate to an enum type only as many bytes as it needs for the declared range of possible values",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fshort-wchar",
          "Description": "Force wchar_t to be a short unsigned int",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fshow-column",
          "Description": "",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fshow-overloads",
          "Description": "Which overload candidates to show when overload resolution fails: best|all; defaults to all",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                },
                {
                  "Name": "best",
                  "Description": "value"
                },
                {
                  "Name": "all",
                  "Description": "value"
                }
              ]
            }
          ]
        },
        {
          "Name": "-fsigned-char",
          "Description": "Char is signed",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fsized-deallocation",
          "Description": "Enable C\u002B\u002B14 sized global deallocation functions",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fsjlj-exceptions",
          "Description": "Use SjLj style exceptions",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fslp-vectorize",
          "Description": "Enable the superword-level parallelism vectorization passes",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fsmall-block-descriptors",
          "Description": "Enable small block descriptors",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fsplit-dwarf-inlining",
          "Description": "Provide minimal debug info in the object/executable to facilitate online symbolication/stack traces in the absence of .dwo/.dwp files when using Split DWARF",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fsplit-lto-unit",
          "Description": "Enables splitting of the LTO unit",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fstack-check",
          "Description": "Enable stack checking",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fstack-clash-protection",
          "Description": "Enable stack clash protection",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fstack-protector-all",
          "Description": "Enable stack protectors for all functions",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fstack-protector-strong",
          "Description": "Enable stack protectors for some functions vulnerable to stack smashing. Compared to -fstack-protector, this uses a stronger heuristic that includes functions containing arrays of any size (and any type), as well as any calls to alloca or the taking of an address from a local variable",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fstack-protector",
          "Description": "Enable stack protectors for some functions vulnerable to stack smashing. This uses a loose heuristic which considers functions vulnerable if they contain a char (or 8bit integer) array or constant sized calls to alloca, which are of greater size than ssp-buffer-size (default: 8 bytes). All variable sized calls to alloca are considered vulnerable",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fstack-size-section",
          "Description": "Emit section containing metadata on function stack sizes",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fstandalone-debug",
          "Description": "Emit full debug info for all types used by the program",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fstrict-enums",
          "Description": "Enable optimizations based on the strict definition of an enum\u0027s value range",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fstrict-float-cast-overflow",
          "Description": "Assume that overflowing float-to-int casts are undefined (default)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fstrict-return",
          "Description": "",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fstrict-vtable-pointers",
          "Description": "Enable optimizations based on the strict rules for overwriting polymorphic C\u002B\u002B objects",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fsycl",
          "Description": "Enable SYCL kernels compilation for device",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fsystem-module",
          "Description": "Build this module as a system module. Only used with -emit-module",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-ftarget-variant-availability-checks",
          "Description": "Enable availability checks for the target variant platform",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fthin-link-bitcode",
          "Description": "Write minimized bitcode to \u003Cfile\u003E for the ThinLTO thin link only",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-fthinlto-index",
          "Description": "Perform ThinLTO importing using provided function summary index",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-ftime-trace-granularity",
          "Description": "Minimum time granularity (in microseconds) traced by time profiler",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-ftime-trace",
          "Description": "Turn on time profiler. Generates JSON file based on output filename",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-ftrap-function",
          "Description": "Issue call to specified function rather than a trap instruction",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-ftrapv-handler",
          "Description": "Specify the function to be called on overflow",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "function name",
                  "Description": "function name",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-ftrapv",
          "Description": "Trap on integer overflow",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-ftrigraphs",
          "Description": "Process trigraph sequences",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-ftrivial-auto-var-init-stop-after",
          "Description": "Stop initializing trivial automatic stack variables after the specified number of instances",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-ftrivial-auto-var-init",
          "Description": "Initialize trivial automatic stack variables",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                },
                {
                  "Name": "uninitialized",
                  "Description": "value"
                },
                {
                  "Name": "pattern",
                  "Description": "value"
                }
              ]
            }
          ]
        },
        {
          "Name": "-funique-basic-block-section-names",
          "Description": "Use unique names for basic block sections (ELF Only)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-funique-internal-linkage-names",
          "Description": "Uniqueify Internal Linkage Symbol Names by appending the MD5 hash of the module path",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-funique-section-names",
          "Description": "",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-funroll-loops",
          "Description": "Turn on loop unroller",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fuse-init-array",
          "Description": "",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fuse-line-directives",
          "Description": "Use #line in preprocessed output",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fvalidate-ast-input-files-content",
          "Description": "Compute and store the hash of input files used to build an AST. Files with mismatching mtime\u0027s are considered valid if both contents is identical",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fveclib",
          "Description": "Use the given vector functions library",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-fvectorize",
          "Description": "Enable the loop vectorization passes",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fverbose-asm",
          "Description": "Generate verbose assembly output",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fvirtual-function-elimination",
          "Description": "Enables dead virtual function elimination optimization. Requires -flto=full",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fvisibility-global-new-delete-hidden",
          "Description": "Give global C\u002B\u002B operator new and delete declarations hidden visibility",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fvisibility-inlines-hidden-static-local-var",
          "Description": "When -fvisibility-inlines-hidden is enabled, static variables in inline C\u002B\u002B member functions will also be given hidden visibility by default",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fvisibility-inlines-hidden",
          "Description": "Give inline C\u002B\u002B member functions hidden visibility by default",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fvisibility-ms-compat",
          "Description": "Give global types \u0027default\u0027 visibility and global functions and variables \u0027hidden\u0027 visibility by default",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fvisibility",
          "Description": "Set the default symbol visibility for all global declarations",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-fwasm-exceptions",
          "Description": "Use WebAssembly style exceptions",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fwhole-program-vtables",
          "Description": "Enables",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fwrapv",
          "Description": "Treat signed integer overflow as two\u0027s complement",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fwritable-strings",
          "Description": "Store string literals as writable data",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fxray-always-emit-customevents",
          "Description": "Always emit __xray_customevent(...) calls even if the containing function is not always instrumented",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fxray-always-emit-typedevents",
          "Description": "Always emit __xray_typedevent(...) calls even if the containing function is not always instrumented",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fxray-always-instrument",
          "Description": "DEPRECATED: Filename defining the whitelist for imbuing the \u0027always instrument\u0027 XRay attribute",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-fxray-attr-list",
          "Description": "Filename defining the list of functions/types for imbuing XRay attributes",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-fxray-function-index",
          "Description": "",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fxray-ignore-loops",
          "Description": "Don\u0027t instrument functions with loops unless they also meet the minimum function size",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fxray-instruction-threshold",
          "Description": "Sets the minimum function size to instrument with XRay",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-fxray-instrumentation-bundle",
          "Description": "Select which XRay instrumentation points to emit. \u0027function\u0027 includes both \u0027function-entry\u0027 and \u0027function-exit\u0027",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "fxray-instrumentation-bundle",
                  "Description": "fxray-instrumentation-bundle",
                  "Type": "String"
                },
                {
                  "Name": "all",
                  "Description": "fxray-instrumentation-bundle"
                },
                {
                  "Name": "none",
                  "Description": "fxray-instrumentation-bundle"
                },
                {
                  "Name": "function-entry",
                  "Description": "fxray-instrumentation-bundle"
                },
                {
                  "Name": "function-exit",
                  "Description": "fxray-instrumentation-bundle"
                },
                {
                  "Name": "function",
                  "Description": "fxray-instrumentation-bundle"
                },
                {
                  "Name": "custom",
                  "Description": "fxray-instrumentation-bundle"
                }
              ]
            }
          ]
        },
        {
          "Name": "-fxray-instrument",
          "Description": "Generate XRay instrumentation sleds on function entry and exit",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fxray-link-deps",
          "Description": "Tells clang to add the link dependencies for XRay",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fxray-modes",
          "Description": "List of modes to link in by default into XRay instrumented binaries",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-fxray-never-instrument",
          "Description": "DEPRECATED: Filename defining the whitelist for imbuing the \u0027never instrument\u0027 XRay attribute",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-fzero-initialized-in-bss",
          "Description": "",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-fzvector",
          "Description": "Enable System z vector language extension",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "F",
          "Description": "Add directory to framework include search path",
          "Type": "Flag",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "--gcc-toolchain",
          "Description": "Use the gcc toolchain at the given directory",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-gcodeview-ghash",
          "Description": "Emit type record hashes in a .debug$H section",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-gcodeview",
          "Description": "Generate CodeView debug information",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-gdwarf-2",
          "Description": "Generate source-level debug information with dwarf version 2",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-gdwarf-3",
          "Description": "Generate source-level debug information with dwarf version 3",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-gdwarf-4",
          "Description": "Generate source-level debug information with dwarf version 4",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-gdwarf-5",
          "Description": "Generate source-level debug information with dwarf version 5",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-gdwarf",
          "Description": "Generate source-level debug information with the default dwarf version",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-gembed-source",
          "Description": "Embed source text in DWARF debug sections",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-gline-directives-only",
          "Description": "Emit debug line info directives only",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-gline-tables-only",
          "Description": "Emit debug line number tables only",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-gmodules",
          "Description": "Generate debug info with external references to clang modules or precompiled headers",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-gno-embed-source",
          "Description": "Restore the default behavior of not embedding source text in DWARF debug sections",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-gno-inline-line-tables",
          "Description": "Don\u0027t",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--gpu-max-threads-per-block",
          "Description": "Default max threads per block for kernel launch bounds for HIP",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-gsplit-dwarf",
          "Description": "Set DWARF fission mode to either \u0027split\u0027 or \u0027single\u0027",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-gz",
          "Description": "DWARF debug sections compression type",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ],
              "Optional": true
            }
          ]
        },
        {
          "Name": "G",
          "Description": "Put objects of at most \u003Csize\u003E bytes into small data section (MIPS / Hexagon)",
          "Type": "Flag",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "size",
                  "Description": "size",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "g",
          "Description": "Generate source-level debug information",
          "Type": "Flag",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--help-hidden",
          "Description": "Display help for hidden options",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-help",
          "Description": "Display available options",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--hip-device-lib",
          "Description": "HIP device library",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "--hip-link",
          "Description": "Link clang-offload-bundler bundles for HIP",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--hip-version",
          "Description": "HIP version in the format of major.minor.patch",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "H",
          "Description": "Show header includes and nesting depth",
          "Type": "Flag",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-I-",
          "Description": "Restrict all prior -I flags to double-quoted inclusion and remove current directory from include path",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-iapinotes-modules",
          "Description": "Add directory to the API notes search path referenced by module name",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "directory",
                  "Description": "directory",
                  "Type": "Directory"
                }
              ]
            }
          ]
        },
        {
          "Name": "-ibuiltininc",
          "Description": "Enable builtin #include directories even when -nostdinc is used before or after -ibuiltininc. Using -nobuiltininc after the option disables it",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-idirafter",
          "Description": "Add directory to AFTER include search path",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-iframeworkwithsysroot",
          "Description": "Add directory to SYSTEM framework search path, absolute paths are relative to -isysroot",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "directory",
                  "Description": "directory",
                  "Type": "Directory"
                }
              ]
            }
          ]
        },
        {
          "Name": "-iframework",
          "Description": "Add directory to SYSTEM framework search path",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-imacros",
          "Description": "Include macros from file before parsing",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "file",
                  "Description": "file",
                  "Type": "FileSystemEntry"
                }
              ]
            }
          ]
        },
        {
          "Name": "-include-pch",
          "Description": "Include precompiled header file",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "file",
                  "Description": "file",
                  "Type": "FileSystemEntry"
                }
              ]
            }
          ]
        },
        {
          "Name": "-include",
          "Description": "Include file before parsing",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "file",
                  "Description": "file",
                  "Type": "FileSystemEntry"
                }
              ]
            }
          ]
        },
        {
          "Name": "-index-header-map",
          "Description": "Make the next included directory (-I or -F) an indexer header map",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-index-ignore-system-symbols",
          "Description": "Ignore symbols from system headers",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-index-record-codegen-name",
          "Description": "Record the codegen name for symbols",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-index-store-path",
          "Description": "Enable indexing with the specified data store path",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-iprefix",
          "Description": "Set the -iwithprefix/-iwithprefixbefore prefix",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "dir",
                  "Description": "dir",
                  "Type": "Directory"
                }
              ]
            }
          ]
        },
        {
          "Name": "-iquote",
          "Description": "Add directory to QUOTE include search path",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "directory",
                  "Description": "directory",
                  "Type": "Directory"
                }
              ]
            }
          ]
        },
        {
          "Name": "-isysroot",
          "Description": "Set the system root directory (usually /)",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "dir",
                  "Description": "dir",
                  "Type": "Directory"
                }
              ]
            }
          ]
        },
        {
          "Name": "-isystem-after",
          "Description": "Add directory to end of the SYSTEM include search path",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "directory",
                  "Description": "directory",
                  "Type": "Directory"
                }
              ]
            }
          ]
        },
        {
          "Name": "-isystem",
          "Description": "Add directory to SYSTEM include search path",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "directory",
                  "Description": "directory",
                  "Type": "Directory"
                }
              ]
            }
          ]
        },
        {
          "Name": "-ivfsoverlay",
          "Description": "Overlay the virtual filesystem described by file over the real file system",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-iwithprefixbefore",
          "Description": "Set directory to include search path with prefix",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "dir",
                  "Description": "dir",
                  "Type": "Directory"
                }
              ]
            }
          ]
        },
        {
          "Name": "-iwithprefix",
          "Description": "Set directory to SYSTEM include search path with prefix",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "dir",
                  "Description": "dir",
                  "Type": "Directory"
                }
              ]
            }
          ]
        },
        {
          "Name": "-iwithsysroot",
          "Description": "Add directory to SYSTEM include search path, absolute paths are relative to -isysroot",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "directory",
                  "Description": "directory",
                  "Type": "Directory"
                }
              ]
            }
          ]
        },
        {
          "Name": "I",
          "Description": "Add directory to include search path",
          "Type": "Flag",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "dir",
                  "Description": "dir",
                  "Type": "Directory"
                }
              ]
            }
          ]
        },
        {
          "Name": "--libomptarget-nvptx-path",
          "Description": "Path to libomptarget-nvptx libraries",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "L",
          "Description": "Add directory to library search path",
          "Type": "Flag",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "dir",
                  "Description": "dir",
                  "Type": "Directory"
                }
              ]
            }
          ]
        },
        {
          "Name": "-mabicalls",
          "Description": "Enable SVR4-style position-independent code (Mips only)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-maix-struct-return",
          "Description": "Return all structs in memory (PPC32 only)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-malign-branch-boundary",
          "Description": "Specify the boundary\u0027s size to align branches",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-malign-branch",
          "Description": "Specify types of branches to align",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-malign-double",
          "Description": "Align doubles to two words in structs (x86 only)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-mbackchain",
          "Description": "Link stack frames through backchain on System Z",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-mbranch-protection",
          "Description": "Enforce targets of indirect branches and function returns",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-mbranches-within-32B-boundaries",
          "Description": "Align selected branches (fused, jcc, jmp) within 32-byte boundary",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-mcmodel",
          "Description": "Equivalent to -mcmodel=medium, compatible with RISC-V gcc",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "edan",
                  "Description": "edan",
                  "Type": "String"
                }
              ],
              "Optional": true
            }
          ]
        },
        {
          "Name": "-mcmse",
          "Description": "Allow use of CMSE (Armv8-M Security Extensions)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-mcode-object-v3",
          "Description": "Enable code object v3 (AMDGPU only)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-mcrc",
          "Description": "Allow use of CRC instructions (ARM/Mips only)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-mcumode",
          "Description": "CU wavefront execution mode is used (AMDGPU only)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-mdouble",
          "Description": "Force double to be 32 bits or 64 bits",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-MD",
          "Description": "Write a depfile containing user and system headers",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-meabi",
          "Description": "Set EABI type, e.g. 4, 5 or gnu (default depends on triple)",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-membedded-data",
          "Description": "Place constants in the .rodata section instead of the .sdata section even if they meet the -G \u003Csize\u003E threshold (MIPS)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-menable-experimental-extensions",
          "Description": "Enable use of experimental RISC-V extensions",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-mexec-model",
          "Description": "Execution model (WebAssembly only)",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-mexecute-only",
          "Description": "Disallow generation of data access to code sections (ARM only)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-mextern-sdata",
          "Description": "Assume that externally defined data is in the small data if it meets the -G \u003Csize\u003E threshold (MIPS)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-mfentry",
          "Description": "Insert calls to fentry at function entry (x86/SystemZ only)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-mfix-cortex-a53-835769",
          "Description": "Workaround",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-mfp32",
          "Description": "Use 32-bit floating point registers (MIPS only)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-mfp64",
          "Description": "Use 64-bit floating point registers (MIPS only)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-MF",
          "Description": "Write depfile output from -MMD, -MD, -MM, or -M to \u003Cfile\u003E",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "file",
                  "Description": "file",
                  "Type": "FileSystemEntry"
                }
              ]
            }
          ]
        },
        {
          "Name": "-mgeneral-regs-only",
          "Description": "Generate code which only uses the general purpose registers (AArch64 only)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-mglobal-merge",
          "Description": "Enable merging of globals",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-mgpopt",
          "Description": "Use GP relative accesses for symbols known to be in a small data section (MIPS)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-MG",
          "Description": "Add missing headers to depfile",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-mharden-sls",
          "Description": "Select straight-line speculation hardening scope",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-mhvx-length",
          "Description": "Set Hexagon Vector Length",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-mhvx",
          "Description": "Enable Hexagon Vector eXtensions",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ],
              "Optional": true
            }
          ]
        },
        {
          "Name": "-miamcu",
          "Description": "Use Intel MCU ABI",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--migrate",
          "Description": "Run the migrator",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-mincremental-linker-compatible",
          "Description": "(integrated-as) Emit an object file which can be used with an incremental linker",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-mindirect-jump",
          "Description": "Change indirect jump instructions to inhibit speculation",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-mios-version-min",
          "Description": "Set iOS deployment target",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-MJ",
          "Description": "Write a compilation database entry per input",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-mllvm",
          "Description": "Additional arguments to forward to LLVM\u0027s option processing",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-mlocal-sdata",
          "Description": "Extend the -G behaviour to object local data (MIPS)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-mlong-calls",
          "Description": "Generate branches with extended addressability, usually via indirect jumps",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-mlong-double-128",
          "Description": "Force long double to be 128 bits",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-mlong-double-64",
          "Description": "Force long double to be 64 bits",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-mlong-double-80",
          "Description": "Force long double to be 80 bits, padded to 128 bits for storage",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-mlvi-cfi",
          "Description": "Enable only control-flow mitigations for Load Value Injection (LVI)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-mlvi-hardening",
          "Description": "Enable all mitigations for Load Value Injection (LVI)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-mmacosx-version-min",
          "Description": "Set Mac OS X deployment target",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-mmadd4",
          "Description": "Enable the generation of 4-operand madd.s, madd.d and related instructions",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-MMD",
          "Description": "Write a depfile containing user headers",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-mmemops",
          "Description": "Enable generation of memop instructions",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-mms-bitfields",
          "Description": "Set the default structure layout to be compatible with the Microsoft compiler standard",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-mmsa",
          "Description": "Enable MSA ASE (MIPS only)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-mmt",
          "Description": "Enable MT ASE (MIPS only)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-MM",
          "Description": "Like -MMD, but also implies -E and writes to stdout by default",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-mno-abicalls",
          "Description": "Disable SVR4-style position-independent code (Mips only)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-mno-code-object-v3",
          "Description": "Disable code object v3 (AMDGPU only)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-mno-crc",
          "Description": "Disallow use of CRC instructions (Mips only)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-mno-cumode",
          "Description": "WGP wavefront execution mode is used (AMDGPU only)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-mno-embedded-data",
          "Description": "Do not place constants in the .rodata section instead of the .sdata if they meet the -G \u003Csize\u003E threshold (MIPS)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-mno-execute-only",
          "Description": "Allow generation of data access to code sections (ARM only)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-mno-extern-sdata",
          "Description": "Do not assume that externally defined data is in the small data if it meets the -G \u003Csize\u003E threshold (MIPS)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-mno-fix-cortex-a53-835769",
          "Description": "Don\u0027t workaround Cortex-A53 erratum 835769 (AArch64 only)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-mno-global-merge",
          "Description": "Disable merging of globals",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-mno-gpopt",
          "Description": "Do not use GP relative accesses for symbols known to be in a small data section (MIPS)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-mno-hvx",
          "Description": "Disable Hexagon Vector eXtensions",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-mno-implicit-float",
          "Description": "Don\u0027t generate implicit floating point instructions",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-mno-incremental-linker-compatible",
          "Description": "(integrated-as) Emit an object file which cannot be used with an incremental linker",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-mno-local-sdata",
          "Description": "Do not extend the -G behaviour to object local data (MIPS)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-mno-long-calls",
          "Description": "Restore the default behaviour of not generating long calls",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-mno-lvi-cfi",
          "Description": "Disable control-flow mitigations for Load Value Injection (LVI)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-mno-lvi-hardening",
          "Description": "Disable mitigations for Load Value Injection (LVI)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-mno-madd4",
          "Description": "Disable the generation of 4-operand madd.s, madd.d and related instructions",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-mno-memops",
          "Description": "Disable generation of memop instructions",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-mno-movt",
          "Description": "Disallow use of movt/movw pairs (ARM only)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-mno-ms-bitfields",
          "Description": "Do not set the default structure layout to be compatible with the Microsoft compiler standard",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-mno-msa",
          "Description": "Disable MSA ASE (MIPS only)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-mno-mt",
          "Description": "Disable MT ASE (MIPS only)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-mno-neg-immediates",
          "Description": "Disallow converting instructions with negative immediates to their negation or inversion",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-mno-nvj",
          "Description": "Disable generation of new-value jumps",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-mno-nvs",
          "Description": "Disable generation of new-value stores",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-mno-outline",
          "Description": "Disable function outlining (AArch64 only)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-mno-packets",
          "Description": "Disable generation of instruction packets",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-mno-relax",
          "Description": "Disable linker relaxation",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-mno-restrict-it",
          "Description": "Allow generation of deprecated IT blocks for ARMv8. It is off by default for ARMv8 Thumb mode",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-mno-save-restore",
          "Description": "Disable using library calls for save and restore",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-mno-seses",
          "Description": "Disable speculative execution side effect suppression (SESES)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-mno-sram-ecc",
          "Description": "Disable SRAM ECC (AMDGPU only)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-mno-stack-arg-probe",
          "Description": "Disable stack probes which are enabled by default",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-mno-tls-direct-seg-refs",
          "Description": "Disable direct TLS access through segment registers",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-mno-unaligned-access",
          "Description": "Force all memory accesses to be aligned (AArch32/AArch64 only)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-mno-wavefrontsize64",
          "Description": "Wavefront size 32 is used",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-mno-xnack",
          "Description": "Disable XNACK (AMDGPU only)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-mnocrc",
          "Description": "Disallow use of CRC instructions (ARM only)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-mnop-mcount",
          "Description": "Generate mcount/__fentry__ calls as nops. To activate they need to be patched in",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-mnvj",
          "Description": "Enable generation of new-value jumps",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-mnvs",
          "Description": "Enable generation of new-value stores",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-module-dependency-dir",
          "Description": "Directory to dump module dependencies to",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-module-file-info",
          "Description": "Provide information about a particular module file",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-momit-leaf-frame-pointer",
          "Description": "Omit frame pointer setup for leaf functions",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-moutline",
          "Description": "Enable function outlining (AArch64 only)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-mpacked-stack",
          "Description": "Use packed stack layout (SystemZ only)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-mpackets",
          "Description": "Enable generation of instruction packets",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-mpad-max-prefix-size",
          "Description": "Specify maximum number of prefixes to use for padding",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-mpie-copy-relocations",
          "Description": "Use copy relocations support for PIE builds",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-mprefer-vector-width",
          "Description": "Specifies preferred vector width for auto-vectorization. Defaults to \u0027none\u0027 which allows target specific decisions",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-MP",
          "Description": "Create phony target for each dependency (other than main file)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-mqdsp6-compat",
          "Description": "Enable hexagon-qdsp6 backward compatibility",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-MQ",
          "Description": "Specify name of main file output to quote in depfile",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-mrecord-mcount",
          "Description": "Generate a __mcount_loc section entry for each __fentry__ call",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-mrelax-all",
          "Description": "(integrated-as) Relax all machine instructions",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-mrelax",
          "Description": "Enable linker relaxation",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-mrestrict-it",
          "Description": "Disallow generation of deprecated IT blocks for ARMv8. It is on by default for ARMv8 Thumb mode",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-mrtd",
          "Description": "Make StdCall calling convention the default",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-msave-restore",
          "Description": "Enable using library calls for save and restore",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-mseses",
          "Description": "Enable speculative execution side effect suppression (SESES). Includes LVI control flow integrity mitigations",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-msign-return-address",
          "Description": "Select return address signing scope",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-msmall-data-limit",
          "Description": "Put global and static data smaller than the limit into a special section",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-msoft-float",
          "Description": "Use software floating point",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-msram-ecc",
          "Description": "Enable SRAM ECC (AMDGPU only)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-mstack-alignment",
          "Description": "Set the stack alignment",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-mstack-arg-probe",
          "Description": "Enable stack probes",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-mstack-probe-size",
          "Description": "Set the stack probe size",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-mstackrealign",
          "Description": "Force realign the stack at entry to every function",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-msvr4-struct-return",
          "Description": "Return small structs in registers (PPC32 only)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-mthread-model",
          "Description": "The thread model to use, e.g. posix, single (posix by default)",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-mtls-direct-seg-refs",
          "Description": "Enable direct TLS access through segment registers (default)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-mtls-size",
          "Description": "Specify bit size of immediate TLS offsets (AArch64 ELF only): 12 (for 4KB) | 24 (for 16MB, default) | 32 (for 4GB) | 48 (for 256TB, needs -mcmodel=large)",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                },
                {
                  "Name": "12",
                  "Description": "value"
                },
                {
                  "Name": "24",
                  "Description": "value"
                },
                {
                  "Name": "32",
                  "Description": "value"
                },
                {
                  "Name": "48",
                  "Description": "value"
                }
              ]
            }
          ]
        },
        {
          "Name": "-mtp",
          "Description": "Thread pointer access method (AArch32/AArch64 only)",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-mtune",
          "Description": "Accepted for compatibility with GCC. Currently has no effect",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-MT",
          "Description": "Specify name of main file output in depfile",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-munaligned-access",
          "Description": "Allow memory accesses to be unaligned (AArch32/AArch64 only)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-MV",
          "Description": "Use NMake/Jom format for the depfile",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-mwavefrontsize64",
          "Description": "Wavefront size 64 is used",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-mxnack",
          "Description": "Enable XNACK (AMDGPU only)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "M",
          "Description": "Like -MD, but also implies -E and writes to stdout by default",
          "Type": "Flag",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--no-cuda-include-ptx",
          "Description": "Do not include PTX for the following GPU architecture (e.g. sm_35) or \u0027all\u0027. May be specified more than once",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "--no-cuda-version-check",
          "Description": "Don\u0027t",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--no-offload-arch",
          "Description": "Remove CUDA/HIP offloading device architecture (e.g. sm_35, gfx906) from the list of devices to compile for. \u0027all\u0027 resets the list to its default value",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "--no-system-header-prefix",
          "Description": "Treat all #include paths starting with \u003Cprefix\u003E as not including a system header",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "prefix",
                  "Description": "prefix",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-nobuiltininc",
          "Description": "Disable builtin #include directories",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-nogpulib",
          "Description": "Do not link device library for CUDA/HIP device compilation",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-nostdinc\u002B\u002B",
          "Description": "Disable standard #include directories for the C\u002B\u002B standard library",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-ObjC\u002B\u002B",
          "Description": "Treat source input files as Objective-C\u002B\u002B inputs",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-objcmt-atomic-property",
          "Description": "Make",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-objcmt-migrate-all",
          "Description": "Enable migration to modern ObjC",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-objcmt-migrate-annotation",
          "Description": "Enable migration to property and method annotations",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-objcmt-migrate-designated-init",
          "Description": "Enable migration to infer NS_DESIGNATED_INITIALIZER for initializer methods",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-objcmt-migrate-instancetype",
          "Description": "Enable migration to infer instancetype for method result type",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-objcmt-migrate-literals",
          "Description": "Enable migration to modern ObjC literals",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-objcmt-migrate-ns-macros",
          "Description": "Enable migration to NS_ENUM/NS_OPTIONS macros",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-objcmt-migrate-property-dot-syntax",
          "Description": "Enable migration of setter/getter messages to property-dot syntax",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-objcmt-migrate-property",
          "Description": "Enable migration to modern ObjC property",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-objcmt-migrate-protocol-conformance",
          "Description": "Enable migration to add protocol conformance on classes",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-objcmt-migrate-readonly-property",
          "Description": "Enable migration to modern ObjC readonly property",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-objcmt-migrate-readwrite-property",
          "Description": "Enable migration to modern ObjC readwrite property",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-objcmt-migrate-subscripting",
          "Description": "Enable migration to modern ObjC subscripting",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-objcmt-ns-nonatomic-iosonly",
          "Description": "Enable migration to use NS_NONATOMIC_IOSONLY macro for setting property\u0027s \u0027atomic\u0027 attribute",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-objcmt-returns-innerpointer-property",
          "Description": "Enable migration to annotate property with NS_RETURNS_INNER_POINTER",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-objcmt-whitelist-dir-path",
          "Description": "Only modify files with a filename contained in the provided directory path",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-ObjC",
          "Description": "Treat source input files as Objective-C inputs",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "o",
          "Description": "Write output to \u003Cfile\u003E",
          "Type": "Flag",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "file",
                  "Description": "file",
                  "Type": "FileSystemEntry"
                }
              ]
            }
          ]
        },
        {
          "Name": "-pg",
          "Description": "Enable mcount instrumentation",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-pipe",
          "Description": "Use pipes between commands, when possible",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--precompile",
          "Description": "Only precompile the input",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-print-effective-triple",
          "Description": "Print",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-print-file-name",
          "Description": "Print the full library path",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "file",
                  "Description": "file",
                  "Type": "FileSystemEntry"
                }
              ]
            }
          ]
        },
        {
          "Name": "-print-ivar-layout",
          "Description": "Enable Objective-C Ivar layout bitmap print trace",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-print-libgcc-file-name",
          "Description": "Print",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-print-prog-name",
          "Description": "Print the full program path of \u003Cname\u003E",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "name",
                  "Description": "name",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-print-resource-dir",
          "Description": "Print the resource directory pathname",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-print-search-dirs",
          "Description": "Print the paths used for finding libraries and programs",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-print-supported-cpus",
          "Description": "Print supported cpu models for the given target (if target is not specified, it will print the supported cpus for the default target)",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-print-target-triple",
          "Description": "Print the normalized target triple",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-print-targets",
          "Description": "Print the registered targets",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-pthread",
          "Description": "Support POSIX threads in generated code",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--ptxas-path",
          "Description": "Path to ptxas (used for compiling CUDA code)",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "P",
          "Description": "Disable linemarker output in -E mode",
          "Type": "Flag",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-Qn",
          "Description": "Do not emit metadata containing compiler name and version",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-Qunused-arguments",
          "Description": "Don\u0027t emit warning for unused driver arguments",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-Qy",
          "Description": "Emit metadata containing compiler name and version",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-relocatable-pch",
          "Description": "Whether to build a relocatable precompiled header",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-rewrite-legacy-objc",
          "Description": "Rewrite Legacy Objective-C source to C\u002B\u002B",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-rewrite-objc",
          "Description": "Rewrite Objective-C source to C\u002B\u002B",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--rocm-device-lib-path",
          "Description": "ROCm device library path. Alternative to rocm-path",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "--rocm-path",
          "Description": "ROCm installation path, used for finding and automatically linking required bitcode libraries",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-Rpass-analysis",
          "Description": "Report transformation analysis from optimization passes whose name matches the given POSIX regular expression",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-Rpass-missed",
          "Description": "Report missed transformations by optimization passes whose name matches the given POSIX regular expression",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-Rpass",
          "Description": "Report transformations performed by optimization passes whose name matches the given POSIX regular expression",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-rtlib",
          "Description": "Compiler runtime library to use",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "R",
          "Description": "Enable the specified remark",
          "Type": "Flag",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "remark",
                  "Description": "remark",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-save-stats",
          "Description": "Save llvm statistics",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ],
              "Optional": true
            }
          ]
        },
        {
          "Name": "-save-temps",
          "Description": "Save intermediate compilation results",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ],
              "Optional": true
            }
          ]
        },
        {
          "Name": "-serialize-diagnostics",
          "Description": "Serialize compiler diagnostics to a file",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-shared-libsan",
          "Description": "Dynamically link the sanitizer runtime",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-static-libsan",
          "Description": "Statically link the sanitizer runtime",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-static-openmp",
          "Description": "Use the static host OpenMP runtime while linking",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-stdlib\u002B\u002B-isystem",
          "Description": "Use directory as the C\u002B\u002B standard library include path",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "directory",
                  "Description": "directory",
                  "Type": "Directory"
                }
              ]
            }
          ]
        },
        {
          "Name": "-stdlib",
          "Description": "C\u002B\u002B standard library to use",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-sycl-std",
          "Description": "SYCL language standard to compile for",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "--system-header-prefix",
          "Description": "Treat all #include paths starting with \u003Cprefix\u003E as including a system header",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "prefix",
                  "Description": "prefix",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "S",
          "Description": "Only run preprocess and compilation steps",
          "Type": "Flag",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-target-variant",
          "Description": "Generate code that may run on a particular variant of the deployment target",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "--target",
          "Description": "Generate code for the given target",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-Tbss",
          "Description": "Set starting address of BSS to \u003Caddr\u003E",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "addr",
                  "Description": "addr",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-Tdata",
          "Description": "Set starting address of DATA to \u003Caddr\u003E",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "addr",
                  "Description": "addr",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-time",
          "Description": "Time individual commands",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-traditional-cpp",
          "Description": "Enable some traditional CPP emulation",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-trigraphs",
          "Description": "Process trigraph sequences",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-Ttext",
          "Description": "Set starting address of TEXT to \u003Caddr\u003E",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "addr",
                  "Description": "addr",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "T",
          "Description": "Specify \u003Cscript\u003E as linker script",
          "Type": "Flag",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "script",
                  "Description": "script",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-undef",
          "Description": "Undef all system defines",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-unwindlib",
          "Description": "Unwind library to use",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "U",
          "Description": "Undefine macro \u003Cmacro\u003E",
          "Type": "Flag",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "macro",
                  "Description": "macro",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "--verify-debug-info",
          "Description": "Verify the binary representation of debug output",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-verify-pch",
          "Description": "Load and verify that a pre-compiled header file is not stale",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "--version",
          "Description": "Print version information",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "v",
          "Description": "Show commands to run and use verbose output",
          "Type": "Flag",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-Wdeprecated",
          "Description": "Enable warnings for deprecated constructs and define __DEPRECATED",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-working-directory",
          "Description": "Resolve file paths relative to the specified directory",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "w",
          "Description": "Suppress all warnings",
          "Type": "Flag",
          "Aliases": [],
          "Arguments": []
        },
        {
          "Name": "-Xanalyzer",
          "Description": "Pass \u003Carg\u003E to the static analyzer",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "arg",
                  "Description": "arg",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-Xarch_device",
          "Description": "Pass \u003Carg\u003E to the CUDA/HIP device compilation",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "arg",
                  "Description": "arg",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-Xarch_host",
          "Description": "Pass \u003Carg\u003E to the CUDA/HIP host compilation",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "arg",
                  "Description": "arg",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-Xassembler",
          "Description": "Pass \u003Carg\u003E to the assembler",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "arg",
                  "Description": "arg",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-Xclang",
          "Description": "Pass \u003Carg\u003E to the clang compiler",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "arg",
                  "Description": "arg",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-Xcuda-fatbinary",
          "Description": "Pass \u003Carg\u003E to fatbinary invocation",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "arg",
                  "Description": "arg",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-Xcuda-ptxas",
          "Description": "Pass \u003Carg\u003E to the ptxas assembler",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "arg",
                  "Description": "arg",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-Xlinker",
          "Description": "Pass \u003Carg\u003E to the linker",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "arg",
                  "Description": "arg",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-Xopenmp-target",
          "Description": "Pass \u003Carg\u003E to the target offloading toolchain identified by \u003Ctriple\u003E",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "triple",
                  "Description": "triple",
                  "Type": "String"
                }
              ],
              "Optional": true
            }
          ]
        },
        {
          "Name": "-Xpreprocessor",
          "Description": "Pass \u003Carg\u003E to the preprocessor",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "arg",
                  "Description": "arg",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "x",
          "Description": "Treat subsequent input files as having type \u003Clanguage\u003E",
          "Type": "Flag",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "language",
                  "Description": "language",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "z",
          "Description": "Pass -z \u003Carg\u003E to the linker",
          "Type": "Flag",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "arg",
                  "Description": "arg",
                  "Type": "String"
                }
              ]
            }
          ]
        },
        {
          "Name": "-std",
          "Description": "Language standard to compile for",
          "Aliases": [],
          "Arguments": [
            {
              "Arguments": [
                {
                  "Name": "value",
                  "Description": "value",
                  "Type": "String"
                },
                {
                  "Name": "c\u002B\u002B98",
                  "Description": "ISO C\u002B\u002B 1998 with amendments"
                },
                {
                  "Name": "gnu\u002B\u002B98",
                  "Description": "ISO C\u002B\u002B 1998 with amendments and GNU extensions"
                },
                {
                  "Name": "c\u002B\u002B11",
                  "Description": "ISO C\u002B\u002B 2011 with amendments"
                },
                {
                  "Name": "gnu\u002B\u002B11",
                  "Description": "ISO C\u002B\u002B 2011 with amendments and GNU extensions"
                },
                {
                  "Name": "c\u002B\u002B14",
                  "Description": "ISO C\u002B\u002B 2014 with amendments"
                },
                {
                  "Name": "gnu\u002B\u002B14",
                  "Description": "ISO C\u002B\u002B 2014 with amendments and GNU extensions"
                },
                {
                  "Name": "c\u002B\u002B17",
                  "Description": "ISO C\u002B\u002B 2017 with amendments"
                },
                {
                  "Name": "gnu\u002B\u002B17",
                  "Description": "ISO C\u002B\u002B 2017 with amendments and GNU extensions"
                },
                {
                  "Name": "c\u002B\u002B20",
                  "Description": "ISO C\u002B\u002B 2020 DIS"
                },
                {
                  "Name": "gnu\u002B\u002B20",
                  "Description": "ISO C\u002B\u002B 2020 DIS with GNU extensions"
                },
                {
                  "Name": "c\u002B\u002B2b",
                  "Description": "Working draft for ISO C\u002B\u002B 2023 DIS"
                },
                {
                  "Name": "gnu\u002B\u002B2b",
                  "Description": "Working draft for ISO C\u002B\u002B 2023 DIS with GNU extensions"
                }
              ]
            }
          ]
        }
      ],
      "Optional": true
    }
  ]
}